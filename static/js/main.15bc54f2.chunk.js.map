{"version":3,"sources":["redux/course/courseActions.js","redux/course/courseTypes.js","redux/settings/settingsActions.js","redux/settings/settingsTypes.js","styles/components/appStyles.js","styles/base/base.js","styles/components/headerStyles.js","componenets/layout/Header.js","componenets/pages/About.js","componenets/Notification.js","componenets/pages/Instructions.js","styles/components/homeStyles.js","componenets/SaveChanges.js","componenets/GradeFilter.js","styles/components/sideviewStyles.js","styles/components/animations.js","styles/components/programmapStyles.js","componenets/SideView.js","componenets/ResetChanges.js","componenets/CGPACalculator.js","componenets/AddCourse.js","componenets/model/CourseClass.js","componenets/Course.js","componenets/Term.js","componenets/AddTerm.js","componenets/RemoveTerm.js","componenets/ProgramMap.js","componenets/Home.js","componenets/Settings.js","App.js","serviceWorker.js","redux/course/courseReducer.js","redux/settings/settingsReducer.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["addCourse","term","courseCode","type","payload","removeTerm","index","toggleDarkmode","toggleState","dispatch","getState","darkmode","settings","nightmode","StyledAppContainer","styled","div","GlobalStyles","createGlobalStyle","StyledHeader","header","theme","button","linkStyle","color","textDecoration","Header","style","to","About","Fragment","Container","props","top","emitter","ee","notify","msg","emit","Notification","onShow","timeout","clearTimeout","setState","setTimeout","showNotification","state","on","this","Component","Instructions","listStyle","padding","StyledInner","StyledInnerTop","bgAlt","StyledInnerBottomHead","StyledInnerBottomFoot","StyledInnerBottom","expanded","buttonStyle","borderRadius","border","background","height","SaveChanges","onClick","onSaveClick","className","value","GradeFilter","onSubmit","e","preventDefault","category","val","onClickFilterByCategory","onChange","target","name","gradeFilterStyle","Label","lineHeight","width","alignSelf","Input","inputStyle","id","defaultValue","placeholder","btnStyle","propType","PropTypes","func","isRequired","display","margin","cursor","StyledContainer","sidePanel","StyledButtonShow","Button","StyledSelect","Select","breakpoint","popin","keyframes","StyledMap","Table","bg","StyledMapHead","thead","StyledMapBody","tbody","StyledMapHeading","th","StyledMapData","td","StyledMapDataAnimated","StyledMapRow","tr","StyledMapRowResponsive","StyledTermRow","StyledButton","buttonHover","StyledButtonAdd","StyledButtonDelete","StyledButtonSave","SideView","action","removedValue","getSelectOption","course","code","label","getValueFromSelectOption","option","sendNotification","selectedCourse","console","log","pC","prereqCourses","prs","map","handleClickEditPrereq","cC","coreqCourses","crs","handleClickEditCoreq","newProps","equal","updateState","first","second","result","JSON","stringify","prereq","coreq","courses","selectedTerm","selectedPrereqList","selectPrereq","slice","selectOptionsPrereq","concat","apply","filter","includes","selectedCoreqList","selectedCoreqIndex","findIndex","cl","c","selectOptionsCoreq","shouldShow","form","sytle","formStyle","buttonShowStyle","handleClickShowPrereq","bind","styles","customStyles","isMulti","options","handleClickShowCoreq","textAlign","fontWeight","handleClickEditCourse","array","number","object","container","provided","control","overflowY","ResetChanges","onResetClick","CGPACalculator","allcourses","totalPoints","reduce","prev","curr","grade","credits","totalCredits","CGPA","Math","round","length","cList","key","unshift","gradeFinderStyle","alignItems","AddCourse","performValidation","trim","find","courseList","undefined","message","Form","addCourseStyle","for","handleClickAddCourse","flexDirection","justifyContent","minHeight","marginTop","connect","CourseClass","Course","editedCourse","Number","isNaN","courseName","onSelect","focus","scrollIntoView","behavior","block","inline","handleClickSelectCourse","selectButton","appliedclasses","isHighlighted","isSelected","courseStyle","ref","theform","dragholder","FormGroup","handleClickDeleteCourse","instanceOf","bool","Term","termNumber","filteredCourses","handleDragStart","handleDragEnter","isDragging","getDraggingStyles","termDisplay","termDisplayStyle","coursesDisplay","ind","val1","termI","courseI","onDragStart","onDragEnter","draggable","AddTerm","handleClickAddTerm","addNewTermStyle","RemoveTerm","handleClick","removeTermStyle","handleClickRemoveTerm","ProgramMap","maxCourseYears","useState","dragging","setDragging","dragItem","useRef","dragNode","useDispatch","params","document","elementFromPoint","clientX","clientY","classList","contains","current","addEventListener","handleDragEnd","removeEventListener","currentItem","dragEnter","rows","scope","responsive","bordered","size","colSpan","Home","componentDidMount","populateCourseData","resetChanges","window","confirm","clearFilter","clearSelected","dataStringCourses","localStorage","getItem","App","localStorageKey","dataStringPrereq","dataStringCoreq","dataObjectCourses","parse","dataObjectPrereq","dataObjectCoreq","loadCourses","saveCourseData","setItem","getMaxCourseForYears","max","addTerm","editCourse","toggleSelect","deleteCourse","filterByCategory","editPrereq","editCoreq","showPrereq","showCoreq","CourseActionCreators","AllActionsCreators","CustomInput","checked","defaultTheme","darkmodeTheme","exact","path","component","Settings","apiurlpartial","Boolean","location","hostname","match","initialState","concatAtIndex","list","item","listAlt","removeAtIndex","splice","combineCoreqSets","inputCoreq","allcoreq","i","j","intersects","Set","getCoursesFromCodes","codes","courseReducer","termList","EmptyCourse","push","filtered","unfiltered","x","y","prereqcopy","coreqcopy","courseSet","li","newCourses","settingsReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","logger","thunk","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.15bc54f2.chunk.js","sourcesContent":["import * as courseTypes from './courseTypes';\r\n\r\nexport const addCourse = (term, courseCode) => {\r\n    return {\r\n        type: courseTypes.ADD_COURSE,\r\n        payload: { term, courseCode }\r\n    }\r\n}\r\n\r\nexport const editCourse = (term, editedCourse) => {\r\n    return {\r\n        type: courseTypes.EDIT_COURSE,\r\n        payload: { term, editedCourse }\r\n    }\r\n}\r\n\r\nexport const deleteCourse = (term, courseCode) => {\r\n    return {\r\n        type: courseTypes.DELETE_COURSE,\r\n        payload: { term, courseCode }\r\n    }\r\n}\r\n\r\nexport const addTerm = (index = -1) => {\r\n    return {\r\n        type: courseTypes.ADD_TERM,\r\n        payload: index\r\n    }\r\n}\r\n\r\nexport const removeTerm = (index = -1) => {\r\n    return {\r\n        type: courseTypes.REMOVE_TERM,\r\n        payload: index\r\n    }\r\n}\r\n\r\nexport const filterByCategory = (category, value) => {\r\n    return {\r\n        type: courseTypes.FILTER,\r\n        payload: {category, value}\r\n    }\r\n}\r\n\r\nexport const clearFilter = () => {\r\n    return {\r\n        type: courseTypes.CLEAR_FILTER\r\n    }\r\n}\r\n\r\n\r\nexport const toggleSelectCourse = (courseCode) => {\r\n    return {\r\n        type: courseTypes.TOGGLE_SELECT,\r\n        payload: courseCode\r\n    }\r\n}\r\n\r\nexport const clearSelected = () => {\r\n    return {\r\n        type: courseTypes.CLEAR_SELECT\r\n    }\r\n}\r\n\r\nexport const editPrereq = (courseCode, prereqCourses) => {\r\n    return {\r\n        type: courseTypes.EDIT_PREREQ,\r\n        payload: { courseCode, prereqCourses }\r\n    }\r\n}\r\n\r\nexport const editCoreq = (courseCode, coreqCourses) => {\r\n    return {\r\n        type: courseTypes.EDIT_COREQ,\r\n        payload: { courseCode, coreqCourses }\r\n    }\r\n}\r\n\r\nexport const showPrereq = (courseCode) => {\r\n    \r\n    return {\r\n        type: courseTypes.SHOW_PREREQ,\r\n        payload: courseCode\r\n    }\r\n}\r\n\r\nexport const showCoreq = (courseCode) => {\r\n    \r\n    return {\r\n        type: courseTypes.SHOW_COREQ,\r\n        payload: courseCode\r\n    }\r\n}\r\n\r\nexport const loadCourses = (courses, prereq, coreq) => {\r\n    return {\r\n        type: courseTypes.LOAD_COURSES,\r\n        payload: { courses, prereq, coreq }\r\n    }\r\n}\r\n\r\nexport const dragEnter = (params, currentItem) => {\r\n    return {\r\n        type: courseTypes.DRAG_ENTER,\r\n        payload: {params, currentItem}\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","// course\r\nexport const ADD_COURSE = 'ADD_COURSE';\r\nexport const DELETE_COURSE = 'DELETE_COURSE';\r\nexport const EDIT_COURSE = 'EDIT_COURSE';\r\nexport const ADD_TERM = 'ADD_TERM';\r\nexport const REMOVE_TERM = 'REMOVE_TERM';\r\n\r\n// filter\r\nexport const FILTER = 'FILTER';\r\nexport const CLEAR_FILTER = 'CLEAR_FILTER';\r\n\r\n// select\r\nexport const TOGGLE_SELECT = 'TOGGLE_SELECT';\r\nexport const CLEAR_SELECT = 'CLEAR_SELECT';\r\n\r\n// prereq\r\nexport const EDIT_PREREQ = 'EDIT_PREREQ';\r\nexport const EDIT_COREQ = 'EDIT_COREQ';\r\nexport const SHOW_PREREQ = 'SHOW_PREREQ';\r\nexport const SHOW_COREQ = 'SHOW_COREQ';\r\n\r\n// loading\r\nexport const LOAD_COURSES = 'LOAD_COURSES';\r\n\r\n// dragging\r\nexport const DRAG_ENTER = 'DRAG_ENTER';","import * as settingsTypes from './settingsTypes';\r\n\r\nexport const toggleDarkmode = (toggleState = 'not_specified') => {\r\n    if (toggleState === \"not_specified\") {\r\n\t\treturn (dispatch, getState) => {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: settingsTypes.TOGGLE_DARKMODE,\r\n\t\t\t\tpayload: { darkmode: !getState().settings.darkmode },\r\n\t\t\t});\r\n        }\r\n    } else {\r\n        return (dispatch, getState) => {\r\n\t\t\tdispatch({ type: settingsTypes.TOGGLE_DARKMODE, payload: { nightmode: toggleState } });\r\n\t\t};\r\n    } \r\n}","export const TOGGLE_DARKMODE = 'TOGGLE_DARKMODE';","import styled from 'styled-components';\r\n\r\nexport const StyledAppContainer = styled.div`\r\n  padding: 0 1rem;\r\n  width: 100%;\r\n  min-height: 100vh;\r\n`;\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n    * {\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n    font-size: 1.5vmin;\r\n    }\r\n\r\n    body{\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    line-height: 1.4;\r\n    font-size: 1.5vmin;\r\n    }\r\n\r\n    a {\r\n    color: #333;\r\n    text-decoration: none;\r\n    }\r\n\r\n\r\n\r\n    h1{ font-size: 20px; }\r\n    h2{ font-size: 16px; }\r\n    h3{ font-size: 12px; }\r\n    h4{ font-size: 8px; }\r\n    input{font-size: 1.5vmin; padding: 0;}\r\n\r\n`;\r\n\r\n\r\nexport default GlobalStyles;","import styled from 'styled-components';\r\n\r\nexport const StyledHeader = styled.header`\r\n    border: 2px solid black;\r\n    background-color: ${({ theme }) => theme.button};\r\n    text-align: center;\r\n    color: #fff;\r\n    padding: 10px;\r\n`;","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { StyledHeader } from '../../styles/components/headerStyles';\r\nfunction Header() {\r\n    return (\r\n        <StyledHeader>\r\n            <h1>Grade Tracker</h1>\r\n            <Link style={linkStyle} to=\"/\">Home</Link> | {' '}  \r\n            <Link style={linkStyle} to=\"/about\">About</Link> | {' '}  \r\n            <Link style={linkStyle} to=\"/instructions\">Instructions</Link> | {' '}\r\n            <Link style={linkStyle} to=\"/settings\">Settings</Link>\r\n        </StyledHeader>\r\n    )\r\n}\r\n\r\n\r\nconst linkStyle = {\r\n    color: '#fff',\r\n    textDecoration: 'none'\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react'\r\n\r\nfunction About() {\r\n    return (\r\n        <React.Fragment>\r\n          <h1>About</h1> \r\n          <p>This app was created to help students manage their courses and assist when planning  what courses they will devote their study time into.</p>\r\n          <p>v.1.0.0</p> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from 'react'\r\nimport styled from 'styled-components';\r\nimport ee from 'event-emitter';\r\n\r\nconst Container = styled.div\r\n`\r\n    background-color: #444;\r\n    color: white;\r\n    padding: 16px;\r\n    position: absolute;\r\n    top: ${props => props.top}px;\r\n    right: 16px;\r\n    z-index: 999;\r\n    transition: top 0.5s ease;\r\n\r\n`;\r\n\r\nconst emitter = new ee();\r\n\r\nexport const notify = (msg) => {\r\n    emitter.emit('notification', msg);\r\n}\r\n\r\nexport class Notification extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            top: -100,\r\n            msg: '',\r\n        };\r\n\r\n        this.timeout = null;\r\n\r\n        emitter.on('notification', (msg) => {\r\n            this.onShow(msg);\r\n        });\r\n    }\r\n\r\n    onShow = (msg) => {\r\n        if (this.timeout){\r\n            clearTimeout(this.timeout);\r\n            this.setState({ top: -100}, () => {\r\n                this.timeout = setTimeout(() => {\r\n                    this.showNotification(msg);\r\n                }, 500);\r\n            });\r\n        }else{\r\n            this.showNotification(msg);\r\n        }\r\n    }\r\n\r\n    showNotification = (msg) => {\r\n        this.setState({\r\n            top: 100,\r\n            msg\r\n        }, () => {\r\n            this.timeout = setTimeout(() => {\r\n                this.setState({\r\n                    top: -100,\r\n                });\r\n            }, 3000)\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container top={this.state.top}>{this.state.msg}</Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Notification\r\n","import React from 'react'\r\n\r\nfunction Instructions() {\r\n    return (\r\n        <React.Fragment>\r\n            <h1>Instructions</h1> \r\n            <h2>Adding a course</h2>\r\n            <p>To add a course:</p>\r\n            <ol style={listStyle}>\r\n                <li>First make sure that the term for the course exist. This can be done by clicking the 'Add a new term' button. The term number should be displayed on the left side.</li>\r\n                <li>Once the correct term exist, locate the corresponding 'add course' field for the term.</li>\r\n                <li>Enter the course code for the course in the field, and press enter or click the 'Add a new course' button.</li>\r\n                <li>If the course ws successfully added, a cell should appear with the course code in the table.</li>\r\n                <li>You can change the name, course code, and credits by edit the remaining fields then clicking 'Set changes'</li>\r\n            </ol> \r\n\r\n            \r\n            <h2>Adding/Editing prerequisites</h2>\r\n            <p>To change prerequisite courses:</p>\r\n            <ol style={listStyle}>\r\n                <li>First select a course by clicking on the 'Select' button on any one of the course cells.</li>\r\n                <li>Once a course has been selected, a panel in the bottom will open.</li>\r\n                <li>There will be a select form displaying the current prerequisites of the selected course.</li>\r\n                <li>Click anywhere in the select form to open a list of the available prerequisite courses to choose from.</li>\r\n                <strong>Note: The list of prerequisites is made up of courses that exist in previous terms of the currently selected course</strong>\r\n                <li>Select prerequisite courses by clicking on any of the course codes.</li>\r\n                <strong>Note: Once you have finished, make sure to click 'Accept changes' button at the bottom of the panel</strong>\r\n                <li>You can not only add courses, but remove and change the courses by clicking on the 'x' beside each course code.</li>\r\n\r\n      \r\n            </ol> \r\n            \r\n            <h2>Adding/Editing corequisites</h2>\r\n            <p>To change corequisites courses:</p>\r\n            <ol style={listStyle}>\r\n                <li>First select a course by clicking on the 'Select' button on any one of the course cells.</li>\r\n                <li>Once a course has been selected, a panel in the bottom will open.</li>\r\n                <li>There will be a select form displaying the current corequisites of the selected course.</li>\r\n                <li>Click anywhere in the select form to open a list of the available corequisite courses to choose from.</li>\r\n                <strong>Note: The list of corequisites is made up of courses that exist in same term as the currently selected course</strong>\r\n                <li>Select corequisite courses by clicking on any of the course codes.</li>\r\n                <strong>Note: Once you have finished, make sure to click 'Accept changes' button at the bottom of the panel</strong>\r\n                <li>You can also change and remove the courses by clicking on the 'x' beside each course code.</li>\r\n                <strong>Note: When adding/changing the corequisite for a course, you can combine two sets of corequisites but cannot combine a set with a single course. </strong>\r\n                <strong>Trying to combine a set with a single course without specifying all the courses in the set will delete the previous set and create a new set.</strong>\r\n      \r\n            </ol>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Instructions\r\n\r\n\r\nconst listStyle = {\r\n    padding: '0 5px'\r\n};","import styled from 'styled-components';\r\n\r\nexport const StyledInner = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 0 0%;\r\n    justify-content: center;\r\n    max-height: 90vh;\r\n`;\r\n\r\nexport const StyledInnerTop = styled.div`\r\n    background-color: ${({ theme }) => theme.bgAlt};\r\n    height: auto;\r\n    overflow-y: scroll;\r\n    max-height: 80%;\r\n    max-width: 100%;\r\n    padding-bottom: 20%;\r\n    border-left: 2px solid black;\r\n    border-right: 2px solid black;\r\n`;\r\n\r\n\r\nexport const StyledInnerBottomHead = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  & > * {\r\n    margin-right: 2px;\r\n  }\r\n  padding: 0 2px;\r\n  height: 40%;\r\n  width: 100%;\r\n  background: ${({ theme }) => theme.button};\r\n  flex-wrap: wrap;\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n  overflow-y: scroll;\r\n  transition: height 1s ease-in;\r\n`;\r\n\r\nexport const StyledInnerBottomFoot = styled.div`\r\n  height: 60%;\r\n  transition: height 1s ease-in;\r\n`;\r\n\r\nexport const StyledInnerBottom = styled.div`\r\n  height: ${({ expanded }) => expanded?\"30vh\":\"10vh\"};\r\n  max-height: 20%;\r\n  border: 2px solid black;\r\n  background: #677;\r\n  border-radius: 5px;\r\n  /* used for animation of sideview, not implemented */\r\n  transition: height 0.5s ease-out;\r\n\r\n    & > ${StyledInnerBottomHead} {\r\n        height: ${({ expanded }) => expanded?\"15%\":\"40%\"};\r\n    }\r\n\r\n    & > ${StyledInnerBottomFoot} {\r\n        height: ${({ expanded }) => expanded?\"85%\":\"60%\"};\r\n    }\r\n  \r\n \r\n`;\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\nfunction SaveChanges(props) {\r\n    return (\r\n        <input\r\n            onClick={props.onSaveClick}\r\n            style={buttonStyle}\r\n            className=\"btn btn-save\"\r\n            type=\"button\"\r\n            value=\"Save the changes\"\r\n        />\r\n    )\r\n}\r\nconst buttonStyle = {\r\n    borderRadius:'5px',\r\n    border:'2px outset black',\r\n    background: '#55F',\r\n    height: '100%',\r\n    color: '#fff',\r\n};\r\n\r\nexport default SaveChanges;\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Input, Label } from 'reactstrap';\r\n\r\nexport class GradeFilter extends Component {\r\n        \r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            category: '2',\r\n            val: 0.0\r\n        };\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const {category, val} = this.state;\r\n        this.props.onClickFilterByCategory(category, val);\r\n    }\r\n\r\n    onChange = (e) => this.setState({[e.target.name]: e.target.value });\r\n\r\n    \r\n    render() {\r\n        return (\r\n            \r\n            <form style={gradeFilterStyle}\r\n            onSubmit={this.onSubmit}\r\n\r\n            >\r\n                <Label style={{lineHeight: '15px', width: 'auto', alignSelf: 'center' }}>Courses with grade </Label>\r\n                <Input \r\n                type=\"select\"\r\n                style={inputStyle}\r\n                id=\"filter\"\r\n                name=\"category\"\r\n                onChange={this.onChange}\r\n                defaultValue={this.state.category}\r\n                >\r\n                    <option value={1}>greater than</option>\r\n                    <option value={2}>less than</option>\r\n                    <option value={3}>equal to</option>\r\n                    <option value={4}>greater than or equal to</option>\r\n                    <option value={5}>less than or equal to</option>\r\n                </Input>\r\n                <Input style={inputStyle} type=\"text\" onChange={this.onChange}  name=\"val\" value={this.state.value} placeholder={0.0} />\r\n                <input style={btnStyle} type=\"submit\" value=\"Filter\"/>\r\n            </form>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n// PropTypes\r\nGradeFilter.propType = {\r\n    onClickFilterByCategory: PropTypes.func.isRequired,\r\n}\r\n\r\nconst gradeFilterStyle = {\r\n    \r\n    padding: '0px 15px',\r\n    borderRadius:'5px',\r\n    display: 'flex',\r\n    width: 'auto',\r\n    background: 'transparent',\r\n    border: '2px outset black',\r\n    color: 'white',\r\n    height: '100%'\r\n};\r\n\r\nconst inputStyle = {\r\n    background: 'lightgrey',\r\n    borderRadius: '5px',\r\n    alignSelf: 'center',\r\n    height: 'auto',\r\n    width: 'auto',\r\n    margin: '1px 10px',\r\n}\r\n\r\nconst btnStyle = {\r\n    display: 'inline-block',\r\n    border: '1px outset black',\r\n    background: '#677',\r\n    borderRadius: '5px',\r\n    alignSelf: 'center',\r\n    color: '#fff',\r\n    padding: '2px 10px',\r\n    cursor: 'pointer',\r\n    height: 'auto',\r\n    margin: '1px 10px',\r\n};\r\n\r\nexport default GradeFilter\r\n","import styled from 'styled-components';\r\nimport { Button } from 'reactstrap';\r\nimport Select from 'react-select'\r\n\r\nexport const StyledContainer = styled.div`\r\n    background: ${({theme})=>theme.sidePanel};\r\n    width: 100%;\r\n    text-align: center;\r\n    border: 2px solid grey;   \r\n    overflow-y: scroll;\r\n    height: 100%; \r\n`;\r\n\r\nexport const StyledButtonShow = styled(Button)`\r\n    border:1px outset black;\r\n    border-radius:5px;\r\n    padding: 5px;\r\n    background: #677;\r\n    &:hover {\r\n        background: #788;\r\n    }\r\n`;\r\n\r\n\r\n\r\nexport const StyledSelect = styled(Select)`\r\n    margin: 10px 20%;\r\n    @media screen and (max-width: ${({ theme }) => theme.breakpoint}){\r\n        margin: 10px 10%;\r\n    }\r\n    \r\n`;","import { keyframes } from 'styled-components';\r\n\r\nexport const popin = keyframes`\r\n    0% { opacity: 0; -webkit-transform: scale(0.5); }\r\n\t80% { opacity: 0.5; -webkit-transform: scale(1.1); }\r\n\t100% { opacity: 1; -webkit-transform: scale(1); }\r\n`; ","import styled from 'styled-components';\r\nimport { Table, Button } from 'reactstrap';\r\nimport { popin } from './animations';\r\n\r\n\r\nexport const StyledMap = styled(Table)`\r\n    ${'' /* border: 8px double black; */}\r\n    background-color: ${({ theme }) => theme.bg};\r\n    color: ${({ theme }) => theme.color};\r\n    border-color: ${({ theme }) => theme.border} !important;\r\n`; \r\n\r\nexport const StyledMapHead = styled.thead`\r\n    text-align: center;\r\n    \r\n`; \r\n\r\nexport const StyledMapBody = styled.tbody`\r\n    \r\n`; \r\n\r\n\r\nexport const StyledMapHeading = styled.th`\r\n    text-align: center;\r\n    min-width: 50px;\r\n    margin: 2px;\r\n    font-weight: 900;\r\n    max-height: 100%;\r\n    border-radius: 5px;\r\n    border-color: ${({ theme }) => theme.border} !important;\r\n    \r\n    @media screen and (max-width: ${({ theme }) => theme.breakpoint}){\r\n        max-height: 70px;\r\n    }\r\n`; \r\n\r\nexport const StyledMapData = styled.td`\r\n     width: 200px;\r\n     margin: 2px;\r\n     border-radius: 5px;\r\n     border-color: ${({ theme }) => theme.border} !important;\r\n    \r\n`; \r\n\r\nexport const StyledMapDataAnimated = styled(StyledMapData)`\r\n    animation: ${popin} 0.5s ease once;\r\n`;\r\n\r\nexport const StyledMapRow = styled.tr`\r\n    display: flex;\r\n    @media screen and (max-width: ${({ theme }) => theme.breakpoint}){\r\n        align-items: center;\r\n        padding: 2% 25%;\r\n        & > * {\r\n            width: 100%;\r\n        }\r\n        & > ${StyledMapHeading}:first-of-type {\r\n            background: ${({ theme }) => theme.bgAlt};\r\n            color: ${({ theme }) => theme.bg};\r\n        }\r\n    }\r\n`;\r\n\r\nexport const StyledMapRowResponsive = styled(StyledMapRow)`\r\n    \r\n        \r\n    @media screen and (max-width: ${({ theme }) => theme.breakpoint}){\r\n        width: 100%;\r\n        \r\n        flex-direction: column;\r\n        justify-content: flex-start;\r\n        ${'' /* flex-wrap: wrap; */}\r\n        ${'' /* width: 100%; */}\r\n    }\r\n`;\r\n\r\nexport const StyledTermRow = styled(StyledMapRowResponsive)`\r\n    \r\n    height: auto;\r\n    @media screen and (max-width: ${({ theme }) => theme.breakpoint}){\r\n        height: auto;\r\n        \r\n    }\r\n`;\r\n\r\nexport const StyledButton = styled(Button)`\r\n    \r\n    display: inline-block;\r\n    border: none;\r\n    background: ${({ theme }) => theme.button};\r\n    color: #fff;\r\n    padding: 7px 20px;\r\n    cursor: pointer;\r\n    &:hover {\r\n        background: ${({ theme }) => theme.buttonHover};\r\n    }\r\n    &:hover, &:active, &:focus, &:target { \r\n        background: ${({ theme }) => theme.buttonHover};\r\n    }\r\n    \r\n`;\r\n\r\nexport const StyledButtonAdd = styled(StyledButton)`\r\n    &:hover {\r\n        background: rgb(88, 219, 158);\r\n    }\r\n`;\r\n\r\nexport const StyledButtonDelete = styled(StyledButton)`\r\n    &:hover {\r\n        background: rgb(241, 83, 83);\r\n    }\r\n`;\r\n\r\nexport const StyledButtonSave = styled(StyledButton)`\r\n    &:hover {\r\n        background: rgb(130, 197, 252);\r\n    }\r\n`;\r\n\r\nexport const StyledButtonReset = styled(StyledButton)`\r\n    &:hover {\r\n        background: rgb(228, 27, 27);\r\n    }\r\n`;\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { StyledButtonShow, StyledSelect, StyledContainer } from '../styles/components/sideviewStyles';\r\nimport { StyledButtonSave } from '../styles/components/programmapStyles';\r\n\r\n\r\nexport class SideView extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            prereqCourses:[],\r\n            coreqCourses:[],\r\n\r\n        };\r\n    }\r\n    \r\n    // New onChange(for 'react-select' component)\r\n    onChange = (value, { name, action, removedValue }) => {\r\n        switch (action) {\r\n          case 'remove-value':\r\n            break;\r\n          case 'pop-value':\r\n            break;\r\n          case 'clear':\r\n            break;\r\n            default:\r\n        }\r\n        \r\n        this.setState({ \r\n            [name]: value \r\n        });\r\n    }\r\n\r\n    // Transforms a course into a format used by 'react-select'\r\n    getSelectOption = (course) => {\r\n        return {value: course.code, label: course.code };\r\n    }\r\n    // Transforms from 'react-select' option format to course code\r\n    getValueFromSelectOption = (option) => {\r\n        return option.value;\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        // Notify the user that their changes have been set\r\n        this.props.sendNotification(\"Changes set\");\r\n        \r\n        // New onSubmit code\r\n        // must extract the value from the react-select components\r\n        const code = this.props.selectedCourse.code;\r\n        console.log(\"submitted\");\r\n        \r\n        let pC = this.state.prereqCourses || [];\r\n\r\n\r\n        console.log(\"prereq\");\r\n        const prs = pC.map(option => this.getValueFromSelectOption(option));\r\n        console.log(prs);\r\n        this.props.handleClickEditPrereq(code, prs);\r\n        \r\n\r\n        let cC = this.state.coreqCourses || [];\r\n\r\n        console.log(\"coreq\");\r\n        const crs = cC.map(option => this.getValueFromSelectOption(option));\r\n        \r\n        console.log(crs);\r\n        this.props.handleClickEditCoreq(code, crs);\r\n        \r\n    }\r\n\r\n    \r\n\r\n    \r\n    // this doesn't get called after a user deletes a course\r\n    // only componentWillUpdate gets called\r\n    componentWillReceiveProps(newProps){\r\n        console.log(\"Inside componentWillReceiveProps\");\r\n        console.log(this.props);\r\n        console.log(newProps);\r\n        \r\n        \r\n        // Only update the state (and then the UI) if the component\r\n        // receives a new set of props\r\n        console.log(\"Are the oldProp and newProp equal?\");\r\n        if (!this.equal(this.props, newProps)){\r\n            this.updateState(newProps);\r\n        }\r\n    }\r\n    \r\n\r\n\r\n    equal(first, second){\r\n        const result = JSON.stringify(first) === JSON.stringify(second);\r\n        console.log(\"result: \" + result);\r\n        return result;\r\n    }\r\n\r\n    \r\n\r\n    updateState(newProps){\r\n\r\n        const {selectedCourse, prereq, coreq, courses, selectedTerm} = newProps;\r\n\r\n        \r\n        if (!selectedCourse) return;\r\n\r\n        let selectedPrereqList = prereq[selectedCourse.code];\r\n        if (!selectedPrereqList){\r\n            selectedPrereqList = [];\r\n        }\r\n\r\n        console.log(\"selectedPrereqList\");\r\n        console.log(selectedPrereqList);\r\n        \r\n        let selectPrereq = courses.slice(0, selectedTerm);\r\n        let selectOptionsPrereq = [].concat.apply([], selectPrereq); // flatten the 2d array\r\n        \r\n        // get the full course details of the courses that are prereq\r\n        selectOptionsPrereq = selectOptionsPrereq\r\n        .filter(course => {\r\n            return course.code !== selectedCourse.code && selectedPrereqList.includes(course.code);\r\n        });\r\n        \r\n\r\n\r\n        let selectedCoreqIndex = coreq\r\n        .findIndex(cl => (cl.findIndex(c => c === selectedCourse.code) >= 0));\r\n        \r\n\r\n        let selectedCoreqList;\r\n        if (selectedCoreqIndex < 0){\r\n            selectedCoreqList = [];\r\n        }else{\r\n            selectedCoreqList = coreq[selectedCoreqIndex];\r\n        }\r\n\r\n        console.log(\"selectedCoreqList\");\r\n        console.log(selectedCoreqList);\r\n\r\n        \r\n        // get the full course details of the courses that are coreq\r\n        console.log(selectedTerm);\r\n        let selectOptionsCoreq = courses[selectedTerm];\r\n        if (selectOptionsCoreq == null){\r\n            selectOptionsCoreq = [];\r\n        }\r\n        selectOptionsCoreq = selectOptionsCoreq\r\n        .filter(course => {\r\n            return course.code !== selectedCourse.code && selectedCoreqList.includes(course.code) ;\r\n        });\r\n        \r\n\r\n        \r\n        this.setState({\r\n            prereqCourses: selectOptionsPrereq.map(c => this.getSelectOption(c)),\r\n            coreqCourses: selectOptionsCoreq.map(c => this.getSelectOption(c)),\r\n        });\r\n        \r\n            \r\n        \r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const shouldShow = (this.props.selectedCourse !== null);\r\n        \r\n        if (!shouldShow){\r\n            return (\r\n                <StyledContainer>\r\n                    <h2>Advanced Course Edit</h2>\r\n                    <p>You must select a course first</p>\r\n                </StyledContainer>\r\n            );\r\n        }\r\n        \r\n        \r\n        const {courses, selectedTerm, selectedCourse} = this.props;\r\n\r\n\r\n        // get the available options for the prereq courses\r\n        let selectPrereq = courses.slice(0, selectedTerm);\r\n        let selectOptionsPrereq = [].concat.apply([], selectPrereq); // flatten the 2d array\r\n        \r\n        selectOptionsPrereq = selectOptionsPrereq\r\n        .map((course) =>{\r\n            return this.getSelectOption(course);\r\n        });\r\n        \r\n        \r\n\r\n\r\n        // get the available options for the coreq courses\r\n        let selectOptionsCoreq = courses[selectedTerm];\r\n        \r\n        if (selectOptionsCoreq == null){\r\n            selectOptionsCoreq = [];\r\n        }\r\n        selectOptionsCoreq = selectOptionsCoreq\r\n        .filter(course => {\r\n            return course.code !== selectedCourse.code;\r\n        })\r\n        .map(course =>{\r\n            return this.getSelectOption(course);\r\n        });\r\n        \r\n\r\n\r\n       \r\n        const form = \r\n                <form\r\n                onSubmit={this.onSubmit}\r\n                sytle={formStyle}\r\n                className=\"sideViewForm\"\r\n                >\r\n                    <h3>For course: {(shouldShow)?this.props.selectedCourse.code:\"\"}</h3>\r\n                    \r\n                    \r\n                    <div>\r\n                        <label>Prerequisites</label>\r\n                        <br/>\r\n                        <StyledButtonShow\r\n                            style={buttonShowStyle}\r\n                            type=\"button\"\r\n                            onClick={this.props.handleClickShowPrereq.bind(this, selectedCourse.code)}\r\n                        >Highlight Pre-requisites</StyledButtonShow>\r\n                        <StyledSelect \r\n                            \r\n                            styles={customStyles}\r\n                            onChange={this.onChange}\r\n                            name=\"prereqCourses\"\r\n                            isMulti \r\n                            options={selectOptionsPrereq}\r\n                            value={this.state.prereqCourses}\r\n                        />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label>Corequisites</label>\r\n                        <br/>\r\n                        <StyledButtonShow \r\n                            style={buttonShowStyle}\r\n                            type=\"button\"\r\n                            onClick={this.props.handleClickShowCoreq.bind(this, selectedCourse.code)}\r\n                        >Highlight Co-requisites</StyledButtonShow>\r\n                        <StyledSelect \r\n                            \r\n                            styles={customStyles}\r\n                            onChange={this.onChange}\r\n                            name=\"coreqCourses\"\r\n                            isMulti \r\n                            options={selectOptionsCoreq}\r\n                            value={this.state.coreqCourses}\r\n                        />\r\n                    </div>\r\n                \r\n                    <div style={{textAlign:'center', fontWeight:'bold'}}>\r\n                        Remember to click accept changes after making changes\r\n                    </div>\r\n                            \r\n                                    \r\n                    <StyledButtonSave type=\"submit\">Accept Changes</StyledButtonSave>\r\n                </form>\r\n                ;\r\n\r\n\r\n\r\n\r\n        return (\r\n            <StyledContainer>\r\n                \r\n                <h2>Advanced Course Edit</h2>\r\n                \r\n                {\r\n                    form\r\n                }\r\n            </StyledContainer>\r\n        );\r\n        \r\n    }\r\n}   \r\n\r\n\r\n// PropTypes\r\nSideView.propType = {\r\n    sendNotification: PropTypes.func.isRequired,\r\n    handleClickEditCourse: PropTypes.func.isRequired,\r\n    courses: PropTypes.array.isRequired,\r\n    selectedTerm: PropTypes.number.isRequired,\r\n    selectedCourse: PropTypes.object.isRequired,\r\n    prereq: PropTypes.array.isRequired,\r\n    coreq: PropTypes.array.isRequired,\r\n    handleClickEditPrereq: PropTypes.func.isRequired,\r\n    handleClickEditCoreq: PropTypes.func.isRequired,\r\n}\r\n\r\nconst sideViewStyle = {\r\n    background: 'lightgrey',\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    border: '2px solid grey',    \r\n    overflowY: 'scroll',\r\n    height: '100%', \r\n}\r\n\r\nconst buttonShowStyle = {\r\n    \r\n}\r\n\r\n\r\nconst formStyle = {\r\n    border: 'none',\r\n    margin: '0 auto',\r\n}\r\n\r\n// Custom style for 'react-select', uses Emotion JS\r\nconst customStyles = {\r\n    container: (provided, state) => ({\r\n        ...provided,\r\n        // none of react-select's styles are passed to <Control />\r\n        \r\n      }),\r\n\r\n      control: (provided, state) => ({\r\n        ...provided,\r\n        overflowY: 'scroll',\r\n        height: 30,\r\n      }),\r\n\r\n\r\n}\r\n\r\n\r\nexport default SideView\r\n","import React from 'react'\r\n\r\nfunction ResetChanges(props) {\r\n    return (\r\n        <input\r\n            type=\"button\"\r\n            onClick={props.onResetClick}\r\n            style={buttonStyle}\r\n            className=\"btn btn-reset\"\r\n            value=\"Reset the changes\"\r\n        />\r\n    )\r\n}\r\nconst buttonStyle = {\r\n    borderRadius:'5px',\r\n    border:'2px outset black',\r\n    background: 'rgb(241, 83, 83)',\r\n    height: '100%',\r\n    color: '#fff',\r\n};\r\n\r\nexport default ResetChanges;\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Input, Label } from 'reactstrap';\r\n\r\nexport class CGPACalculator extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            term: this.props.courses.length, // last term\r\n            CGPA: 0,\r\n        };\r\n    }\r\n\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { courses } = this.props;\r\n        const { term } = this.state;\r\n        if (term > -1){\r\n            let allcourses = courses.slice(0, term);\r\n            allcourses = [].concat.apply([], allcourses); // flatten the 2d array\r\n            console.log(allcourses);\r\n            let totalPoints = allcourses.reduce((prev, curr) => prev + curr.grade * curr.credits, 0);\r\n            let totalCredits = allcourses.reduce((prev, curr) => prev + curr.credits, 0);\r\n            if (totalCredits === 0) totalCredits = 1; // to prevent divide by 0\r\n            this.setState({\r\n                CGPA: Math.round(totalPoints/ totalCredits* 100) / 100,\r\n            });\r\n        }else{\r\n            this.setState({\r\n                CGPA: 0\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = (e) => this.setState({[e.target.name]: e.target.value });\r\n\r\n    \r\n    render() {\r\n\r\n        const { courses } = this.props;\r\n        const { term } = this.state;\r\n\r\n        const options = courses.map((cList, index) => {\r\n            return <option key={index+1} value={index + 1}>{index + 1}</option>;\r\n        });\r\n        options.unshift(\r\n            <option key={-1} value={-1}>Choose an option</option>\r\n        );\r\n\r\n\r\n        return (\r\n            \r\n            <form style={gradeFinderStyle}\r\n            onSubmit={this.onSubmit}\r\n            >\r\n                \r\n                <Label style={{width: 'auto' }}>GPA of the courses up to term:</Label>\r\n                \r\n                <Input type=\"select\" id=\"exampleSelect\"\r\n                style={inputStyle} \r\n                name=\"term\"\r\n                onChange={this.onChange}\r\n                defaultValue={term}\r\n                >\r\n                    {options}\r\n                </Input>\r\n                \r\n                <input type=\"submit\" style={btnStyle} value=\"Calculate\"/>\r\n                \r\n                <Label style={{width: 'auto' }}>CGPA: {this.state.CGPA}</Label>\r\n                \r\n            </form>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n// PropTypes\r\nCGPACalculator.propType = {\r\n    courses: PropTypes.array.isRequired,\r\n}\r\n\r\nconst gradeFinderStyle = {\r\n    padding: '0px 15px',\r\n    borderRadius:'5px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    width: 'auto',\r\n    background: 'transparent',\r\n    border: '2px outset black',\r\n    color: 'white',\r\n    height: '100%'\r\n};\r\n\r\nconst btnStyle = {\r\n    display: 'inline-block',\r\n    border: '1px outset black',\r\n    background: '#677',\r\n    borderRadius: '5px',\r\n    color: '#fff',\r\n    padding: '2px 10px',\r\n    cursor: 'pointer',\r\n    height: 'auto',\r\n    margin: '1px 10px',\r\n};\r\n\r\nconst inputStyle = {\r\n    background: 'lightgrey',\r\n    borderRadius: '5px',\r\n    height: 'auto',\r\n    width: 'auto',\r\n    margin: '1px 10px',\r\n}\r\n\r\n\r\nexport default CGPACalculator\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { addCourse } from '../redux'\r\nimport { connect } from 'react-redux';\r\nimport { Form, Label, Input } from 'reactstrap';\r\nimport { StyledButtonAdd } from '../styles/components/programmapStyles';\r\n\r\nexport class AddCourse extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            courseCode: '',\r\n            message:'Enter the course code'\r\n        }\r\n    }\r\n\r\n    performValidation = (courseCode) => {\r\n            courseCode = courseCode.trim();\r\n            if (!courseCode){\r\n                return 2;\r\n            }\r\n            let termList = this.props.courses.slice();\r\n            let courseCodeFound = termList\r\n                .find(courseList => courseList\r\n                .find(course => course.code === courseCode) !== undefined);\r\n\r\n            if (courseCodeFound){\r\n                return 1;\r\n            }\r\n            return 0;\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (!this.state.courseCode){\r\n            this.setState({\r\n                message: \"Must enter course code\"\r\n            });\r\n        }else{\r\n            let successCode = this.performValidation(this.state.courseCode);\r\n            \r\n            switch(successCode){\r\n                case 0:\r\n                    this.props.addCourse(this.props.term,this.state.courseCode);\r\n                    break;\r\n                case 1:\r\n                    this.setState({message: 'Course code already exist'});\r\n                    break;\r\n                case 2:\r\n                    this.setState({message: 'Invalid course code'});\r\n                    break;\r\n                default:\r\n                    this.setState({message:'Enter the course code'});\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    onChange = (e) => this.setState({[e.target.name]: e.target.value });\r\n\r\n    render() {\r\n        \r\n        return (\r\n      \r\n            <Form\r\n            onSubmit={this.onSubmit}\r\n            style={addCourseStyle}\r\n            >\r\n            <Label for=\"addCourseInput\">{this.state.message}</Label>\r\n                <Input \r\n                    id=\"addCourseInput\"\r\n                    style={inputStyle}\r\n                    type=\"text\"\r\n                    name=\"courseCode\"\r\n                    placeholder=\"Course Code Here...\"\r\n                    value={this.state.courseCode}\r\n                    onChange={this.onChange}\r\n\r\n                />\r\n                <StyledButtonAdd \r\n                    style={buttonStyle}\r\n                    type=\"submit\"\r\n                 >Add a new course (+)</StyledButtonAdd>\r\n            </Form>\r\n        \r\n        )\r\n    }\r\n}\r\n\r\n\r\n// PropTypes\r\nAddCourse.propType = {\r\n    handleClickAddCourse: PropTypes.func.isRequired,\r\n    term: PropTypes.number.isRequired,\r\n}\r\n\r\n\r\nconst addCourseStyle = {\r\n    display:'flex', \r\n    flexDirection:'column',\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n    justifyContent: 'center',\r\n    height: 'auto',\r\n    minHeight: '300px',\r\n    width: '100%',\r\n}\r\n\r\nconst buttonStyle = {\r\n    marginTop:'2px',\r\n    // borderRadius: '5px',\r\n}\r\n\r\nconst inputStyle = {\r\n    marginTop:'2px',\r\n    // borderRadius: '5px',\r\n    // padding:'2px 4px',\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      courses: state.courses.courses\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      addCourse: (term, courseCode) => dispatch(addCourse(term, courseCode))\r\n    }\r\n  }\r\n\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AddCourse)\r\n","  \r\nexport default class CourseClass {\r\n    constructor(name, code, grade, credits){\r\n        this.name = name;\r\n        this.code = code;\r\n        this.grade = grade;\r\n        this.credits = credits;\r\n    }\r\n\r\n  static EmptyCourse()\r\n  {\r\n      return new CourseClass('NA', 'NA', 0.0, 1.0);\r\n  }\r\n};","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport CourseClass from './model/CourseClass';\r\nimport { FormGroup, Label, Input } from 'reactstrap';\r\nimport { StyledButtonDelete, StyledButton, StyledButtonSave } from '../styles/components/programmapStyles';\r\n\r\n\r\nexport class Course extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            courseName: this.props.course.name,\r\n            grade: this.props.course.grade,\r\n            credits:this.props.course.credits,\r\n            message: 'Messages here',\r\n        }\r\n        this.selectButton = null;\r\n        this.form = null;\r\n        this.timeout = null;\r\n    }\r\n\r\n    performValidation = (editedCourse) => {\r\n        editedCourse.grade = Number(editedCourse.grade);\r\n        editedCourse.credits = Number(editedCourse.credits);\r\n        if (isNaN(editedCourse.grade)){\r\n            return 1;\r\n        }\r\n        if (isNaN(editedCourse.credits)){\r\n            return 2;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    \r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        let editedCourse = \r\n        new CourseClass(this.state.courseName, this.props.course.code, this.state.grade, this.state.credits);\r\n        \r\n        let successCode = this.performValidation(editedCourse);\r\n        switch(successCode){\r\n            case 0:\r\n                editedCourse.grade = Number(editedCourse.grade);\r\n                editedCourse.credits = Number(editedCourse.credits);\r\n                this.props.handleClickEditCourse(this.props.term, editedCourse);\r\n                this.setState({message: 'Messages here'});\r\n                break;\r\n            case 1:\r\n                this.setState({message: 'grade must be a number'});\r\n                break;\r\n            case 2:\r\n                this.setState({message: 'credits must be a number'});\r\n                break;\r\n            default:\r\n                this.setState({message: 'Messages here'});\r\n\r\n        }\r\n    }\r\n\r\n    onChange = (e) => this.setState({[e.target.name]: e.target.value });\r\n\r\n    onSelect = (e) => {\r\n        if(this.form){\r\n            if (this.timeout)\r\n                clearTimeout(this.timeout);\r\n\r\n            this.timeout = setTimeout(() => {\r\n                console.log(this);\r\n                // set the focus on the form element after the select button is cliked\r\n                // and setTimeout performs this after css removes the form from view\r\n                this.form.focus();\r\n                this.form.scrollIntoView({behavior: \"smooth\", block: \"start\", inline: \"nearest\"});\r\n            }, 0); // 2sec is the transition\r\n            //alert(this.selectButton);\r\n        }\r\n        this.props.handleClickSelectCourse(this.props.course.code)\r\n    }\r\n\r\n    render(){\r\n       const {code, name, grade, credits} = this.props.course;\r\n        let appliedclasses = \"course \";\r\n        appliedclasses += this.props.isHighlighted? \"highlighted \" : \" \";\r\n        appliedclasses += this.props.isSelected? \"selected \" : \" \";\r\n       return(\r\n           \r\n            <form\r\n            onSubmit={this.onSubmit}\r\n            style={courseStyle}\r\n            className={appliedclasses}\r\n            ref={(theform) => {this.form = theform;}}\r\n            >\r\n                <span\r\n                    className=\"dragholder\" \r\n                    style={dragholder}\r\n                      \r\n                >\r\n                \r\n                </span>\r\n                <Label style={{alignSelf:'center'}}>\r\n                    {this.state.message}\r\n                </Label>\r\n                <FormGroup>\r\n                    <span>\r\n                    <Label>Course Code:</Label>{' '}\r\n                    {code}\r\n                    </span>\r\n                    <br />\r\n                    <span>\r\n                    <Label>Name:</Label>{' '}\r\n                    {name}\r\n                    </span>\r\n                    <br />\r\n                    <span>\r\n                    <Label for=\"newNameInput\">New Name:</Label>{' '}\r\n                    <Input \r\n                        id=\"newNameInput\"\r\n                        style={inputStyle}\r\n                        type=\"text\"\r\n                        name=\"courseName\"\r\n                        value={this.state.courseName}\r\n                        onChange={this.onChange}\r\n                    />\r\n                    </span>\r\n                    <br />\r\n                    <span>\r\n                    <Label>Grade:</Label>{' '}\r\n                    {grade}\r\n                    </span>\r\n                    <br />\r\n                    <span>\r\n                    <Label for=\"newGradeInput\">New Grade:</Label>{' '}\r\n                    <Input \r\n                        id=\"newGradeInput\"\r\n                        style={inputStyle}\r\n                        type=\"text\"\r\n                        name=\"grade\"\r\n                        value={this.state.grade}\r\n                        onChange={this.onChange}\r\n                    />\r\n                    </span>\r\n                    <br />\r\n                    <span>\r\n                    <Label>Credits/Units:</Label>{' '}\r\n                    {credits}\r\n                    </span>\r\n                    <br />\r\n                    <span>\r\n                    <Label for=\"newCreditInput\">New Credits:</Label>{' '}\r\n                    <Input \r\n                        id=\"newCreditInput\"\r\n                        style={inputStyle}\r\n                        type=\"text\"\r\n                        name=\"credits\"\r\n                        value={this.state.credits}\r\n                        onChange={this.onChange}\r\n                    />\r\n                    </span>\r\n                </FormGroup>\r\n                <StyledButton \r\n                    style={buttonStyle}\r\n                    type=\"button\"\r\n                    onClick={\r\n                        this.onSelect\r\n                    }\r\n                >{this.props.isSelected?\"Deselect\":\"Select\"}</StyledButton>\r\n                <StyledButtonSave \r\n                    style={buttonStyle}\r\n                    type=\"submit\"\r\n                >Set changes</StyledButtonSave>\r\n                <StyledButtonDelete \r\n                    style={buttonStyle}\r\n                    type=\"button\"\r\n                    onClick={\r\n                        this.props.handleClickDeleteCourse.bind(this,this.props.term, this.props.course.code)\r\n                    }\r\n                >Delete(-)</StyledButtonDelete>\r\n                \r\n            </form>\r\n        \r\n       )\r\n\r\n         \r\n\r\n    }\r\n}\r\n\r\n\r\n// PropTypes\r\nCourse.propType = {\r\n    handleClickEditCourse: PropTypes.func.isRequired,\r\n    course: PropTypes.instanceOf(CourseClass).isRequired,\r\n    term: PropTypes.number.isRequired,\r\n    isSelected: PropTypes.bool.isRequired,\r\n    handleClickDeleteCourse: PropTypes.func.isRequired,\r\n    handleClickSelectCourse: PropTypes.func.isRequired,\r\n    isHighlighted: PropTypes.bool.isRequired,\r\n}\r\nconst dragholder = {\r\n    width: '100%',\r\n    background: 'lightgrey',\r\n    height: '15px',\r\n    borderRadius: '3px',\r\n    cursor: 'grab',\r\n    border: '1px solid black'\r\n}\r\n\r\nconst inputStyle = {\r\n    width: '100%',\r\n    background: 'lightgrey',\r\n    borderRadius: '5px',\r\n    padding:'2px 4px',\r\n}\r\n\r\nconst courseStyle = {\r\n    display:'flex', \r\n    flexDirection:'column',\r\n    borderRadius: '5px',\r\n    fontWeight: 'bold',\r\n    height: '100%',\r\n    minHeight: '300px',\r\n    width: '100%',\r\n    padding: '5px', \r\n};\r\n\r\nconst buttonStyle = {\r\n    marginTop:'2px',\r\n    borderRadius: '5px',\r\n}\r\n\r\nexport default Course","import React, { } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport AddCourse from './AddCourse';\r\nimport Course from './Course';\r\nimport { \r\n    StyledMapHeading,\r\n    StyledMapData,\r\n    StyledMapDataAnimated\r\n} from '../styles/components/programmapStyles';\r\n\r\nexport const Term = ({\r\n    termNumber, \r\n    courseList, \r\n    filteredCourses, \r\n    selectedCourse, \r\n    handleClickEditCourse, \r\n    handleClickDeleteCourse, \r\n    handleClickSelectCourse, \r\n    handleClickAddCourse,\r\n    // dragging props/events\r\n    handleDragStart,\r\n    handleDragEnter,\r\n    isDragging,\r\n    getDraggingStyles\r\n\r\n}) => {\r\n\r\n\r\n        const index = termNumber;\r\n        const termDisplay = (<StyledMapHeading key={index + \"x\" + -1} style={termDisplayStyle}>{index + 1}</StyledMapHeading>);\r\n        const coursesDisplay = \r\n        courseList.map((val, ind) => {\r\n                        \r\n            const isHighlighted = (filteredCourses.find(val1 => \r\n                (val1.code === val.code)) !== undefined);            \r\n\r\n            const isSelected = selectedCourse && selectedCourse.code === val.code;\r\n                \r\n            \r\n            return (\r\n            <StyledMapDataAnimated \r\n                className={isDragging?getDraggingStyles({termI: index, courseI: ind}):\"course\"}\r\n                onDragStart={(e) => {handleDragStart(e, {termI: index, courseI: ind})}}\r\n                onDragEnter={isDragging?(e) => {handleDragEnter(e, {termI: index, courseI: ind})}:null}\r\n                draggable\r\n                key={val.code}\r\n            >\r\n                <Course \r\n                    \r\n                    term={index}\r\n                    handleClickEditCourse={handleClickEditCourse}\r\n                    handleClickDeleteCourse={handleClickDeleteCourse}\r\n                    handleClickSelectCourse={handleClickSelectCourse}\r\n                    course={val}\r\n                    isSelected={isSelected}\r\n                    isHighlighted={isHighlighted}\r\n                    \r\n                />\r\n            </StyledMapDataAnimated>);\r\n        });\r\n        const newCourseButtonDisplay = (\r\n        <StyledMapData key={index + \"x\" + (coursesDisplay.length + 1)}>\r\n            <AddCourse \r\n                term={termNumber}\r\n                handleClickAddCourse={handleClickAddCourse}\r\n            />\r\n        </StyledMapData>);\r\n\r\n        return (\r\n            \r\n            [termDisplay, coursesDisplay, newCourseButtonDisplay]\r\n            \r\n        );\r\n    \r\n}\r\n\r\n\r\n\r\n\r\n// PropTypes\r\nTerm.propType = {\r\n    courseList: PropTypes.array.isRequired,\r\n    termNumber: PropTypes.number.isRequired,\r\n    handleClickAddCourse: PropTypes.func.isRequired,\r\n    handleClickEditCourse: PropTypes.func.isRequired,\r\n    handleClickDeleteCourse: PropTypes.func.isRequired,\r\n    handleClickSelectCourse: PropTypes.func.isRequired,\r\n    selectedCourse: PropTypes.object.isRequired,\r\n    filteredCourses: PropTypes.array.isRequired,\r\n}\r\n\r\nconst termDisplayStyle = {\r\n    textAlign:'center'\r\n};\r\n\r\nexport default Term\r\n","import PropTypes from 'prop-types';\r\nimport React, { Component } from 'react'\r\nimport { StyledButtonAdd } from '../styles/components/programmapStyles';\r\n\r\n\r\nexport class AddTerm extends Component {\r\n    render() {\r\n        return (\r\n            \r\n        <StyledButtonAdd \r\n        type=\"button\" \r\n        onClick={this.props.handleClickAddTerm} \r\n        style={addNewTermStyle}\r\n        >\r\n            Add a new term\r\n        </StyledButtonAdd>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n// PropTypes\r\nAddTerm.propType = {\r\n    termNumber: PropTypes.number.isRequired,\r\n    handleClickAddTerm: PropTypes.func.isRequired,\r\n}\r\n\r\nconst addNewTermStyle = {\r\n    width:'100%',\r\n};\r\n\r\n\r\nexport default  AddTerm;","import PropTypes from 'prop-types';\r\nimport React, { Component } from 'react'\r\nimport { removeTerm } from '../redux'\r\nimport { connect } from 'react-redux';\r\nimport { StyledButtonDelete } from '../styles/components/programmapStyles';\r\n\r\nexport class RemoveTerm extends Component {\r\n    handleClick = () => {\r\n        if (this.props.courses.length <= 1){\r\n            return;\r\n        }\r\n     \r\n        //TODO: Should perform the delete function on each course in the term\r\n        this.props.removeTerm();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            \r\n        <StyledButtonDelete \r\n        type=\"button\" \r\n        onClick={this.handleClick} \r\n        style={removeTermStyle}\r\n        >\r\n            Remove the last term\r\n        </StyledButtonDelete>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n// PropTypes\r\nRemoveTerm.propType = {\r\n    termNumber: PropTypes.number.isRequired,\r\n    handleClickRemoveTerm: PropTypes.func.isRequired,\r\n}\r\n\r\nconst removeTermStyle = {\r\n    width:'100%',\r\n};\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      courses: state.courses.courses\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      removeTerm: () => dispatch(removeTerm())\r\n    }\r\n  }\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(RemoveTerm);","import React, { useState, useRef } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport Term from './Term';\r\n//import { v3, v4, v5 } from 'uuid'\r\nimport PropTypes from 'prop-types';\r\nimport AddTerm from './AddTerm';\r\nimport RemoveTerm from './RemoveTerm';\r\nimport { dragEnter } from '../redux';\r\nimport { \r\n    StyledMap,\r\n    StyledMapHead,\r\n    StyledMapBody,\r\n    StyledMapRow,\r\n    StyledMapRowResponsive,\r\n    StyledTermRow,\r\n    StyledMapHeading,\r\n    StyledMapData\r\n} from '../styles/components/programmapStyles';\r\n\r\n\r\nexport const ProgramMap = ({\r\n    courses,\r\n    selectedCourse,\r\n    handleClickAddCourse,\r\n    handleClickEditCourse,\r\n    handleClickSelectCourse,\r\n    handleClickDeleteCourse,\r\n    filteredCourses,\r\n    maxCourseYears,\r\n    handleClickAddTerm,\r\n    handleClickRemoveTerm\r\n\r\n}) => {\r\n\r\n    const [dragging, setDragging]  = useState(false);\r\n    const dragItem = useRef();\r\n    const dragNode = useRef();\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const handleDragStart = (e, params) => {\r\n        const elementAtMouse = document.elementFromPoint(e.clientX, e.clientY);\r\n        if (!elementAtMouse.classList.contains('dragholder')){\r\n            console.log(\"skipped\");\r\n            e.preventDefault();\r\n            return;\r\n        }\r\n        console.log(\"drag started\", params);\r\n        dragItem.current = params;\r\n        console.log(e.target);\r\n\r\n        dragNode.current = e.target;\r\n        dragNode.current.addEventListener('dragend', handleDragEnd);\r\n        setTimeout(() => {\r\n            setDragging(true);\r\n        }, 0);\r\n    }\r\n\r\n    const handleDragEnd = () => {\r\n        console.log(\"drag ended\");\r\n\r\n        setDragging(false);\r\n        dragNode.current.removeEventListener('dragend', handleDragEnd);\r\n        dragItem.current = null;\r\n        dragNode.current = null;\r\n\r\n    }\r\n\r\n    const handleDragEnter = (e, params) => {\r\n        console.log(\"drag enter\", params);\r\n        const currentItem = dragItem.current;\r\n        if (e.target !== dragNode.current){\r\n        //if (JSON.stringify(params) !== JSON.stringify(currentItem)){\r\n            console.log(\"Target no the same\");\r\n            dispatch(dragEnter(params, currentItem));\r\n            dragItem.current = params;\r\n        }\r\n\r\n    }\r\n\r\n    const getDraggingStyles = (params) => {\r\n        const currentItem = dragItem.current;\r\n        if (currentItem.termI === params.termI && currentItem.courseI === params.courseI)\r\n            return 'current'\r\n        return 'course';\r\n    }\r\n\r\n\r\n    const rows = courses.map((courseList, index) => {\r\n        const isSelected = selectedCourse && courseList.includes(selectedCourse);\r\n        \r\n        return <StyledTermRow \r\n                onDragEnter={dragging && !courseList.length?(e) => handleDragEnter(e, {termI: index, courseI: 0}):null}\r\n                className={isSelected?\"selected-term\":\"\"}\r\n                key={index}\r\n                scope=\"row\"\r\n                \r\n                >\r\n                    {<Term \r\n                    handleDragStart={handleDragStart}\r\n                    handleDragEnter={handleDragEnter}\r\n                    isDragging={dragging}\r\n                    getDraggingStyles={getDraggingStyles}\r\n\r\n                    selectedCourse={selectedCourse}\r\n                    termNumber={index}\r\n                    courseList={courseList}\r\n                    handleClickAddCourse={handleClickAddCourse}\r\n                    handleClickEditCourse={handleClickEditCourse}\r\n                    handleClickSelectCourse={handleClickSelectCourse}\r\n                    handleClickDeleteCourse={handleClickDeleteCourse}\r\n                    filteredCourses={filteredCourses}\r\n                    />}\r\n                </StyledTermRow>;\r\n    });\r\n    return (\r\n    <StyledMap\r\n        responsive\r\n        bordered\r\n        size=\"sm\"\r\n        \r\n    > \r\n        <StyledMapHead>\r\n            <StyledMapRowResponsive>\r\n                <StyledMapHeading>Term</StyledMapHeading>\r\n                <StyledMapHeading \r\n                style={{width: '100%'}}\r\n                colSpan={maxCourseYears + 1}\r\n                >\r\n                    Courses\r\n                </StyledMapHeading>\r\n            </StyledMapRowResponsive>\r\n        </StyledMapHead>\r\n        <StyledMapBody>\r\n            {rows}\r\n            <StyledMapRow>\r\n                <StyledMapData\r\n                style={{width: '100%'}} \r\n                key={rows.length + 1}\r\n                colSpan={maxCourseYears + 2}>\r\n                <AddTerm \r\n                termNumber={rows.length + 1}\r\n                handleClickAddTerm={handleClickAddTerm}\r\n                />\r\n                </StyledMapData>\r\n            </StyledMapRow>\r\n            <StyledMapRow>\r\n                <StyledMapData \r\n                style={{width: '100%'}}\r\n                key={rows.length + 2}\r\n                colSpan={maxCourseYears + 2}>\r\n                <RemoveTerm \r\n                termNumber={rows.length - 1}\r\n                handleClickRemoveTerm={handleClickRemoveTerm}\r\n                />\r\n                </StyledMapData>\r\n            </StyledMapRow>\r\n        </StyledMapBody>\r\n    </StyledMap>\r\n    )\r\n}\r\n\r\n// PropTypes\r\nProgramMap.propType = {\r\n    handleClickAddTerm: PropTypes.func.isRequired,\r\n    handleClickRemoveTerm: PropTypes.func.isRequired,\r\n    handleClickAddCourse: PropTypes.func.isRequired,\r\n    handleClickEditCourse: PropTypes.func.isRequired,\r\n    handleClickDeleteCourse: PropTypes.func.isRequired,\r\n    handleClickSelectCourse: PropTypes.func.isRequired,\r\n    maxCourseYears: PropTypes.number.isRequired,\r\n    courses: PropTypes.array.isRequired,\r\n    selectedCourse: PropTypes.object.isRequired,\r\n    filteredCourses: PropTypes.array.isRequired\r\n}\r\n\r\n\r\n\r\nexport default ProgramMap\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nimport { \r\n  StyledInner,\r\n  StyledInnerTop,\r\n  StyledInnerBottom,\r\n  StyledInnerBottomHead,\r\n  StyledInnerBottomFoot\r\n} from '../styles/components/homeStyles';\r\n\r\n\r\nimport SaveChanges from './SaveChanges';\r\nimport GradeFilter from './GradeFilter';\r\nimport SideView from './SideView';\r\nimport ResetChanges from './ResetChanges';\r\nimport CGPACalculator from './CGPACalculator';\r\nimport ProgramMap from './ProgramMap';\r\nimport { notify } from './Notification';\r\nimport App from '../App';\r\nimport * as CourseActionCreators from '../redux';\r\n\r\n\r\nclass Home extends Component {\r\n    \r\n  componentDidMount = () =>{\r\n    this.populateCourseData();\r\n  }\r\n\r\n  resetChanges = () => {\r\n    let confirmed = window.confirm(\"Are you sure you want to reset to the last saved changes?\");\r\n    if (!confirmed){\r\n      return;\r\n    }\r\n    this.populateCourseData();\r\n    this.props.clearFilter();\r\n    this.props.clearSelected();\r\n\r\n  }\r\n\r\n\r\n  /* Local Storage Saving / Retrieving */\r\n  populateCourseData = () =>{\r\n    const dataStringCourses = localStorage.getItem(App.localStorageKey);\r\n    const dataStringPrereq = localStorage.getItem(App.localStorageKey+\"prereq\");\r\n    const dataStringCoreq = localStorage.getItem(App.localStorageKey+\"coreq\");\r\n\r\n    if (!dataStringCourses){\r\n      return;\r\n    }\r\n    const dataObjectCourses = JSON.parse(dataStringCourses);\r\n    const dataObjectPrereq = JSON.parse(dataStringPrereq);\r\n    const dataObjectCoreq = JSON.parse(dataStringCoreq);\r\n\r\n\r\n    this.props.loadCourses(\r\n      dataObjectCourses, \r\n      (dataObjectPrereq)?dataObjectPrereq:this.props.prereq,\r\n      (dataObjectCoreq)?dataObjectCoreq:this.props.coreq\r\n    );\r\n\r\n    \r\n  }\r\n\r\n  saveCourseData = () =>{\r\n    let confirmed = window.confirm(\"Are you sure you want to save all the changes?\");\r\n    if (!confirmed){\r\n      return;\r\n    }\r\n    //alert(\"saving \" + JSON.stringify(this.state.courses) + \" into localStorage.\");\r\n    localStorage.setItem(App.localStorageKey, JSON.stringify(this.props.courses));\r\n    localStorage.setItem(App.localStorageKey+\"prereq\", JSON.stringify(this.props.prereq));\r\n    localStorage.setItem(App.localStorageKey+\"coreq\", JSON.stringify(this.props.coreq));\r\n    this.sendNotification('Changes saved');\r\n  }\r\n\r\n\r\n\r\n  // Finding the max number of courses out of all terms\r\n  getMaxCourseForYears = () => {\r\n      const max = Math.max(...this.props.courses.map((val, index) => val.length));\r\n      return max;\r\n  }\r\n\r\n  sendNotification = (msg) => {\r\n    notify(msg);\r\n  }\r\n\r\n  render(){\r\n    return (\r\n        <React.Fragment>\r\n            <StyledInner>\r\n              <StyledInnerTop>\r\n                <ProgramMap \r\n                handleClickAddTerm={this.props.addTerm}\r\n                handleClickRemoveTerm={this.props.removeTerm}\r\n                handleClickAddCourse={this.props.addCourse}\r\n                handleClickEditCourse={this.props.editCourse}\r\n                handleClickSelectCourse={this.props.toggleSelect}\r\n                handleClickDeleteCourse={this.props.deleteCourse}\r\n                maxCourseYears={this.getMaxCourseForYears()}\r\n                courses={this.props.courses}\r\n                selectedCourse={this.props.selectedCourse}\r\n                filteredCourses={this.props.filteredCourses}\r\n                />\r\n            </StyledInnerTop>\r\n            <StyledInnerBottom \r\n              expanded={(this.props.selectedCourse !== null)}\r\n            >\r\n              <StyledInnerBottomHead>\r\n                <SaveChanges\r\n                    onSaveClick={() => this.saveCourseData()}\r\n                />\r\n                <ResetChanges \r\n                    onResetClick={() => this.resetChanges()}\r\n                />\r\n                <GradeFilter\r\n                    onClickFilterByCategory={this.props.filterByCategory}\r\n                />\r\n                <CGPACalculator \r\n                    courses={this.props.courses}\r\n                /> \r\n              </StyledInnerBottomHead>\r\n              <StyledInnerBottomFoot>\r\n                    \r\n                <SideView \r\n                    sendNotification={this.sendNotification}\r\n                    handleClickEditCourse={this.props.editCourse}\r\n                    courses={this.props.courses}\r\n                    selectedTerm={this.props.selectedTerm}\r\n                    selectedCourse={this.props.selectedCourse}\r\n                    prereq={this.props.prereq}\r\n                    coreq={this.props.coreq}\r\n                    handleClickEditPrereq={this.props.editPrereq}\r\n                    handleClickEditCoreq={this.props.editCoreq}\r\n                    handleClickShowPrereq={this.props.showPrereq}\r\n                    handleClickShowCoreq={this.props.showCoreq}\r\n                />\r\n              </StyledInnerBottomFoot>\r\n            </StyledInnerBottom>\r\n          </StyledInner>\r\n        </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      courses: state.courses.courses,\r\n      filteredCourses: state.courses.filteredCourses,\r\n      selectedCourse: state.courses.selectedCourse,\r\n      selectedTerm: state.courses.selectedTerm,\r\n      prereq: state.courses.prereq,\r\n      coreq: state.courses.coreq\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      addCourse: (term, courseCode) => dispatch(CourseActionCreators.addCourse(term, courseCode)),\r\n      editCourse: (term, editedCourse) => dispatch(CourseActionCreators.editCourse(term, editedCourse)),\r\n      deleteCourse: (term, courseCode) => dispatch(CourseActionCreators.deleteCourse(term, courseCode)),\r\n      addTerm: () => dispatch(CourseActionCreators.addTerm()),\r\n      removeTerm: () => dispatch(CourseActionCreators.removeTerm()),\r\n      toggleSelect: (courseCode) => dispatch(CourseActionCreators.toggleSelectCourse(courseCode)),\r\n      clearSelected: () => dispatch(CourseActionCreators.clearSelected()),\r\n      filterByCategory: (category, value) => dispatch(CourseActionCreators.filterByCategory(category, value)),\r\n      clearFilter: () => dispatch(CourseActionCreators.clearFilter()),\r\n      editPrereq: (courseCode, prereqCourses) => dispatch(CourseActionCreators.editPrereq(courseCode, prereqCourses)),\r\n      editCoreq: (courseCode, coreqCourses) => dispatch(CourseActionCreators.editCoreq(courseCode, coreqCourses)),\r\n      showPrereq: (courseCode) => dispatch(CourseActionCreators.showPrereq(courseCode)),\r\n      showCoreq: (courseCode) => dispatch(CourseActionCreators.showCoreq(courseCode)),\r\n      loadCourses: (courses, prereq, coreq) => dispatch(CourseActionCreators.loadCourses(courses, prereq, coreq))\r\n    }\r\n  }\r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(Home);","import React from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as AllActionsCreators from '../redux/index';\r\nimport { CustomInput } from 'reactstrap';\r\nfunction Settings(props) {\r\n    return (\r\n        <div>\r\n          <CustomInput checked={props.darkmode} onChange={props.toggleDarkmode} type=\"switch\" id=\"nightModeSwitch\" name=\"nightModeSwitch\" label=\"Toggle NightMode\" />  \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      darkmode: state.settings.darkmode,\r\n    }\r\n  }\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n      toggleDarkmode: () => dispatch(AllActionsCreators.toggleDarkmode()),\r\n    }\r\n  }\r\n\r\nexport default connect(\r\n    mapStateToProps, \r\n    mapDispatchToProps\r\n)(Settings);\r\n","import React, { Component } from 'react';\r\nimport { HashRouter as Router, Route } from 'react-router-dom';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as AllActionsCreators from './redux/index';\r\nimport './App.css';\r\nimport { StyledAppContainer } from './styles/components/appStyles';\r\nimport GlobalStyles from '../src/styles/base/base';\r\nimport Header from './componenets/layout/Header';\r\nimport About from './componenets/pages/About';\r\nimport Notification from './componenets/Notification';\r\nimport Instructions from './componenets/pages/Instructions';\r\nimport Home from './componenets/Home';\r\nimport Settings from './componenets/Settings';\r\n\r\n\r\nconst defaultTheme = {\r\n  bg: \"#eee\",\r\n  bgAlt: '#999',\r\n  button: '#899',\r\n  buttonHover: '#788',\r\n  sidePanel: 'lightgrey',\r\n  border: '#222',\r\n  color: \"black\",\r\n  breakpoint: \"200px\",\r\n}\r\n\r\nconst darkmodeTheme = {\r\n  ...defaultTheme,\r\n  bg: \"#555\",\r\n  bgAlt: '#888',\r\n  button: '#444',\r\n  buttonHover: '#666',\r\n  sidePanel: '#888',\r\n  border: '#999',\r\n  color: \"white\"\r\n}\r\n\r\nclass App extends Component {\r\n  static apiurlpartial = '';\r\n  static localStorageKey = 'courses';\r\n\r\n\r\n  render(){\r\n\r\n      return(\r\n        <ThemeProvider theme={this.props.darkmode?darkmodeTheme:defaultTheme}>\r\n          <GlobalStyles />\r\n          <Router>\r\n            <div className=\"App\">\r\n              <StyledAppContainer>\r\n                <Header />\r\n                <Notification />\r\n                <Route exact path=\"/\" component={Home}/>\r\n                <Route path=\"/about\" component={About} />\r\n                <Route path=\"/instructions\" component={Instructions} />\r\n                <Route path=\"/settings\" component={Settings} />\r\n              </StyledAppContainer>\r\n            </div>\r\n          </Router>\r\n        </ThemeProvider>\r\n      );\r\n  }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    darkmode: state.settings.darkmode,\r\n  }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    toggleDarkmode: () => dispatch(AllActionsCreators.toggleDarkmode()),\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as courseTypes from './courseTypes';\r\n\r\nimport CourseClass from '../../componenets/model/CourseClass';\r\n\r\nconst initialState = {\r\n    courses: [[]], // 2d array, 1st dim = terms, 2nd dim = courses\r\n    filteredCourses: [], // array of courses to highlight\r\n    prereq: {}, // will be treated as a map/dictionary, stores all prerequisites for each course, values are arrays\r\n    coreq: [], // will be treated as an array of sets(but implmented as a 2d array)\r\n    selectedCourse: null, // current selected course\r\n    selectedTerm: null\r\n}\r\n\r\n// These are sample of the data that could be in the state\r\nconst SAMPLE_COURSES = [\r\n    [\r\n      new CourseClass(\"OO Prog\", \"PROG10082\", 3.3, 6),\r\n      new CourseClass(\"Intro to Data.\", \"TELE13167\", 2.6, 3),\r\n      new CourseClass(\"Web Dev.\", \"SYST10049\", 3.5, 3)\r\n    ],\r\n    [\r\n      new CourseClass(\"OO Prog 2\", \"PROG24178\", 3.0, 6),\r\n      new CourseClass(\"Data Netw. Design\", \"TELE33324\", 2.2, 3),\r\n      new CourseClass(\"Web Prog.\", \"SYST10199\", 2.6, 3)\r\n    ],\r\n    [\r\n      new CourseClass(\"JAVA\", \"PROG32758\", 3.3, 6),\r\n      new CourseClass(\"Comp. Sec.\", \"INFO24178\", 3.3, 3),\r\n      new CourseClass(\"Databases\", \"DBAS27198\", 3.3, 3)\r\n    ]\r\n  ]\r\n  \r\n  const SAMPLE_PREREQ = {\r\n    \"PROG24178\": [\"PROG10082\"],\r\n    \"PROG32758\": [\"PROG24178\"],\r\n    \"TELE33324\": [\"TELE13167\"],\r\n    \"SYST10199\": [\"SYST10049\"],\r\n  }\r\n  \r\n  const SAMPLE_COREQ = [\r\n    [\"PROG32758\", \"DBAS27198\"],\r\n  ]\r\n\r\n\r\nconst concatAtIndex = (list, index, item) => {\r\n    const listAlt = list.slice();\r\n    listAlt.slice(index, 0, item);\r\n    return listAlt;\r\n} \r\n\r\nconst removeAtIndex = (list, index) => {\r\n    const listAlt = list.slice();\r\n    listAlt.splice(index, 1);\r\n    return listAlt;\r\n} \r\n\r\n  // Goes through each of the sets in the coreq and combines them if they intersects with another\r\n const combineCoreqSets = (inputCoreq) => {\r\n    if (inputCoreq === null || inputCoreq.length === 0) return [];\r\n    let allcoreq = inputCoreq.slice();\r\n    \r\n    for (let i = 0; i < allcoreq.length; i++){\r\n      let first = allcoreq[i];\r\n      \r\n      for (let j = allcoreq.length - 1; j > i; j--){\r\n        let second = allcoreq[j];\r\n        if (intersects(first, second)){\r\n          allcoreq[i] = [...new Set(first.concat(second))];\r\n          allcoreq.splice(j,1);\r\n        }\r\n      }\r\n    }\r\n    return allcoreq;\r\n  }\r\n\r\nconst intersects = (first, second) => {\r\n    if (first === null || second === null) return false;\r\n    return first.findIndex(value => second.includes(value)) !== -1;\r\n  }\r\n\r\nconst getCoursesFromCodes = (codes, allcourses) =>{\r\n    allcourses = [].concat.apply([], allcourses);\r\n    let filtered = allcourses.filter(c => (codes.includes(c.code)));\r\n    return filtered;\r\n} \r\n\r\n\r\n\r\nconst courseReducer = (state = initialState, action) => {\r\n    let term, termList, courseCode, i;\r\n    switch(action.type){\r\n        case courseTypes.ADD_TERM: \r\n            return {\r\n                ...state,\r\n                courses: \r\n                action.payload === -1\r\n                ? state.courses.concat([[]])\r\n                : concatAtIndex(state.courses, action.payload, []) // Not Tested\r\n            };\r\n        case courseTypes.REMOVE_TERM: \r\n            return {\r\n                ...state,\r\n                courses: action.payload === -1\r\n                ? state.courses.slice(0, state.courses.length - 1)\r\n                : removeAtIndex(state.courses, action.payload)  // Not Tested\r\n            };\r\n\r\n        case courseTypes.ADD_COURSE:\r\n            courseCode = action.payload.courseCode;\r\n            term = action.payload.term;\r\n            const course = CourseClass.EmptyCourse();\r\n            course.code = courseCode;\r\n            termList = state.courses.slice();\r\n            termList[term].push(course);\r\n            return {\r\n                ...state,\r\n                courses: termList\r\n            }\r\n        case courseTypes.EDIT_COURSE:\r\n            let { editedCourse } = action.payload;\r\n            term = action.payload.term;\r\n            termList = state.courses.slice();\r\n            termList[term] = termList[term].map(course => {\r\n                if (course.code === editedCourse.code){\r\n                    return editedCourse;\r\n                }else{\r\n                    return course;\r\n                } \r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                courses: termList\r\n            }\r\n\r\n        case courseTypes.DELETE_COURSE:\r\n            termList = state.courses.slice();\r\n            term = action.payload.term;\r\n            i = termList[term].findIndex(course => course.code === action.payload.courseCode);\r\n            termList[term].splice(i, 1);\r\n            return {\r\n                ...state,\r\n                courses: termList\r\n            }\r\n        case courseTypes.FILTER:\r\n            let { category, value } = action.payload;\r\n            const unfiltered = [].concat.apply([], state.courses);\r\n            let filtered;\r\n            if(category === '1'){\r\n                filtered = unfiltered.filter(val => (val.grade > value));\r\n            }else if(category === '2'){\r\n                filtered = unfiltered.filter(val => (val.grade < value));\r\n            }else if(category === '3'){\r\n                filtered = unfiltered.filter(val => (val.grade === value));\r\n            }else if(category === '4'){\r\n                filtered = unfiltered.filter(val => (val.grade >= value));\r\n            }else if(category === '5'){\r\n                filtered = unfiltered.filter(val => (val.grade <= value));\r\n            }else{\r\n                filtered = unfiltered;\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                filteredCourses: filtered\r\n            }\r\n        case courseTypes.CLEAR_FILTER:\r\n            return {\r\n                ...state,\r\n                filteredCourses: []\r\n            }\r\n        case courseTypes.TOGGLE_SELECT:\r\n            const { selectedCourse } = state;\r\n            if(selectedCourse && selectedCourse.code === action.payload){\r\n                return {\r\n                    ...state,\r\n                    selectedCourse: null,\r\n                    selectedTerm: null,  \r\n                    filteredCourses: [],\r\n                }\r\n            }\r\n            let x, y;\r\n            for (x = 0; x < state.courses.length; x++){\r\n                y = state.courses[x].findIndex(val => val.code.trim() === action.payload.trim());\r\n        \r\n                if (y >= 0){\r\n        \r\n                  \r\n                  return{\r\n                      ...state,\r\n                    selectedCourse: state.courses[x][y],\r\n                    selectedTerm: x,  \r\n                    filteredCourses: []\r\n                  };\r\n                  \r\n                }\r\n              }\r\n        \r\n\r\n              return state;\r\n        case courseTypes.CLEAR_SELECT:\r\n            return {\r\n                ...state,\r\n                selectedCourse: null,\r\n                selectedTerm: null\r\n            }\r\n\r\n        case courseTypes.EDIT_PREREQ:\r\n            let prereqcopy = state.prereq;\r\n            prereqcopy[action.payload.courseCode] = action.payload.prereqCourses;\r\n            return {\r\n                ...state,\r\n                prereq: prereqcopy\r\n            }\r\n        case courseTypes.EDIT_COREQ:\r\n            courseCode = action.payload.courseCode;\r\n            let coreqCourses = action.payload.coreqCourses;\r\n            let coreqcopy = state.coreq.slice();\r\n            // find the index of the 'set' that contains the courseCode, -1 if the code is not in any set\r\n            let index = coreqcopy.findIndex(courseSet => courseSet.includes(courseCode));\r\n\r\n            // if there are no supplied coreqs\r\n            // the user wants there to be no coreqCourses for this course\r\n            if (coreqCourses.length === 0){\r\n            \r\n                // delete the courseCode if index >= 0\r\n                if (index >= 0){\r\n                    coreqcopy[index].splice(coreqcopy[index].findIndex(c => c.code === courseCode), 1);\r\n                    if (coreqcopy[index].length === 0 || coreqcopy[index].length === 1){\r\n                        coreqcopy.splice(index, 1);\r\n                    }\r\n                    return {\r\n                        ...state,\r\n                        coreq: coreqcopy\r\n                    }\r\n                }\r\n                return state;\r\n            }\r\n\r\n            // if there are supplied coreqCourses\r\n\r\n\r\n            // if the course is not in the coreq list\r\n            if (index < 0){\r\n                // check if any of the coreq courses are already in the list. \r\n                // want to maintain only one set with each course\r\n                for (i = 0; i < coreqcopy.length; i++){\r\n                    if (coreqcopy[i].findIndex(c => coreqCourses.includes(c)) >= 0){\r\n                        index = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (index < 0){\r\n                // not in the list\r\n                coreqcopy.push([]);\r\n                coreqcopy[coreqcopy.length - 1].push(...coreqCourses, courseCode);\r\n            }else{\r\n                // if within the list\r\n                // concat the coreqlist \r\n        \r\n                // line below allows for deleting courses not found in coreqCourses \r\n                // in the case where the user is removing a course from the set\r\n                coreqcopy[index] = [...coreqCourses, courseCode];\r\n                \r\n                // remove duplicate values\r\n                coreqcopy[index] = [...new Set(coreqcopy[index])];\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                // function directly below helps prevent double entries\r\n                // If there are two sets that intersect,it will combine them.\r\n                // And if the user is combining a set with a single course, the set will be destroyed.\r\n                // (i.e. selecting a course that is not in a set and combining it with another that \r\n                // is in a set, the set of the later course will be destroyed, \r\n                // if both courses are each within different sets both sets will be combined)\r\n                // this function could behave weirdly with the code above that looks like:\r\n                // coreqcopy[index] = [...coreqCourses, courseCode]\r\n                // as that code deletes the previous set\r\n                coreq: combineCoreqSets(coreqcopy), \r\n            };\r\n\r\n        case courseTypes.SHOW_PREREQ:\r\n            const val = state.prereq[action.payload];\r\n            if (val !== undefined){\r\n                let filtered = getCoursesFromCodes(val, state.courses);\r\n                return {\r\n                    ...state,\r\n                    filteredCourses: filtered,\r\n                };\r\n            }\r\n            return {\r\n                ...state,\r\n                filteredCourses: []\r\n            };\r\n\r\n        case courseTypes.SHOW_COREQ:\r\n            \r\n            let selectedCoreqIndex = state.coreq\r\n            .findIndex(cl => cl.includes(action.payload));\r\n            \r\n            if (selectedCoreqIndex >= 0){\r\n                let list = state.coreq[selectedCoreqIndex];\r\n                list = list.filter(li => (li !== courseCode));\r\n                let filtered = getCoursesFromCodes(list, state.courses);\r\n                return{\r\n                    ...state,\r\n                    filteredCourses: filtered,\r\n                };\r\n            }\r\n            return {\r\n                ...state,\r\n                filteredCourses: []\r\n            };\r\n\r\n        case courseTypes.LOAD_COURSES:\r\n            return {\r\n                ...state,\r\n                courses: action.payload.courses,\r\n                prereq: action.payload.prereq,\r\n                coreq: action.payload.coreq\r\n            }\r\n\r\n        case courseTypes.DRAG_ENTER:\r\n            const newCourses = JSON.parse(JSON.stringify(state.courses));\r\n            const {params, currentItem} = action.payload;\r\n            newCourses[params.termI].splice(params.courseI, 0, newCourses[currentItem.termI].splice(currentItem.courseI, 1)[0]);\r\n            return {\r\n                ...state,\r\n                courses: newCourses,\r\n                selectedCourse: null,\r\n                selectedTerm: null,\r\n                filteredCourses: []\r\n            }\r\n\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default courseReducer;\r\n\r\n\r\n\r\n","import * as settingsTypes from './settingsTypes';\r\n\r\nconst initialState = {\r\n    darkmode: false,\r\n}\r\n\r\n\r\nconst settingsReducer = (state = initialState, action) => {\r\n    \r\n    switch(action.type){\r\n        case settingsTypes.TOGGLE_DARKMODE:\r\n            return {\r\n                ...state,\r\n                darkmode: action.payload.darkmode\r\n            };\r\n        default: return state;\r\n    }\r\n\r\n}\r\nexport default settingsReducer; ","import { combineReducers } from 'redux';\r\n\r\nimport courseReducer from './course/courseReducer';\r\nimport settingsReducer from './settings/settingsReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n   courses: courseReducer,\r\n   settings: settingsReducer\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport logger from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './rootReducer';\r\nconst store = createStore(rootReducer, applyMiddleware(logger, thunk));\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n\r\n"],"sourceRoot":""}