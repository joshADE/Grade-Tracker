{"version":3,"sources":["componenets/model/CourseClass.js","componenets/AddCourse.js","componenets/Course.js","componenets/Term.js","componenets/AddTerm.js","componenets/RemoveTerm.js","componenets/ProgramMap.js","componenets/layout/Header.js","componenets/pages/About.js","componenets/SaveChanges.js","componenets/GradeFilter.js","componenets/SideView.js","componenets/ResetChanges.js","componenets/Notification.js","componenets/CGPACalculator.js","App.js","serviceWorker.js","index.js"],"names":["CourseClass","name","code","grade","credits","this","AddCourse","props","onSubmit","e","preventDefault","state","courseCode","handleClickAddCourse","term","setState","message","onChange","target","value","style","addCourseStyle","inputStyle","type","placeholder","buttonStyle","className","Component","propType","PropTypes","func","isRequired","number","display","flexDirection","fontWeight","textAlign","justifyContent","height","width","padding","marginTop","borderRadius","Course","editedCourse","courseName","course","handleClickEditCourse","onSelect","form","timeout","clearTimeout","setTimeout","focus","scrollIntoView","behavior","block","inline","handleClickSelectCourse","selectButton","appliedclasses","isHighlighted","isSelected","ref","theform","courseStyle","alignSelf","sButton","onClick","handleClickDeleteCourse","bind","instanceOf","bool","background","Term","index","termNumber","termDisplay","key","termDisplayStyle","coursesDisplay","courseList","map","val","ind","highlighted","undefined","filteredCourses","find","val1","selectedCourse","length","array","object","AddTerm","handleClickAddTerm","addNewTermStyle","RemoveTerm","handleClickRemoveTerm","removeTermStyle","ProgramMap","rows","courses","includes","colSpan","maxCourseYears","headerStyle","border","color","linkStyle","textDecoration","Header","to","About","Fragment","SaveChanges","onSaveClick","GradeFilter","category","onClickFilterByCategory","gradeFilterStyle","id","defaultValue","btnStyle","flexWrap","cursor","SideView","action","removedValue","getSelectOption","label","getValueFromSelectOption","option","sendNotification","console","log","prereqCourses","prs","handleClickEditPrereq","coreqCourses","crs","handleClickEditCoreq","newProps","equal","updateState","first","second","result","JSON","stringify","prereq","coreq","selectedTerm","selectedPrereqList","selectPrereq","slice","selectOptionsPrereq","concat","apply","filter","selectedCoreqList","selectedCoreqIndex","findIndex","cl","c","selectOptionsCoreq","shouldShow","sideViewStyle","sytle","formStyle","buttonShowStyle","handleClickShowPrereq","styles","customStyles","isMulti","options","handleClickShowCoreq","overflowY","margin","container","provided","control","ResetChanges","onResetClick","Container","styled","div","top","emitter","ee","Notification","onShow","msg","showNotification","on","CGPACalculator","allcourses","totalPoints","reduce","prev","curr","totalCredits","CGPA","Math","round","cList","unshift","gradeFinderStyle","App","newCourses","push","trim","termList","EmptyCourse","Number","isNaN","i","splice","handleOnClickFilterByCategory","unfiltered","filtered","emit","notify","j","prereqcopy","coreqcopy","courseSet","Set","combineCoreqSets","clearFilteredCourses","getCoursesFromCodes","list","li","populateCourseData","window","confirm","dataStringCourses","localStorage","getItem","localStorageKey","dataStringPrereq","dataStringCoreq","dataObjectCourses","parse","dataObjectPrereq","dataObjectCoreq","setItem","max","inputCoreq","allcoreq","intersects","codes","exact","path","render","getMaxCourseForYears","saveCourseData","resetChanges","component","apiurlpartial","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.3313849c.chunk.js","sourcesContent":["  \r\nexport default class CourseClass {\r\n    constructor(name, code, grade, credits){\r\n        this.name = name;\r\n        this.code = code;\r\n        this.grade = grade;\r\n        this.credits = credits;\r\n    }\r\n\r\n  static EmptyCourse()\r\n  {\r\n      return new CourseClass('NA', 'NA', 0.0, 1.0);\r\n  }\r\n};","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class AddCourse extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            courseCode: '',\r\n            message:'Enter the course code'\r\n        }\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (!this.state.courseCode){\r\n            this.setState({\r\n                message: \"Must enter course code\"\r\n            });\r\n        }else{\r\n            let successCode = this.props.handleClickAddCourse(this.props.term,this.state.courseCode);\r\n            switch(successCode){\r\n                case 1:\r\n                    this.setState({message: 'Course code already exist'});\r\n                    break;\r\n                case 2:\r\n                    this.setState({message: 'Invalid course code'});\r\n                    break;\r\n                default:\r\n                    this.setState({message: '*'});\r\n    \r\n            }\r\n        }\r\n    }\r\n\r\n    onChange = (e) => this.setState({[e.target.name]: e.target.value });\r\n\r\n    render() {\r\n        return (\r\n      \r\n            <form\r\n            onSubmit={this.onSubmit}\r\n            style={addCourseStyle}\r\n            >\r\n            <span>{this.state.message}</span>\r\n                <input \r\n                    style={inputStyle}\r\n                    type=\"text\"\r\n                    name=\"courseCode\"\r\n                    placeholder=\"Course Code Here...\"\r\n                    value={this.state.courseCode}\r\n                    onChange={this.onChange}\r\n\r\n                />\r\n                <input \r\n                    style={buttonStyle}\r\n                    type=\"submit\"\r\n                    value=\"Add a new course (+)\"\r\n                    className=\"btn btn-add\"\r\n                 />\r\n            </form>\r\n        \r\n        )\r\n    }\r\n}\r\n\r\n\r\n// PropTypes\r\nAddCourse.propType = {\r\n    handleClickAddCourse: PropTypes.func.isRequired,\r\n    term: PropTypes.number.isRequired,\r\n}\r\n\r\n\r\nconst addCourseStyle = {\r\n    display:'flex', \r\n    flexDirection:'column',\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n    justifyContent: 'space-around',\r\n    height: 'auto',\r\n    width: 'auto',\r\n    padding: '5px',\r\n};\r\n\r\nconst buttonStyle = {\r\n    marginTop:'2px',\r\n    borderRadius: '5px',\r\n}\r\n\r\nconst inputStyle = {\r\n    marginTop:'2px',\r\n    borderRadius: '5px',\r\n    padding:'2px 4px',\r\n}\r\n\r\n\r\n\r\nexport default AddCourse\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport CourseClass from './model/CourseClass';\r\n\r\nexport class Course extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            courseName: this.props.course.name,\r\n            grade: this.props.course.grade,\r\n            credits:this.props.course.credits,\r\n            message: 'Messages here',\r\n        }\r\n        this.selectButton = null;\r\n        this.form = null;\r\n        this.timeout = null;\r\n    }\r\n\r\n    \r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        let editedCourse = \r\n        new CourseClass(this.state.courseName, this.props.course.code, this.state.grade, this.state.credits);\r\n        \r\n        let successCode = this.props.handleClickEditCourse(this.props.term, editedCourse);\r\n        switch(successCode){\r\n            case 1:\r\n                this.setState({message: 'grade must be a number'});\r\n                break;\r\n            case 2:\r\n                this.setState({message: 'credits must be a number'});\r\n                break;\r\n            default:\r\n                this.setState({message: ''});\r\n\r\n        }\r\n    }\r\n\r\n    onChange = (e) => this.setState({[e.target.name]: e.target.value });\r\n\r\n    onSelect = (e) => {\r\n        if(this.form){\r\n            if (this.timeout)\r\n                clearTimeout(this.timeout);\r\n\r\n            this.timeout = setTimeout(() => {\r\n                // set the focus on the form element after the select button is cliked\r\n                // and setTimeout performs this after css removes the form from view\r\n                this.form.focus();\r\n                this.form.scrollIntoView({behavior: \"smooth\", block: \"start\", inline: \"nearest\"});\r\n            }, 0); // 2sec is the transition\r\n            //alert(this.selectButton);\r\n        }\r\n        this.props.handleClickSelectCourse(this.props.course.code)\r\n    }\r\n\r\n    render(){\r\n       const {code, name, grade, credits} = this.props.course;\r\n        let appliedclasses = \"course \";\r\n        appliedclasses += this.props.isHighlighted? \"highlighted \" : \" \";\r\n        appliedclasses += this.props.isSelected? \"selected \" : \" \";\r\n       return(\r\n            <form\r\n            ref={(theform) => {this.form = theform;}}\r\n            onSubmit={this.onSubmit}\r\n            style={courseStyle}\r\n            className={appliedclasses}\r\n            >\r\n                <span style={{alignSelf:'center'}}>{this.state.message}</span>\r\n                <span>\r\n                    <label>Course Code:</label>{' '}\r\n                    {code}\r\n                </span>\r\n                <span>\r\n                    <label>Name:</label>{' '}\r\n                    {name}\r\n                </span>\r\n                <span>\r\n                    <label>New Name:</label>{' '}\r\n                    <input \r\n         \r\n                        style={inputStyle}\r\n                        type=\"text\"\r\n                        name=\"courseName\"\r\n                        value={this.state.courseName}\r\n                        onChange={this.onChange}\r\n                    />\r\n                </span>\r\n                <span>\r\n                    <label>Grade:</label>{' '}\r\n                    {grade}\r\n                </span>\r\n                <span>\r\n                    <label>New Grade:</label>{' '}\r\n                    <input \r\n                        style={inputStyle}\r\n                        type=\"text\"\r\n                        name=\"grade\"\r\n                        value={this.state.grade}\r\n                        onChange={this.onChange}\r\n                    />\r\n                </span>\r\n                <span>\r\n                    <label>Credits/Units:</label>{' '}\r\n                    {credits}\r\n                </span>\r\n                <span>\r\n                    <label>New Credits:</label>{' '}\r\n                    <input \r\n                        style={inputStyle}\r\n                        type=\"text\"\r\n                        name=\"credits\"\r\n                        value={this.state.credits}\r\n                        onChange={this.onChange}\r\n                    />\r\n                </span>\r\n                <input \r\n                    ref={(sButton) => {this.selectButton = sButton;}}\r\n                    style={buttonStyle}\r\n                    type=\"button\"\r\n                    value={this.props.isSelected?\"Deselect\":\"Select\"}\r\n                    className=\"btn\"\r\n                    onClick={\r\n                        this.onSelect\r\n                    }\r\n                />\r\n                <input \r\n                    style={buttonStyle}\r\n                    type=\"submit\"\r\n                    value=\"Set changes\"\r\n                    className=\"btn btn-save\"\r\n                    \r\n                />\r\n                <input \r\n                    style={buttonStyle}\r\n                    type=\"button\"\r\n                    value=\"Delete(-)\"\r\n                    className=\"btn btn-delete\"\r\n                    onClick={\r\n                        this.props.handleClickDeleteCourse.bind(this,this.props.term, this.props.course.code)\r\n                    }\r\n                />\r\n                \r\n            </form>\r\n            \r\n       )\r\n\r\n         \r\n\r\n    }\r\n}\r\n\r\n\r\n// PropTypes\r\nCourse.propType = {\r\n    handleClickEditCourse: PropTypes.func.isRequired,\r\n    course: PropTypes.instanceOf(CourseClass).isRequired,\r\n    term: PropTypes.number.isRequired,\r\n    isSelected: PropTypes.bool.isRequired,\r\n    handleClickDeleteCourse: PropTypes.func.isRequired,\r\n    handleClickSelectCourse: PropTypes.func.isRequired,\r\n    isHighlighted: PropTypes.bool.isRequired,\r\n}\r\n\r\nconst inputStyle = {\r\n    width: '100%',\r\n    background: 'lightgrey',\r\n    borderRadius: '5px',\r\n    padding:'2px 4px',\r\n}\r\n\r\nconst courseStyle = {\r\n    display:'flex', \r\n    flexDirection:'column',\r\n    borderRadius: '5px',\r\n    fontWeight: 'bold',\r\n    height: 'auto',\r\n    width: '200px',\r\n    padding: '5px', \r\n};\r\n\r\nconst buttonStyle = {\r\n    marginTop:'2px',\r\n    borderRadius: '5px',\r\n}\r\n\r\nexport default Course","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport AddCourse from './AddCourse';\r\nimport Course from './Course';\r\n\r\n\r\nexport class Term extends Component {\r\n    render() {\r\n        //console.log(this.props.filteredCourses);\r\n        const index = this.props.termNumber;\r\n        const termDisplay = (<th key={index + \"x\" + -1} style={termDisplayStyle}>{index + 1}</th>);\r\n        const coursesDisplay = \r\n        this.props.courseList.map((val, ind) => {\r\n                        \r\n            const highlighted = (this.props.filteredCourses.find(val1 => \r\n                (val1.code === val.code)) !== undefined);\r\n                //console.log(highlighted);\r\n            \r\n\r\n            let isSelected = false;\r\n                if (this.props.selectedCourse){\r\n                    isSelected = (this.props.selectedCourse.code === val.code);\r\n                }\r\n            \r\n            return (<td key={index + \"x\" + ind}>\r\n                <Course \r\n                    term={index}\r\n                    handleClickEditCourse={this.props.handleClickEditCourse}\r\n                    handleClickDeleteCourse={this.props.handleClickDeleteCourse}\r\n                    handleClickSelectCourse={this.props.handleClickSelectCourse}\r\n                    course={val}\r\n                    isSelected={isSelected}\r\n                    isHighlighted={highlighted}\r\n                    \r\n                />\r\n            </td>);\r\n        });\r\n        const newCourseButtonDisplay = (\r\n        <td key={index + \"x\" + (coursesDisplay.length + 1)}>\r\n            <AddCourse \r\n                term={this.props.termNumber}\r\n                handleClickAddCourse={this.props.handleClickAddCourse}\r\n            />\r\n        </td>);\r\n\r\n        return (\r\n            \r\n            [termDisplay, coursesDisplay, newCourseButtonDisplay]\r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n// PropTypes\r\nTerm.propType = {\r\n    courseList: PropTypes.array.isRequired,\r\n    termNumber: PropTypes.number.isRequired,\r\n    handleClickAddCourse: PropTypes.func.isRequired,\r\n    handleClickEditCourse: PropTypes.func.isRequired,\r\n    handleClickDeleteCourse: PropTypes.func.isRequired,\r\n    handleClickSelectCourse: PropTypes.func.isRequired,\r\n    selectedCourse: PropTypes.object.isRequired,\r\n    filteredCourses: PropTypes.array.isRequired,\r\n}\r\n\r\nconst termDisplayStyle = {\r\n    textAlign:'center',\r\n    height:'250px'\r\n};\r\n\r\nexport default Term\r\n","import PropTypes from 'prop-types';\r\nimport React, { Component } from 'react'\r\n\r\nexport class AddTerm extends Component {\r\n    render() {\r\n        return (\r\n            \r\n        <button \r\n        type=\"button\" \r\n        onClick={this.props.handleClickAddTerm} \r\n        style={addNewTermStyle}\r\n        className=\"btn btn-add\"\r\n        >\r\n            Add a new term\r\n        </button>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n// PropTypes\r\nAddTerm.propType = {\r\n    termNumber: PropTypes.number.isRequired,\r\n    handleClickAddTerm: PropTypes.func.isRequired,\r\n}\r\n\r\nconst addNewTermStyle = {\r\n    width:'100%',\r\n};\r\n\r\n\r\nexport default  AddTerm;","import PropTypes from 'prop-types';\r\nimport React, { Component } from 'react'\r\n\r\nexport class RemoveTerm extends Component {\r\n    render() {\r\n        return (\r\n            \r\n        <button \r\n        type=\"button\" \r\n        onClick={this.props.handleClickRemoveTerm} \r\n        style={removeTermStyle}\r\n        className=\"btn btn-delete\"\r\n        >\r\n            Remove the last term\r\n        </button>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n// PropTypes\r\nRemoveTerm.propType = {\r\n    termNumber: PropTypes.number.isRequired,\r\n    handleClickRemoveTerm: PropTypes.func.isRequired,\r\n}\r\n\r\nconst removeTermStyle = {\r\n    width:'100%',\r\n};\r\n\r\n\r\nexport default RemoveTerm;","import React, { Component } from 'react';\r\nimport Term from './Term';\r\n//import { v3, v4, v5 } from 'uuid'\r\nimport PropTypes from 'prop-types';\r\nimport AddTerm from './AddTerm';\r\nimport RemoveTerm from './RemoveTerm';\r\n\r\nexport class ProgramMap extends Component {\r\n\r\n    render() {\r\n        const rows = this.props.courses.map((courseList, index) => {\r\n            let isSelected = false;\r\n                if (this.props.selectedCourse){\r\n                    isSelected = courseList.includes(this.props.selectedCourse);\r\n                }\r\n            \r\n            return <tr \r\n            className={isSelected?\"selected-term\":\"\"}\r\n            key={index}>\r\n            {\r\n                <Term \r\n                    \r\n                    selectedCourse={this.props.selectedCourse}\r\n                  termNumber={index}\r\n                  courseList={courseList}\r\n                  handleClickAddCourse={this.props.handleClickAddCourse}\r\n                  handleClickEditCourse={this.props.handleClickEditCourse}\r\n                  handleClickSelectCourse={this.props.handleClickSelectCourse}\r\n                  handleClickDeleteCourse={this.props.handleClickDeleteCourse}\r\n                  filteredCourses={this.props.filteredCourses}\r\n                />\r\n            }\r\n            </tr>;\r\n    \r\n        });\r\n        return (\r\n        <table className=\"courseTable\"> \r\n            <thead>\r\n                <tr>\r\n                    <th>Term</th>\r\n                    <th \r\n                    colSpan={this.props.maxCourseYears + 1}\r\n                    >\r\n                        Courses\r\n                    </th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {rows}\r\n                <tr>\r\n                    <td \r\n                    key={rows.length + 1}\r\n                    colSpan={this.props.maxCourseYears + 2}>\r\n                    <AddTerm \r\n                    termNumber={rows.length + 1}\r\n                    handleClickAddTerm={this.props.handleClickAddTerm}\r\n                    />\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td \r\n                    key={rows.length + 2}\r\n                    colSpan={this.props.maxCourseYears + 2}>\r\n                    <RemoveTerm \r\n                    termNumber={rows.length - 1}\r\n                    handleClickRemoveTerm={this.props.handleClickRemoveTerm}\r\n                    />\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n        )\r\n    }\r\n}\r\n\r\n// PropTypes\r\nProgramMap.propType = {\r\n    handleClickAddTerm: PropTypes.func.isRequired,\r\n    handleClickRemoveTerm: PropTypes.func.isRequired,\r\n    handleClickAddCourse: PropTypes.func.isRequired,\r\n    handleClickEditCourse: PropTypes.func.isRequired,\r\n    handleClickDeleteCourse: PropTypes.func.isRequired,\r\n    handleClickSelectCourse: PropTypes.func.isRequired,\r\n    maxCourseYears: PropTypes.number.isRequired,\r\n    courses: PropTypes.array.isRequired,\r\n    selectedCourse: PropTypes.object.isRequired,\r\n    filteredCourses: PropTypes.array.isRequired\r\n}\r\n\r\n\r\n\r\nexport default ProgramMap\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header style={headerStyle}>\r\n            <h1>Program Map Helper</h1>\r\n            <Link style={linkStyle} to=\"/\">Home</Link> | {' '}  \r\n            <Link style={linkStyle} to=\"/about\">About</Link> \r\n        </header>\r\n    )\r\n}\r\n\r\n\r\nconst headerStyle = {\r\n    border: '2px solid black',\r\n    background: '#677',\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    padding: '10px'\r\n}\r\n\r\nconst linkStyle = {\r\n    color: '#fff',\r\n    textDecoration: 'none'\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react'\r\n\r\nfunction About() {\r\n    return (\r\n        <React.Fragment>\r\n          <h1>About</h1> \r\n          <p>This is the app to help plan and aid program outline v1.0.0.</p> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default About;\r\n","import React from 'react'\r\n\r\nfunction SaveChanges(props) {\r\n    return (\r\n        <input\r\n            onClick={props.onSaveClick}\r\n            style={buttonStyle}\r\n            className=\"btn btn-save\"\r\n            type=\"button\"\r\n            value=\"Save the changes\"\r\n        />\r\n    )\r\n}\r\nconst buttonStyle = {\r\n    borderRadius:'5px',\r\n    border:'2px solid black',\r\n    background: '#55F',\r\n};\r\n\r\nexport default SaveChanges;\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class GradeFilter extends Component {\r\n        \r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            category: '2',\r\n            val: 0.0\r\n        };\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const {category, val} = this.state;\r\n        this.props.onClickFilterByCategory(category, val);\r\n    }\r\n\r\n    onChange = (e) => this.setState({[e.target.name]: e.target.value });\r\n\r\n    \r\n    render() {\r\n        return (\r\n            \r\n            <form style={gradeFilterStyle}\r\n            onSubmit={this.onSubmit}\r\n\r\n            >\r\n                <label>Find courses with grade </label>\r\n                {'  '}\r\n                <select \r\n                style={inputStyle}\r\n                id=\"filter\"\r\n                name=\"category\"\r\n                onChange={this.onChange}\r\n                defaultValue={this.state.category}\r\n                >\r\n                    <option value={1}>greater than</option>\r\n                    <option value={2}>less than</option>\r\n                    <option value={3}>equal to</option>\r\n                    <option value={4}>greater than or equal to</option>\r\n                    <option value={5}>less than or equal to</option>\r\n                </select>\r\n                {'  '}\r\n\r\n                <input style={inputStyle} type=\"text\" onChange={this.onChange}  name=\"val\" value={this.state.value} placeholder={0.0} />\r\n                {'  '}\r\n                <input style={btnStyle} type=\"submit\" value=\"Filter\"/>\r\n            </form>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n// PropTypes\r\nGradeFilter.propType = {\r\n    onClickFilterByCategory: PropTypes.func.isRequired,\r\n}\r\n\r\nconst gradeFilterStyle = {\r\n    \r\n    padding: '5px 15px',\r\n    borderRadius:'5px',\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent:'space-evenly',\r\n    background: '#566',\r\n    border: '2px solid black',\r\n    color: 'white'\r\n};\r\n\r\nconst inputStyle = {\r\n    background: 'lightgrey',\r\n    borderRadius: '5px',\r\n}\r\n\r\nconst btnStyle = {\r\n    display: 'inline-block',\r\n    border: 'none',\r\n    background: '#67F',\r\n    borderRadius: '5px',\r\n    color: '#fff',\r\n    padding: '2px 10px',\r\n    cursor: 'pointer',\r\n};\r\n\r\nexport default GradeFilter\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport Select from 'react-select'\r\n\r\nexport class SideView extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            prereqCourses:[],\r\n            coreqCourses:[],\r\n\r\n        };\r\n    }\r\n    \r\n    // New onChange(for 'react-select' component)\r\n    onChange = (value, { name, action, removedValue }) => {\r\n        switch (action) {\r\n          case 'remove-value':\r\n            break;\r\n          case 'pop-value':\r\n            break;\r\n          case 'clear':\r\n            break;\r\n            default:\r\n        }\r\n        \r\n        this.setState({ \r\n            [name]: value \r\n        });\r\n    }\r\n\r\n    // Transforms a course into a format used by 'react-select'\r\n    getSelectOption = (course) => {\r\n        return {value: course.code, label: course.code };\r\n    }\r\n    // Transforms from 'react-select' option format to course code\r\n    getValueFromSelectOption = (option) => {\r\n        return option.value;\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        // Notify the user that their changes have been set\r\n        this.props.sendNotification(\"Changes set\");\r\n        \r\n        // New onSubmit code\r\n        // must extract the value from the react-select components\r\n        const code = this.props.selectedCourse.code;\r\n        console.log(\"submitted\");\r\n        if (this.state.prereqCourses == null){\r\n            this.setState({\r\n                prereqCourses:  [],\r\n            })\r\n        }\r\n        console.log(\"prereq\");\r\n        const prs = this.state.prereqCourses.map(option => this.getValueFromSelectOption(option));\r\n        console.log(prs);\r\n        this.props.handleClickEditPrereq(code, prs);\r\n        \r\n\r\n        if(this.state.coreqCourses == null){\r\n            this.setState({\r\n                coreqCourses:  [],\r\n            })\r\n        }\r\n        const crs = this.state.coreqCourses.map(option => this.getValueFromSelectOption(option));\r\n        console.log(\"coreq\");\r\n        console.log(crs);\r\n        this.props.handleClickEditCoreq(code, crs);\r\n        \r\n    }\r\n\r\n    \r\n\r\n    \r\n    // this doesn't get called after a user deletes a course\r\n    // only componentWillUpdate gets called\r\n    componentWillReceiveProps(newProps){\r\n        console.log(\"Inside componentWillReceiveProps\");\r\n        console.log(this.props);\r\n        console.log(newProps);\r\n        \r\n        \r\n        // Only update the state (and then the UI) if the component\r\n        // receives a new set of props\r\n        console.log(\"Are the oldProp and newProp equal?\");\r\n        if (!this.equal(this.props, newProps)){\r\n            this.updateState(newProps);\r\n        }\r\n    }\r\n    \r\n\r\n\r\n    equal(first, second){\r\n        const result = JSON.stringify(first) === JSON.stringify(second);\r\n        console.log(\"result: \" + result);\r\n        return result;\r\n    }\r\n\r\n    \r\n\r\n    updateState(newProps){\r\n\r\n        const {selectedCourse, prereq, coreq, courses, selectedTerm} = newProps;\r\n\r\n        \r\n        if (!selectedCourse) return;\r\n\r\n        let selectedPrereqList = prereq[selectedCourse.code];\r\n        if (!selectedPrereqList){\r\n            selectedPrereqList = [];\r\n        }\r\n\r\n        console.log(\"selectedPrereqList\");\r\n        console.log(selectedPrereqList);\r\n        \r\n        let selectPrereq = courses.slice(0, selectedTerm);\r\n        let selectOptionsPrereq = [].concat.apply([], selectPrereq); // flatten the 2d array\r\n        \r\n        // get the full course details of the courses that are prereq\r\n        selectOptionsPrereq = selectOptionsPrereq\r\n        .filter(course => {\r\n            return course.code !== selectedCourse.code && selectedPrereqList.includes(course.code);\r\n        });\r\n        \r\n\r\n\r\n        let selectedCoreqIndex = coreq\r\n        .findIndex(cl => (cl.findIndex(c => c === selectedCourse.code) >= 0));\r\n        \r\n\r\n        let selectedCoreqList;\r\n        if (selectedCoreqIndex < 0){\r\n            selectedCoreqList = [];\r\n        }else{\r\n            selectedCoreqList = coreq[selectedCoreqIndex];\r\n        }\r\n\r\n        console.log(\"selectedCoreqList\");\r\n        console.log(selectedCoreqList);\r\n\r\n        \r\n        // get the full course details of the courses that are coreq\r\n        console.log(selectedTerm);\r\n        let selectOptionsCoreq = courses[selectedTerm];\r\n        if (selectOptionsCoreq == null){\r\n            selectOptionsCoreq = [];\r\n        }\r\n        selectOptionsCoreq = selectOptionsCoreq\r\n        .filter(course => {\r\n            return course.code !== selectedCourse.code && selectedCoreqList.includes(course.code) ;\r\n        });\r\n        \r\n\r\n        \r\n        this.setState({\r\n            prereqCourses: selectOptionsPrereq.map(c => this.getSelectOption(c)),\r\n            coreqCourses: selectOptionsCoreq.map(c => this.getSelectOption(c)),\r\n        });\r\n        \r\n            \r\n        \r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const shouldShow = (this.props.selectedCourse !== null);\r\n        \r\n        if (!shouldShow){\r\n            return (\r\n                <div style={sideViewStyle}>\r\n                    <h2>Advanced Course Edit</h2>\r\n                    <p>You must select a course first</p>\r\n                </div>\r\n            );\r\n        }\r\n        \r\n        \r\n        const {courses, selectedTerm, selectedCourse} = this.props;\r\n\r\n\r\n        // get the available options for the prereq courses\r\n        let selectPrereq = courses.slice(0, selectedTerm);\r\n        let selectOptionsPrereq = [].concat.apply([], selectPrereq); // flatten the 2d array\r\n        \r\n        selectOptionsPrereq = selectOptionsPrereq\r\n        .map((course) =>{\r\n            return this.getSelectOption(course);\r\n        });\r\n        \r\n        \r\n\r\n\r\n        // get the available options for the coreq courses\r\n        let selectOptionsCoreq = courses[selectedTerm];\r\n        \r\n        if (selectOptionsCoreq == null){\r\n            selectOptionsCoreq = [];\r\n        }\r\n        selectOptionsCoreq = selectOptionsCoreq\r\n        .filter(course => {\r\n            return course.code !== selectedCourse.code;\r\n        })\r\n        .map(course =>{\r\n            return this.getSelectOption(course);\r\n        });\r\n        \r\n\r\n\r\n       \r\n        const form = \r\n                <form\r\n                onSubmit={this.onSubmit}\r\n                sytle={formStyle}\r\n                className=\"sideViewForm\"\r\n                >\r\n                    <h3>For course: {(shouldShow)?this.props.selectedCourse.code:\"\"}</h3>\r\n                    \r\n                    \r\n                    <div>\r\n                        <label>Prerequisites</label>\r\n                        <br/>\r\n                        <input \r\n                            className=\"btnShow\"\r\n                            style={buttonShowStyle}\r\n                            type=\"button\" \r\n                            value=\"Highlight Pre-requisites\" \r\n                            onClick={this.props.handleClickShowPrereq.bind(this, selectedCourse.code)}\r\n\r\n                        />\r\n                        <Select \r\n                            \r\n                            styles={customStyles}\r\n                            onChange={this.onChange}\r\n                            name=\"prereqCourses\"\r\n                            isMulti \r\n                            options={selectOptionsPrereq}\r\n                            value={this.state.prereqCourses}\r\n                        />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label>Corequisites</label>\r\n                        <br/>\r\n                        <input \r\n                            className=\"btnShow\"\r\n                            style={buttonShowStyle}\r\n                            type=\"button\" \r\n                            value=\"Highlight Co-requisites\"\r\n                            onClick={this.props.handleClickShowCoreq.bind(this, selectedCourse.code)}\r\n                        />\r\n                        <Select \r\n                            \r\n                            styles={customStyles}\r\n                            onChange={this.onChange}\r\n                            name=\"coreqCourses\"\r\n                            isMulti \r\n                            options={selectOptionsCoreq}\r\n                            value={this.state.coreqCourses}\r\n                        />\r\n                    </div>\r\n                \r\n                    <div style={{textAlign:'center', fontWeight:'bold'}}>\r\n                        Remember to click accept changes after making changes\r\n                    </div>\r\n                            \r\n                                    \r\n                                \r\n                    <input className=\"btn btn-save\" type=\"submit\" value=\"Accept Changes\"/>\r\n                </form>\r\n                ;\r\n\r\n\r\n\r\n\r\n        return (\r\n            <div style={sideViewStyle}>\r\n                \r\n                <h2>Advanced Course Edit</h2>\r\n                \r\n                {\r\n                    form\r\n                }\r\n            </div>\r\n        );\r\n        \r\n    }\r\n}   \r\n\r\n\r\n// PropTypes\r\nSideView.propType = {\r\n    sendNotification: PropTypes.func.isRequired,\r\n    handleClickEditCourse: PropTypes.func.isRequired,\r\n    courses: PropTypes.array.isRequired,\r\n    selectedTerm: PropTypes.number.isRequired,\r\n    selectedCourse: PropTypes.object.isRequired,\r\n    prereq: PropTypes.array.isRequired,\r\n    coreq: PropTypes.array.isRequired,\r\n    handleClickEditPrereq: PropTypes.func.isRequired,\r\n    handleClickEditCoreq: PropTypes.func.isRequired,\r\n}\r\n\r\nconst sideViewStyle = {\r\n    background: 'lightgrey',\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    border: '2px solid grey',    \r\n    overflowY: 'scroll',\r\n    height: '100%', \r\n}\r\n\r\nconst buttonShowStyle = {\r\n    \r\n}\r\n\r\n\r\nconst formStyle = {\r\n    border: 'none',\r\n    margin: '0 auto',\r\n}\r\n\r\n// Custom style for 'react-select', uses Emotion JS\r\nconst customStyles = {\r\n    container: (provided, state) => ({\r\n        ...provided,\r\n        // none of react-select's styles are passed to <Control />\r\n        width: 'auto',\r\n        margin: '10px 25%',\r\n      }),\r\n\r\n      control: (provided, state) => ({\r\n        ...provided,\r\n        overflowY: 'scroll',\r\n        height: 30,\r\n      }),\r\n\r\n\r\n}\r\n\r\n\r\nexport default SideView\r\n","import React from 'react'\r\n\r\nfunction ResetChanges(props) {\r\n    return (\r\n        <input\r\n            type=\"button\"\r\n            onClick={props.onResetClick}\r\n            style={buttonStyle}\r\n            className=\"btn btn-reset\"\r\n            value=\"Reset the changes\"\r\n        />\r\n    )\r\n}\r\nconst buttonStyle = {\r\n    borderRadius:'5px',\r\n    border:'2px solid black',\r\n    background: 'rgb(241, 83, 83)',\r\n};\r\n\r\nexport default ResetChanges;\r\n","import React, { Component } from 'react'\r\nimport styled from 'styled-components';\r\nimport ee from 'event-emitter';\r\n\r\nconst Container = styled.div\r\n`\r\n    background-color: #444;\r\n    color: white;\r\n    padding: 16px;\r\n    position: absolute;\r\n    top: ${props => props.top}px;\r\n    right: 16px;\r\n    z-index: 999;\r\n    transition: top 0.5s ease;\r\n\r\n`;\r\n\r\nconst emitter = new ee();\r\n\r\nexport const notify = (msg) => {\r\n    emitter.emit('notification', msg);\r\n}\r\n\r\nexport class Notification extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            top: -100,\r\n            msg: '',\r\n        };\r\n\r\n        this.timeout = null;\r\n\r\n        emitter.on('notification', (msg) => {\r\n            this.onShow(msg);\r\n        });\r\n    }\r\n\r\n    onShow = (msg) => {\r\n        if (this.timeout){\r\n            clearTimeout(this.timeout);\r\n            this.setState({ top: -100}, () => {\r\n                this.timeout = setTimeout(() => {\r\n                    this.showNotification(msg);\r\n                }, 500);\r\n            });\r\n        }else{\r\n            this.showNotification(msg);\r\n        }\r\n    }\r\n\r\n    showNotification = (msg) => {\r\n        this.setState({\r\n            top: 100,\r\n            msg\r\n        }, () => {\r\n            this.timeout = setTimeout(() => {\r\n                this.setState({\r\n                    top: -100,\r\n                });\r\n            }, 3000)\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container top={this.state.top}>{this.state.msg}</Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Notification\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class CGPACalculator extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            term: this.props.courses.length, // last term\r\n            CGPA: 0,\r\n        };\r\n    }\r\n\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { courses } = this.props;\r\n        const { term } = this.state;\r\n        if (term > -1){\r\n            let allcourses = courses.slice(0, term);\r\n            allcourses = [].concat.apply([], allcourses); // flatten the 2d array\r\n            console.log(allcourses);\r\n            let totalPoints = allcourses.reduce((prev, curr) => prev + curr.grade * curr.credits, 0);\r\n            let totalCredits = allcourses.reduce((prev, curr) => prev + curr.credits, 0);\r\n            if (totalCredits === 0) totalCredits = 1; // to prevent divide by 0\r\n            this.setState({\r\n                CGPA: Math.round(totalPoints/ totalCredits* 100) / 100,\r\n            });\r\n        }else{\r\n            this.setState({\r\n                CGPA: 0\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = (e) => this.setState({[e.target.name]: e.target.value });\r\n\r\n    \r\n    render() {\r\n\r\n        const { courses } = this.props;\r\n        const { term } = this.state;\r\n\r\n        const options = courses.map((cList, index) => {\r\n            return <option key={index+1} value={index + 1}>{index + 1}</option>;\r\n        });\r\n        options.unshift(\r\n            <option key={-1} value={-1}>Choose and option</option>\r\n        );\r\n\r\n\r\n        return (\r\n            \r\n            <form style={gradeFinderStyle}\r\n            onSubmit={this.onSubmit}\r\n            >\r\n                <label>Find the GPA of the courses up to term:</label>\r\n                {'  '}\r\n                <select\r\n                style={inputStyle} \r\n                name=\"term\"\r\n                onChange={this.onChange}\r\n                defaultValue={term}\r\n                >\r\n                    {options}\r\n                </select>\r\n                {'  '}\r\n                <input type=\"submit\" style={btnStyle} value=\"Calculate\"/>\r\n                {'  '}\r\n                <label>CGPA: {this.state.CGPA}</label>\r\n            </form>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n// PropTypes\r\nCGPACalculator.propType = {\r\n    courses: PropTypes.array.isRequired,\r\n}\r\n\r\nconst gradeFinderStyle = {\r\n    padding: '5px 15px',\r\n    borderRadius:'5px',\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent:'space-evenly',\r\n    background: '#566',\r\n    border: '2px solid black',\r\n    color: 'white'\r\n};\r\n\r\nconst btnStyle = {\r\n    display: 'inline-block',\r\n    border: 'none',\r\n    background: '#67F',\r\n    borderRadius: '5px',\r\n    color: '#fff',\r\n    padding: '2px 10px',\r\n    cursor: 'pointer',\r\n};\r\n\r\nconst inputStyle = {\r\n    background: 'lightgrey',\r\n    borderRadius: '5px',\r\n}\r\n\r\n\r\nexport default CGPACalculator\r\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\n//import { v3, v4, v5 } from 'uuid'\nimport './App.css';\nimport CourseClass from './componenets/model/CourseClass';\nimport ProgramMap from './componenets/ProgramMap';\nimport Header from './componenets/layout/Header';\nimport About from './componenets/pages/About';\nimport SaveChanges from './componenets/SaveChanges';\nimport GradeFilter from './componenets/GradeFilter';\nimport SideView from './componenets/SideView';\nimport ResetChanges from './componenets/ResetChanges';\nimport Notification, { notify } from './componenets/Notification';\nimport CGPACalculator from './componenets/CGPACalculator';\n\n\nconst SAMPLE_COURSES = [\n  [\n    new CourseClass(\"OO Prog\", \"PROG10082\", 3.3, 6),\n    new CourseClass(\"Intro to Data.\", \"TELE13167\", 2.6, 3),\n    new CourseClass(\"Web Dev.\", \"SYST10049\", 3.5, 3)\n  ],\n  [\n    new CourseClass(\"OO Prog 2\", \"PROG24178\", 3.0, 6),\n    new CourseClass(\"Data Netw. Design\", \"TELE33324\", 2.2, 3),\n    new CourseClass(\"Web Prog.\", \"SYST10199\", 2.6, 3)\n  ],\n  [\n    new CourseClass(\"JAVA\", \"PROG32758\", 3.3, 6),\n    new CourseClass(\"Comp. Sec.\", \"INFO24178\", 3.3, 3),\n    new CourseClass(\"Databases\", \"DBAS27198\", 3.3, 3)\n  ]\n]\n\nconst SAMPLE_PREREQ = {\n  \"PROG24178\": [\"PROG10082\"],\n  \"PROG32758\": [\"PROG24178\"],\n  \"TELE33324\": [\"TELE13167\"],\n  \"SYST10199\": [\"SYST10049\"],\n}\n\nconst SAMPLE_COREQ = [\n  [\"PROG32758\", \"DBAS27198\"],\n]\n\n\nclass App extends Component {\n  static apiurlpartial = '';\n  static localStorageKey = 'courses';\n  constructor(props){\n    super(props);\n    this.state = { \n      courses: [[]], // 2d array, 1st dim = terms, 2nd dim = courses\n      filteredCourses: [], // array of courses to highlight\n      prereq: {}, // will be treated as a map/dictionary, stores all prerequisites for each course, values are arrays\n      coreq: [], // will be treated as an array of sets(but implmented as a 2d array)\n      selectedCourse: null, // current selected course\n      selectedTerm: null // current selected term\n    };\n    \n  }\n\n  componentDidMount(){\n    this.populateCourseData();\n  }\n\n  resetChanges(){\n    let confirmed = window.confirm(\"Are you sure you want to reset to the last saved changes?\");\n    if (!confirmed){\n      return;\n    }\n    this.populateCourseData();\n    this.setState({\n      filteredCourses: [],\n      selectedCourse: null,\n      selectedTerm: null\n    });\n  }\n\n\n  /* Local Storage Saving / Retrieving */\n  populateCourseData(){\n    const dataStringCourses = localStorage.getItem(App.localStorageKey);\n    const dataStringPrereq = localStorage.getItem(App.localStorageKey+\"prereq\");\n    const dataStringCoreq = localStorage.getItem(App.localStorageKey+\"coreq\");\n    //alert(\"retrieved \" + JSON.parse(dataString) + \" from localStorage.\");\n    if (!dataStringCourses){\n      return;\n    }\n    const dataObjectCourses = JSON.parse(dataStringCourses);\n    const dataObjectPrereq = JSON.parse(dataStringPrereq);\n    const dataObjectCoreq = JSON.parse(dataStringCoreq);\n\n\n    this.setState({\n      courses: dataObjectCourses,\n      prereq: (dataObjectPrereq)?dataObjectPrereq:this.state.prereq,\n      coreq: (dataObjectCoreq)?dataObjectCoreq:this.state.coreq,\n    });\n\n    \n  }\n\n  saveCourseData(){\n    let confirmed = window.confirm(\"Are you sure you want to save all the changes?\");\n    if (!confirmed){\n      return;\n    }\n    //alert(\"saving \" + JSON.stringify(this.state.courses) + \" into localStorage.\");\n    localStorage.setItem(App.localStorageKey, JSON.stringify(this.state.courses));\n    localStorage.setItem(App.localStorageKey+\"prereq\", JSON.stringify(this.state.prereq));\n    localStorage.setItem(App.localStorageKey+\"coreq\", JSON.stringify(this.state.coreq));\n  }\n\n\n  /* Basic Edits (Used in Course) */\n\n  // Adding a new term\n  handleClickAddTerm = () => {\n    //console.log(\"Adding a term\");\n    let newCourses = this.state.courses.slice();\n    newCourses.push([]);\n    this.setState({\n        courses: newCourses,\n    });\n    \n  }\n\n  // Removing th last term\n  handleClickRemoveTerm = () => {\n    if (this.state.courses.length <= 1){\n      return;\n    }\n   \n    //TODO: Should perform the delete function on each course in the term\n  \n    this.setState({\n      courses: this.state.courses.slice(0, this.state.courses.length - 1),\n    });\n  }\n\n  // Adding a new course\n  handleClickAddCourse = (term, courseCode) => {\n        \n    courseCode = courseCode.trim();\n    if (courseCode === null || courseCode === \"\"){\n      return 2;\n    }\n    let courseList = this.state.courses.slice();\n    let courseCodeFound = courseList\n    .find(termList => termList\n      .find(course => course.code === courseCode) !== undefined);\n\n    if (courseCodeFound !== undefined){\n      return 1;\n    }\n    let course = CourseClass.EmptyCourse();\n    course.code = courseCode;\n    courseList[term].push(course);\n    this.setState({\n        courses: courseList,\n    });\n    return 0;\n  }\n\n  // Editing an existing course\n  handleClickEditCourse = (term, editedCourse) => {\n\n    editedCourse.grade = Number(editedCourse.grade);\n    editedCourse.credits = Number(editedCourse.credits);\n    if (isNaN(editedCourse.grade)){\n      return 1;\n    }\n    if (isNaN(editedCourse.credits)){\n      return 2;\n    }\n\n    let courseList = this.state.courses.slice();\n    courseList[term] = courseList[term].map(c => {\n      if (c.code === editedCourse.code){\n        return editedCourse;\n      }else{\n        return c;\n      }\n    });\n    this.setState({\n        courses: courseList,\n    });\n\n    return 0;\n  }\n\n  // Deleting an existing course\n  handleClickDeleteCourse = (term, courseCode) => {\n    let courseList = this.state.courses.slice();\n    let i = courseList[term].findIndex(course => course.code === courseCode);\n    if (i >= 0){\n      courseList[term].splice(i, 1);\n      this.setState({\n          courses: courseList,\n          selectedCourse: null,\n          selectedTerm: null\n      });\n    }\n\n    //TODO: Should implement deleting of the prerequisite/corequisites\n  }\n\n  // Finding/Filtering course with specific GPA\n  handleOnClickFilterByCategory = (category, value) => {\n    this.setState({\n      selectedCourse: null, // current selected course\n      selectedTerm: null // current selected term\n    });\n    const unfiltered = [].concat.apply([], this.state.courses);\n    let filtered = [];\n    //console.log(unfiltered);\n    switch(category){\n      case '1': // greater than\n        filtered = unfiltered.filter(val => (val.grade > value));\n        break;\n      case '2': // less than\n      filtered = unfiltered.filter(val => (val.grade < value));\n          break;\n      case '3': // equal\n      filtered = unfiltered.filter(val => (val.grade === value));\n        break;\n      case '4': // greater than or equal to\n        filtered = unfiltered.filter(val => (val.grade >= value));\n            break;\n      case '5': // less than or equal to\n        filtered = unfiltered.filter(val => (val.grade <= value));\n          break;\n      default:\n        \n    }\n    //console.log(filtered);\n\n    this.setState({\n      filteredCourses: filtered,\n    });\n    //console.log(this.state.filteredCourses);\n\n  }\n\n  // Clear all the course that were filtered and highlighted\n  clearFilteredCourses(){\n    this.setState({\n      filteredCourses: [],\n    });\n  }\n\n  // Finding the max number of courses out of all terms\n  getMaxCourseForYears(){\n      const max = Math.max(...this.state.courses.map((val, index) => val.length));\n      return max;\n  }\n\n  sendNotification = (msg) => {\n    notify(msg);\n  }\n\n\n\n  /* Advanced Edit (Used in SideView) */\n\n  // Selecting a course given courseCode\n  handleClickSelectCourse = (courseCode) => {\n    const { selectedCourse } = this.state;\n    if(selectedCourse && selectedCourse.code === courseCode){\n      // deselect the course\n      this.setState({\n        selectedCourse: null,\n        selectedTerm: null,  \n        filteredCourses: [],\n      });\n      return;\n    }\n    // else\n    \n    let allcourses = this.state.courses;\n    let i;\n    let j;\n    console.log(courseCode);\n\n    for (i = 0; i < allcourses.length; i++){\n        j = allcourses[i].findIndex(val => val.code.trim() === courseCode.trim());\n\n        if (j >= 0){\n\n          console.log(\"found at \" + i + \" \" + j);\n          this.setState({\n            selectedCourse: allcourses[i][j],\n            selectedTerm: i,  \n            filteredCourses: [],\n          });\n          //console.log(this.state.selectedCourse);\n          break;\n        }\n      }\n    \n    \n  }\n\n  // Editing the prerequisites given a the courseCode and a list of courseCodes of the prerequisites courses\n  // GUI side (component) enforces whether two courses are prerequisites\n  handleClickEditPrereq = (courseCode, prereqCourses) => {\n    console.log(\"Setting prereq of course: \" + courseCode + \" to \" + prereqCourses);\n    let prereqcopy = this.state.prereq;\n    prereqcopy[courseCode] = prereqCourses;\n    this.setState({\n      prereq: prereqcopy\n    });\n\n    //console.log(this.state.prereq);\n  }\n\n  // Same as above except with corequisites\n  handleClickEditCoreq = (courseCode, coreqCourses) => {\n    \n    console.log(\"Setting coreq of course: \" + courseCode + \" to \" + coreqCourses);\n    let coreqcopy = this.state.coreq.slice();\n    // find the index of the 'set' that contains the courseCode, -1 if the code is not in any set\n    let index = coreqcopy.findIndex(courseSet => courseSet.includes(courseCode));\n    console.log(index);\n    \n    // if there are no supplied coreqs\n    // the user wants there to be no coreqCourses for this course\n    if (coreqCourses.length === 0){\n      \n      // delete the courseCode if index >= 0\n      if (index >= 0){\n        coreqcopy[index].splice(coreqcopy[index].findIndex(c => c.code === courseCode), 1);\n        if (coreqcopy[index].length === 0 || coreqcopy[index].length === 1){\n          coreqcopy.splice(index, 1);\n        }\n        \n        console.log(coreqcopy);\n        this.setState({\n          coreq: coreqcopy,\n        });\n      }\n      return;\n    }\n    \n    // if there are supplied coreqCourses\n\n\n    // if the course is not in the coreq list\n    if (index < 0){\n      // check if any of the coreq courses are already in the list. \n      // want to maintain only one set with each course\n      for (let i = 0; i < coreqcopy.length; i++){\n        if (coreqcopy[i].findIndex(c => coreqCourses.includes(c)) >= 0){\n          index = i;\n          console.log(\"found a match at index: \" + index);\n          break;\n        }\n      }\n    }\n    \n    if (index < 0){\n      // not in the list\n      coreqcopy.push([]);\n      coreqcopy[coreqcopy.length - 1].push(...coreqCourses, courseCode);\n    }else{\n      // if within the list\n      // concat the coreqlist \n\n       // line below allows for deleting courses not found in coreqCourses \n       // in the case where the user is removing a course from the set\n      coreqcopy[index] = [...coreqCourses, courseCode];\n      \n      // remove duplicate values\n      coreqcopy[index] = [...new Set(coreqcopy[index])];\n    }\n\n\n\n    console.log(coreqcopy);\n    this.setState({\n      // function directly below helps prevent double entries\n      // If there are two sets that intersect,it will combine them.\n      // And if the user is combining a set with a single course, the set will be destroyed.\n      // (i.e. selecting a course that is not in a set and combining it with another that \n      // is in a set, the set of the later course will be destroyed, \n      // if both courses are each within different sets both sets will be combined)\n      // this function could behave weirdly with the code above that looks like:\n      // coreqcopy[index] = [...coreqCourses, courseCode]\n      // as that code deletes the previous set\n      coreq: this.combineCoreqSets(coreqcopy), \n    });\n    \n    \n  }\n\n  // Goes through each of the sets in the coreq and combines them if they intersects with another\n  combineCoreqSets(inputCoreq){\n    if (inputCoreq === null || inputCoreq.length === 0) return [];\n    let allcoreq = inputCoreq.slice();\n    \n    for (let i = 0; i < allcoreq.length; i++){\n      let first = allcoreq[i];\n      \n      for (let j = allcoreq.length - 1; j > i; j--){\n        let second = allcoreq[j];\n        if (this.intersects(first, second)){\n          allcoreq[i] = [...new Set(first.concat(second))];\n          allcoreq.splice(j,1);\n        }\n      }\n    }\n    console.log(\"all coreq are:\");\n    console.log(allcoreq);\n    return allcoreq;\n  }\n\n  intersects(first, second){\n    if (first === null || second === null) return false;\n    return first.findIndex(value => second.includes(value)) !== -1;\n  }\n\n\n\n\n\n  // Takes a list of the course codes and converts them into full course object \n  // Disregards the codes that have no associated matching course in the state\n  getCoursesFromCodes(codes){\n    const allcourses = [].concat.apply([], this.state.courses);\n    let filtered = allcourses.filter(c => (codes.includes(c.code)));\n    return filtered;\n  } \n\n\n  // Highlghts the prerequisite courses given the course code\n  handleClickShowPrereq = (courseCode) => {\n    this.clearFilteredCourses();\n    const val = this.state.prereq[courseCode];\n    if (val !== undefined){\n      let filtered = this.getCoursesFromCodes(val);\n      this.setState({\n        filteredCourses: filtered,\n      });\n    }\n  }\n  // Same as above except for corequisites\n  handleClickShowCoreq = (courseCode) => {\n    this.clearFilteredCourses();\n    let selectedCoreqIndex = this.state.coreq\n    .findIndex(cl => cl.includes(courseCode));\n    if (selectedCoreqIndex >= 0){\n      let list = this.state.coreq[selectedCoreqIndex];\n      list = list.filter(li => (li !== courseCode));\n      let filtered = this.getCoursesFromCodes(list);\n      this.setState({\n        filteredCourses: filtered,\n      });\n    }\n  }\n\n  render(){\n      return(\n        <Router>\n          <div className=\"App\">\n            <div className=\"container\">\n              <Header />\n              <Notification />\n              <Route exact path=\"/\"\n              render={props => (\n                <React.Fragment>\n                  <div className=\"inner\">\n                    <div className=\"inner-top\">\n                    \n                      <ProgramMap \n                        handleClickAddTerm={this.handleClickAddTerm}\n                        handleClickRemoveTerm={this.handleClickRemoveTerm}\n                        handleClickAddCourse={this.handleClickAddCourse}\n                        handleClickEditCourse={this.handleClickEditCourse}\n                        handleClickSelectCourse={this.handleClickSelectCourse}\n                        handleClickDeleteCourse={this.handleClickDeleteCourse}\n                        maxCourseYears={this.getMaxCourseForYears()}\n                        courses={this.state.courses}\n                        selectedCourse={this.state.selectedCourse}\n                        filteredCourses={this.state.filteredCourses}\n                      />\n        \n                    </div>\n                    <div className={(this.state.selectedCourse==null)?\"inner-bottom\":\"inner-bottom expanded\"}>\n                      <div className=\"inner-bottom-head\">\n                        <SaveChanges\n                          onSaveClick={() => this.saveCourseData()}\n                        />\n                        <ResetChanges \n                          onResetClick={() => this.resetChanges()}\n                        />\n                        <GradeFilter\n                          onClickFilterByCategory={this.handleOnClickFilterByCategory}\n                        />\n                        <CGPACalculator \n                          courses={this.state.courses}\n                        />\n                      </div>\n                      <div className=\"inner-bottom-foot\">\n                        <SideView \n                          sendNotification={this.sendNotification}\n                          handleClickEditCourse={this.handleClickEditCourse}\n                          courses={this.state.courses}\n                          selectedTerm={(this.state.selectedCourse)? this.state.selectedTerm : null}\n                          selectedCourse={this.state.selectedCourse}\n                          prereq={this.state.prereq}\n                          coreq={this.state.coreq}\n                          handleClickEditPrereq={this.handleClickEditPrereq}\n                          handleClickEditCoreq={this.handleClickEditCoreq}\n                          handleClickShowPrereq={this.handleClickShowPrereq}\n                          handleClickShowCoreq={this.handleClickShowCoreq}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </React.Fragment>\n              )} />\n              <Route path=\"/about\" component={About} />\n            </div>\n          </div>\n        </Router>\n      );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n\r\n"],"sourceRoot":""}