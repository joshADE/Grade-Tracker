{"version":3,"sources":["componenets/model/CourseClass.js","redux/course/courseActions.js","redux/course/courseTypes.js","componenets/AddCourse.js","componenets/Course.js","componenets/Term.js","componenets/AddTerm.js","componenets/RemoveTerm.js","componenets/ProgramMap.js","componenets/layout/Header.js","componenets/pages/About.js","componenets/SaveChanges.js","componenets/GradeFilter.js","componenets/SideView.js","componenets/ResetChanges.js","componenets/Notification.js","componenets/CGPACalculator.js","App.js","serviceWorker.js","redux/course/courseReducer.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["CourseClass","name","code","grade","credits","this","addCourse","term","courseCode","type","payload","removeTerm","index","AddCourse","props","performValidation","trim","courses","slice","find","courseList","undefined","course","onSubmit","e","preventDefault","state","setState","message","onChange","target","value","style","addCourseStyle","inputStyle","placeholder","buttonStyle","className","Component","propType","handleClickAddCourse","PropTypes","func","isRequired","number","display","flexDirection","fontWeight","textAlign","justifyContent","height","width","padding","marginTop","borderRadius","connect","dispatch","Course","editedCourse","Number","isNaN","courseName","handleClickEditCourse","onSelect","form","timeout","clearTimeout","setTimeout","console","log","focus","scrollIntoView","behavior","block","inline","handleClickSelectCourse","selectButton","appliedclasses","isHighlighted","isSelected","ref","theform","courseStyle","dragholder","alignSelf","sButton","onClick","handleClickDeleteCourse","bind","instanceOf","bool","background","cursor","border","Term","termNumber","filteredCourses","selectedCourse","handleDragStart","handleDragEnter","isDragging","getDraggingStyles","termDisplay","key","termDisplayStyle","coursesDisplay","map","val","ind","val1","termI","courseI","onDragStart","onDragEnter","draggable","length","array","object","AddTerm","handleClickAddTerm","addNewTermStyle","RemoveTerm","handleClick","removeTermStyle","handleClickRemoveTerm","ProgramMap","maxCourseYears","useState","dragging","setDragging","dragItem","useRef","dragNode","useDispatch","params","document","elementFromPoint","clientX","clientY","classList","contains","current","addEventListener","handleDragEnd","removeEventListener","currentItem","dragEnter","rows","includes","colSpan","headerStyle","color","linkStyle","textDecoration","Header","to","About","Fragment","SaveChanges","onSaveClick","GradeFilter","category","onClickFilterByCategory","gradeFilterStyle","id","defaultValue","btnStyle","flexWrap","StyledSelect","styled","Select","SideView","action","removedValue","getSelectOption","label","getValueFromSelectOption","option","sendNotification","pC","prereqCourses","prs","handleClickEditPrereq","cC","coreqCourses","crs","handleClickEditCoreq","newProps","equal","updateState","first","second","result","JSON","stringify","prereq","coreq","selectedTerm","selectedPrereqList","selectPrereq","selectOptionsPrereq","concat","apply","filter","selectedCoreqList","selectedCoreqIndex","findIndex","cl","c","selectOptionsCoreq","shouldShow","sideViewStyle","sytle","formStyle","buttonShowStyle","handleClickShowPrereq","styles","customStyles","isMulti","options","handleClickShowCoreq","overflowY","margin","container","provided","control","ResetChanges","onResetClick","Container","div","top","emitter","ee","Notification","onShow","msg","showNotification","on","CGPACalculator","allcourses","totalPoints","reduce","prev","curr","totalCredits","CGPA","Math","round","cList","unshift","gradeFinderStyle","App","emit","notify","populateCourseData","window","confirm","clearFilter","clearSelected","dataStringCourses","localStorage","getItem","localStorageKey","dataStringPrereq","dataStringCoreq","dataObjectCourses","parse","dataObjectPrereq","dataObjectCoreq","loadCourses","setItem","max","exact","path","render","addTerm","editCourse","toggleSelect","deleteCourse","getMaxCourseForYears","saveCourseData","resetChanges","filterByCategory","editPrereq","editCoreq","showPrereq","showCoreq","component","apiurlpartial","CourseActionCreators","Boolean","location","hostname","match","initialState","concatAtIndex","list","item","listAlt","removeAtIndex","splice","combineCoreqSets","inputCoreq","allcoreq","i","j","intersects","Set","getCoursesFromCodes","codes","courseReducer","termList","EmptyCourse","push","filtered","unfiltered","x","y","prereqcopy","coreqcopy","courseSet","li","newCourses","rootReducer","combineReducers","store","createStore","applyMiddleware","logger","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.1306e34d.chunk.js","sourcesContent":["  \r\nexport default class CourseClass {\r\n    constructor(name, code, grade, credits){\r\n        this.name = name;\r\n        this.code = code;\r\n        this.grade = grade;\r\n        this.credits = credits;\r\n    }\r\n\r\n  static EmptyCourse()\r\n  {\r\n      return new CourseClass('NA', 'NA', 0.0, 1.0);\r\n  }\r\n};","import * as courseTypes from './courseTypes';\r\n\r\nexport const addCourse = (term, courseCode) => {\r\n    return {\r\n        type: courseTypes.ADD_COURSE,\r\n        payload: { term, courseCode }\r\n    }\r\n}\r\n\r\nexport const editCourse = (term, editedCourse) => {\r\n    return {\r\n        type: courseTypes.EDIT_COURSE,\r\n        payload: { term, editedCourse }\r\n    }\r\n}\r\n\r\nexport const deleteCourse = (term, courseCode) => {\r\n    return {\r\n        type: courseTypes.DELETE_COURSE,\r\n        payload: { term, courseCode }\r\n    }\r\n}\r\n\r\nexport const addTerm = (index = -1) => {\r\n    return {\r\n        type: courseTypes.ADD_TERM,\r\n        payload: index\r\n    }\r\n}\r\n\r\nexport const removeTerm = (index = -1) => {\r\n    return {\r\n        type: courseTypes.REMOVE_TERM,\r\n        payload: index\r\n    }\r\n}\r\n\r\nexport const filterByCategory = (category, value) => {\r\n    return {\r\n        type: courseTypes.FILTER,\r\n        payload: {category, value}\r\n    }\r\n}\r\n\r\nexport const clearFilter = () => {\r\n    return {\r\n        type: courseTypes.CLEAR_FILTER\r\n    }\r\n}\r\n\r\n\r\nexport const toggleSelectCourse = (courseCode) => {\r\n    return {\r\n        type: courseTypes.TOGGLE_SELECT,\r\n        payload: courseCode\r\n    }\r\n}\r\n\r\nexport const clearSelected = () => {\r\n    return {\r\n        type: courseTypes.CLEAR_SELECT\r\n    }\r\n}\r\n\r\nexport const editPrereq = (courseCode, prereqCourses) => {\r\n    return {\r\n        type: courseTypes.EDIT_PREREQ,\r\n        payload: { courseCode, prereqCourses }\r\n    }\r\n}\r\n\r\nexport const editCoreq = (courseCode, coreqCourses) => {\r\n    return {\r\n        type: courseTypes.EDIT_COREQ,\r\n        payload: { courseCode, coreqCourses }\r\n    }\r\n}\r\n\r\nexport const showPrereq = (courseCode) => {\r\n    \r\n    return {\r\n        type: courseTypes.SHOW_PREREQ,\r\n        payload: courseCode\r\n    }\r\n}\r\n\r\nexport const showCoreq = (courseCode) => {\r\n    \r\n    return {\r\n        type: courseTypes.SHOW_COREQ,\r\n        payload: courseCode\r\n    }\r\n}\r\n\r\nexport const loadCourses = (courses, prereq, coreq) => {\r\n    return {\r\n        type: courseTypes.LOAD_COURSES,\r\n        payload: { courses, prereq, coreq }\r\n    }\r\n}\r\n\r\nexport const dragEnter = (params, currentItem) => {\r\n    return {\r\n        type: courseTypes.DRAG_ENTER,\r\n        payload: {params, currentItem}\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","// course\r\nexport const ADD_COURSE = 'ADD_COURSE';\r\nexport const DELETE_COURSE = 'DELETE_COURSE';\r\nexport const EDIT_COURSE = 'EDIT_COURSE';\r\nexport const ADD_TERM = 'ADD_TERM';\r\nexport const REMOVE_TERM = 'REMOVE_TERM';\r\n\r\n// filter\r\nexport const FILTER = 'FILTER';\r\nexport const CLEAR_FILTER = 'CLEAR_FILTER';\r\n\r\n// select\r\nexport const TOGGLE_SELECT = 'TOGGLE_SELECT';\r\nexport const CLEAR_SELECT = 'CLEAR_SELECT';\r\n\r\n// prereq\r\nexport const EDIT_PREREQ = 'EDIT_PREREQ';\r\nexport const EDIT_COREQ = 'EDIT_COREQ';\r\nexport const SHOW_PREREQ = 'SHOW_PREREQ';\r\nexport const SHOW_COREQ = 'SHOW_COREQ';\r\n\r\n// loading\r\nexport const LOAD_COURSES = 'LOAD_COURSES';\r\n\r\n// dragging\r\nexport const DRAG_ENTER = 'DRAG_ENTER';","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { addCourse } from '../redux'\r\nimport { connect } from 'react-redux';\r\n\r\nexport class AddCourse extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            courseCode: '',\r\n            message:'Enter the course code'\r\n        }\r\n    }\r\n\r\n    performValidation = (courseCode) => {\r\n            courseCode = courseCode.trim();\r\n            if (!courseCode){\r\n                return 2;\r\n            }\r\n            let termList = this.props.courses.slice();\r\n            let courseCodeFound = termList\r\n                .find(courseList => courseList\r\n                .find(course => course.code === courseCode) !== undefined);\r\n\r\n            if (courseCodeFound){\r\n                return 1;\r\n            }\r\n            return 0;\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (!this.state.courseCode){\r\n            this.setState({\r\n                message: \"Must enter course code\"\r\n            });\r\n        }else{\r\n            let successCode = this.performValidation(this.state.courseCode);\r\n            \r\n            switch(successCode){\r\n                case 0:\r\n                    this.props.addCourse(this.props.term,this.state.courseCode);\r\n                    break;\r\n                case 1:\r\n                    this.setState({message: 'Course code already exist'});\r\n                    break;\r\n                case 2:\r\n                    this.setState({message: 'Invalid course code'});\r\n                    break;\r\n                default:\r\n                    this.setState({message:'Enter the course code'});\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    onChange = (e) => this.setState({[e.target.name]: e.target.value });\r\n\r\n    render() {\r\n        \r\n        return (\r\n      \r\n            <form\r\n            onSubmit={this.onSubmit}\r\n            style={addCourseStyle}\r\n            >\r\n            <span>{this.state.message}</span>\r\n                <input \r\n                    style={inputStyle}\r\n                    type=\"text\"\r\n                    name=\"courseCode\"\r\n                    placeholder=\"Course Code Here...\"\r\n                    value={this.state.courseCode}\r\n                    onChange={this.onChange}\r\n\r\n                />\r\n                <input \r\n                    style={buttonStyle}\r\n                    type=\"submit\"\r\n                    value=\"Add a new course (+)\"\r\n                    className=\"btn btn-add\"\r\n                 />\r\n            </form>\r\n        \r\n        )\r\n    }\r\n}\r\n\r\n\r\n// PropTypes\r\nAddCourse.propType = {\r\n    handleClickAddCourse: PropTypes.func.isRequired,\r\n    term: PropTypes.number.isRequired,\r\n}\r\n\r\n\r\nconst addCourseStyle = {\r\n    display:'flex', \r\n    flexDirection:'column',\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n    justifyContent: 'space-around',\r\n    height: 'auto',\r\n    width: '200px',\r\n    padding: '5px',\r\n};\r\n\r\nconst buttonStyle = {\r\n    marginTop:'2px',\r\n    borderRadius: '5px',\r\n}\r\n\r\nconst inputStyle = {\r\n    marginTop:'2px',\r\n    borderRadius: '5px',\r\n    padding:'2px 4px',\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      courses: state.courses.courses\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      addCourse: (term, courseCode) => dispatch(addCourse(term, courseCode))\r\n    }\r\n  }\r\n\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AddCourse)\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport CourseClass from './model/CourseClass';\r\n\r\nexport class Course extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            courseName: this.props.course.name,\r\n            grade: this.props.course.grade,\r\n            credits:this.props.course.credits,\r\n            message: 'Messages here',\r\n        }\r\n        this.selectButton = null;\r\n        this.form = null;\r\n        this.timeout = null;\r\n    }\r\n\r\n    performValidation = (editedCourse) => {\r\n        editedCourse.grade = Number(editedCourse.grade);\r\n        editedCourse.credits = Number(editedCourse.credits);\r\n        if (isNaN(editedCourse.grade)){\r\n            return 1;\r\n        }\r\n        if (isNaN(editedCourse.credits)){\r\n            return 2;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    \r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        let editedCourse = \r\n        new CourseClass(this.state.courseName, this.props.course.code, this.state.grade, this.state.credits);\r\n        \r\n        let successCode = this.performValidation(editedCourse);\r\n        switch(successCode){\r\n            case 0:\r\n                editedCourse.grade = Number(editedCourse.grade);\r\n                editedCourse.credits = Number(editedCourse.credits);\r\n                this.props.handleClickEditCourse(this.props.term, editedCourse);\r\n                this.setState({message: 'Messages here'});\r\n                break;\r\n            case 1:\r\n                this.setState({message: 'grade must be a number'});\r\n                break;\r\n            case 2:\r\n                this.setState({message: 'credits must be a number'});\r\n                break;\r\n            default:\r\n                this.setState({message: 'Messages here'});\r\n\r\n        }\r\n    }\r\n\r\n    onChange = (e) => this.setState({[e.target.name]: e.target.value });\r\n\r\n    onSelect = (e) => {\r\n        if(this.form){\r\n            if (this.timeout)\r\n                clearTimeout(this.timeout);\r\n\r\n            this.timeout = setTimeout(() => {\r\n                console.log(this);\r\n                // set the focus on the form element after the select button is cliked\r\n                // and setTimeout performs this after css removes the form from view\r\n                this.form.focus();\r\n                this.form.scrollIntoView({behavior: \"smooth\", block: \"start\", inline: \"nearest\"});\r\n            }, 0); // 2sec is the transition\r\n            //alert(this.selectButton);\r\n        }\r\n        this.props.handleClickSelectCourse(this.props.course.code)\r\n    }\r\n\r\n    render(){\r\n       const {code, name, grade, credits} = this.props.course;\r\n        let appliedclasses = \"course \";\r\n        appliedclasses += this.props.isHighlighted? \"highlighted \" : \" \";\r\n        appliedclasses += this.props.isSelected? \"selected \" : \" \";\r\n       return(\r\n            <form\r\n            \r\n            ref={(theform) => {this.form = theform;}}\r\n            onSubmit={this.onSubmit}\r\n            style={courseStyle}\r\n            className={appliedclasses}\r\n            >\r\n                <span  \r\n                    className=\"dragholder\" \r\n                    style={dragholder}\r\n                > </span>\r\n                <span style={{alignSelf:'center'}}>\r\n                    {this.state.message}\r\n                </span>\r\n                <span>\r\n                    <label>Course Code:</label>{' '}\r\n                    {code}\r\n                </span>\r\n                <span>\r\n                    <label>Name:</label>{' '}\r\n                    {name}\r\n                </span>\r\n                <span>\r\n                    <label>New Name:</label>{' '}\r\n                    <input \r\n         \r\n                        style={inputStyle}\r\n                        type=\"text\"\r\n                        name=\"courseName\"\r\n                        value={this.state.courseName}\r\n                        onChange={this.onChange}\r\n                    />\r\n                </span>\r\n                <span>\r\n                    <label>Grade:</label>{' '}\r\n                    {grade}\r\n                </span>\r\n                <span>\r\n                    <label>New Grade:</label>{' '}\r\n                    <input \r\n                        style={inputStyle}\r\n                        type=\"text\"\r\n                        name=\"grade\"\r\n                        value={this.state.grade}\r\n                        onChange={this.onChange}\r\n                    />\r\n                </span>\r\n                <span>\r\n                    <label>Credits/Units:</label>{' '}\r\n                    {credits}\r\n                </span>\r\n                <span>\r\n                    <label>New Credits:</label>{' '}\r\n                    <input \r\n                        style={inputStyle}\r\n                        type=\"text\"\r\n                        name=\"credits\"\r\n                        value={this.state.credits}\r\n                        onChange={this.onChange}\r\n                    />\r\n                </span>\r\n                <input \r\n                    ref={(sButton) => {this.selectButton = sButton;}}\r\n                    style={buttonStyle}\r\n                    type=\"button\"\r\n                    value={this.props.isSelected?\"Deselect\":\"Select\"}\r\n                    className=\"btn\"\r\n                    onClick={\r\n                        this.onSelect\r\n                    }\r\n                />\r\n                <input \r\n                    style={buttonStyle}\r\n                    type=\"submit\"\r\n                    value=\"Set changes\"\r\n                    className=\"btn btn-save\"\r\n                    \r\n                />\r\n                <input \r\n                    style={buttonStyle}\r\n                    type=\"button\"\r\n                    value=\"Delete(-)\"\r\n                    className=\"btn btn-delete\"\r\n                    onClick={\r\n                        this.props.handleClickDeleteCourse.bind(this,this.props.term, this.props.course.code)\r\n                    }\r\n                />\r\n                \r\n            </form>\r\n            \r\n       )\r\n\r\n         \r\n\r\n    }\r\n}\r\n\r\n\r\n// PropTypes\r\nCourse.propType = {\r\n    handleClickEditCourse: PropTypes.func.isRequired,\r\n    course: PropTypes.instanceOf(CourseClass).isRequired,\r\n    term: PropTypes.number.isRequired,\r\n    isSelected: PropTypes.bool.isRequired,\r\n    handleClickDeleteCourse: PropTypes.func.isRequired,\r\n    handleClickSelectCourse: PropTypes.func.isRequired,\r\n    isHighlighted: PropTypes.bool.isRequired,\r\n}\r\nconst dragholder = {\r\n    width: '100%',\r\n    background: 'lightgrey',\r\n    height: '5px',\r\n    borderRadius: '3px',\r\n    cursor: 'grab',\r\n    border: '1px solid black'\r\n}\r\n\r\nconst inputStyle = {\r\n    width: '100%',\r\n    background: 'lightgrey',\r\n    borderRadius: '5px',\r\n    padding:'2px 4px',\r\n}\r\n\r\nconst courseStyle = {\r\n    display:'flex', \r\n    flexDirection:'column',\r\n    borderRadius: '5px',\r\n    fontWeight: 'bold',\r\n    height: 'auto',\r\n    width: '200px',\r\n    padding: '5px', \r\n};\r\n\r\nconst buttonStyle = {\r\n    marginTop:'2px',\r\n    borderRadius: '5px',\r\n}\r\n\r\nexport default Course","import React, { } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport AddCourse from './AddCourse';\r\nimport Course from './Course';\r\n\r\n\r\nexport const Term = ({\r\n    termNumber, \r\n    courseList, \r\n    filteredCourses, \r\n    selectedCourse, \r\n    handleClickEditCourse, \r\n    handleClickDeleteCourse, \r\n    handleClickSelectCourse, \r\n    handleClickAddCourse,\r\n    // dragging props/events\r\n    handleDragStart,\r\n    handleDragEnter,\r\n    isDragging,\r\n    getDraggingStyles\r\n\r\n}) => {\r\n\r\n\r\n        const index = termNumber;\r\n        const termDisplay = (<th key={index + \"x\" + -1} style={termDisplayStyle}>{index + 1}</th>);\r\n        const coursesDisplay = \r\n        courseList.map((val, ind) => {\r\n                        \r\n            const isHighlighted = (filteredCourses.find(val1 => \r\n                (val1.code === val.code)) !== undefined);            \r\n\r\n            const isSelected = selectedCourse && selectedCourse.code === val.code;\r\n                \r\n            \r\n            return (\r\n            <td \r\n                className={isDragging?getDraggingStyles({termI: index, courseI: ind}):\"course\"}\r\n                onDragStart={(e) => {handleDragStart(e, {termI: index, courseI: ind})}}\r\n                onDragEnter={isDragging?(e) => {handleDragEnter(e, {termI: index, courseI: ind})}:null}\r\n                draggable\r\n                key={val.code}\r\n            >\r\n                <Course \r\n                    \r\n                    term={index}\r\n                    handleClickEditCourse={handleClickEditCourse}\r\n                    handleClickDeleteCourse={handleClickDeleteCourse}\r\n                    handleClickSelectCourse={handleClickSelectCourse}\r\n                    course={val}\r\n                    isSelected={isSelected}\r\n                    isHighlighted={isHighlighted}\r\n                    \r\n                />\r\n            </td>);\r\n        });\r\n        const newCourseButtonDisplay = (\r\n        <td key={index + \"x\" + (coursesDisplay.length + 1)}>\r\n            <AddCourse \r\n                term={termNumber}\r\n                handleClickAddCourse={handleClickAddCourse}\r\n            />\r\n        </td>);\r\n\r\n        return (\r\n            \r\n            [termDisplay, coursesDisplay, newCourseButtonDisplay]\r\n            \r\n        );\r\n    \r\n}\r\n\r\n\r\n\r\n\r\n// PropTypes\r\nTerm.propType = {\r\n    courseList: PropTypes.array.isRequired,\r\n    termNumber: PropTypes.number.isRequired,\r\n    handleClickAddCourse: PropTypes.func.isRequired,\r\n    handleClickEditCourse: PropTypes.func.isRequired,\r\n    handleClickDeleteCourse: PropTypes.func.isRequired,\r\n    handleClickSelectCourse: PropTypes.func.isRequired,\r\n    selectedCourse: PropTypes.object.isRequired,\r\n    filteredCourses: PropTypes.array.isRequired,\r\n}\r\n\r\nconst termDisplayStyle = {\r\n    textAlign:'center',\r\n    height:'250px'\r\n};\r\n\r\nexport default Term\r\n","import PropTypes from 'prop-types';\r\nimport React, { Component } from 'react'\r\n\r\nexport class AddTerm extends Component {\r\n    render() {\r\n        return (\r\n            \r\n        <button \r\n        type=\"button\" \r\n        onClick={this.props.handleClickAddTerm} \r\n        style={addNewTermStyle}\r\n        className=\"btn btn-add\"\r\n        >\r\n            Add a new term\r\n        </button>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n// PropTypes\r\nAddTerm.propType = {\r\n    termNumber: PropTypes.number.isRequired,\r\n    handleClickAddTerm: PropTypes.func.isRequired,\r\n}\r\n\r\nconst addNewTermStyle = {\r\n    width:'100%',\r\n};\r\n\r\n\r\nexport default  AddTerm;","import PropTypes from 'prop-types';\r\nimport React, { Component } from 'react'\r\nimport { removeTerm } from '../redux'\r\nimport { connect } from 'react-redux';\r\n\r\nexport class RemoveTerm extends Component {\r\n    handleClick = () => {\r\n        if (this.props.courses.length <= 1){\r\n            return;\r\n        }\r\n     \r\n        //TODO: Should perform the delete function on each course in the term\r\n        this.props.removeTerm();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            \r\n        <button \r\n        type=\"button\" \r\n        onClick={this.handleClick} \r\n        style={removeTermStyle}\r\n        className=\"btn btn-delete\"\r\n        >\r\n            Remove the last term\r\n        </button>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n// PropTypes\r\nRemoveTerm.propType = {\r\n    termNumber: PropTypes.number.isRequired,\r\n    handleClickRemoveTerm: PropTypes.func.isRequired,\r\n}\r\n\r\nconst removeTermStyle = {\r\n    width:'100%',\r\n};\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      courses: state.courses.courses\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      removeTerm: () => dispatch(removeTerm())\r\n    }\r\n  }\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(RemoveTerm);","import React, { useState, useRef } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport Term from './Term';\r\n//import { v3, v4, v5 } from 'uuid'\r\nimport PropTypes from 'prop-types';\r\nimport AddTerm from './AddTerm';\r\nimport RemoveTerm from './RemoveTerm';\r\nimport { dragEnter } from '../redux';\r\n\r\nexport const ProgramMap = ({\r\n    courses,\r\n    selectedCourse,\r\n    handleClickAddCourse,\r\n    handleClickEditCourse,\r\n    handleClickSelectCourse,\r\n    handleClickDeleteCourse,\r\n    filteredCourses,\r\n    maxCourseYears,\r\n    handleClickAddTerm,\r\n    handleClickRemoveTerm\r\n\r\n}) => {\r\n\r\n    const [dragging, setDragging]  = useState(false);\r\n    const dragItem = useRef();\r\n    const dragNode = useRef();\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const handleDragStart = (e, params) => {\r\n        const elementAtMouse = document.elementFromPoint(e.clientX, e.clientY);\r\n        if (!elementAtMouse.classList.contains('dragholder')){\r\n            console.log(\"skipped\");\r\n            e.preventDefault();\r\n            return;\r\n        }\r\n        console.log(\"drag started\", params);\r\n        dragItem.current = params;\r\n        console.log(e.target);\r\n\r\n        dragNode.current = e.target;\r\n        dragNode.current.addEventListener('dragend', handleDragEnd);\r\n        setTimeout(() => {\r\n            setDragging(true);\r\n        }, 0);\r\n    }\r\n\r\n    const handleDragEnd = () => {\r\n        console.log(\"drag ended\");\r\n\r\n        setDragging(false);\r\n        dragNode.current.removeEventListener('dragend', handleDragEnd);\r\n        dragItem.current = null;\r\n        dragNode.current = null;\r\n\r\n    }\r\n\r\n    const handleDragEnter = (e, params) => {\r\n        console.log(\"drag enter\", params);\r\n        const currentItem = dragItem.current;\r\n        if (e.target !== dragNode.current){\r\n        //if (JSON.stringify(params) !== JSON.stringify(currentItem)){\r\n            console.log(\"Target no the same\");\r\n            dispatch(dragEnter(params, currentItem));\r\n            dragItem.current = params;\r\n        }\r\n\r\n    }\r\n\r\n    const getDraggingStyles = (params) => {\r\n        const currentItem = dragItem.current;\r\n        if (currentItem.termI === params.termI && currentItem.courseI === params.courseI)\r\n            return 'current'\r\n        return 'course';\r\n    }\r\n\r\n\r\n    const rows = courses.map((courseList, index) => {\r\n        const isSelected = selectedCourse && courseList.includes(selectedCourse);\r\n        \r\n        return <tr \r\n                onDragEnter={dragging && !courseList.length?(e) => handleDragEnter(e, {termI: index, courseI: 0}):null}\r\n                className={isSelected?\"selected-term\":\"\"}\r\n                key={index}\r\n                >\r\n                    {<Term \r\n                    handleDragStart={handleDragStart}\r\n                    handleDragEnter={handleDragEnter}\r\n                    isDragging={dragging}\r\n                    getDraggingStyles={getDraggingStyles}\r\n\r\n                    selectedCourse={selectedCourse}\r\n                    termNumber={index}\r\n                    courseList={courseList}\r\n                    handleClickAddCourse={handleClickAddCourse}\r\n                    handleClickEditCourse={handleClickEditCourse}\r\n                    handleClickSelectCourse={handleClickSelectCourse}\r\n                    handleClickDeleteCourse={handleClickDeleteCourse}\r\n                    filteredCourses={filteredCourses}\r\n                    />}\r\n                </tr>;\r\n    });\r\n    return (\r\n    <table className=\"courseTable\"> \r\n        <thead>\r\n            <tr>\r\n                <th>Term</th>\r\n                <th \r\n                colSpan={maxCourseYears + 1}\r\n                >\r\n                    Courses\r\n                </th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {rows}\r\n            <tr>\r\n                <td \r\n                key={rows.length + 1}\r\n                colSpan={maxCourseYears + 2}>\r\n                <AddTerm \r\n                termNumber={rows.length + 1}\r\n                handleClickAddTerm={handleClickAddTerm}\r\n                />\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td \r\n                key={rows.length + 2}\r\n                colSpan={maxCourseYears + 2}>\r\n                <RemoveTerm \r\n                termNumber={rows.length - 1}\r\n                handleClickRemoveTerm={handleClickRemoveTerm}\r\n                />\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n    )\r\n}\r\n\r\n// PropTypes\r\nProgramMap.propType = {\r\n    handleClickAddTerm: PropTypes.func.isRequired,\r\n    handleClickRemoveTerm: PropTypes.func.isRequired,\r\n    handleClickAddCourse: PropTypes.func.isRequired,\r\n    handleClickEditCourse: PropTypes.func.isRequired,\r\n    handleClickDeleteCourse: PropTypes.func.isRequired,\r\n    handleClickSelectCourse: PropTypes.func.isRequired,\r\n    maxCourseYears: PropTypes.number.isRequired,\r\n    courses: PropTypes.array.isRequired,\r\n    selectedCourse: PropTypes.object.isRequired,\r\n    filteredCourses: PropTypes.array.isRequired\r\n}\r\n\r\n\r\n\r\nexport default ProgramMap\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header style={headerStyle}>\r\n            <h1>Program Map Helper</h1>\r\n            <Link style={linkStyle} to=\"/\">Home</Link> | {' '}  \r\n            <Link style={linkStyle} to=\"/about\">About</Link> \r\n        </header>\r\n    )\r\n}\r\n\r\n\r\nconst headerStyle = {\r\n    border: '2px solid black',\r\n    background: '#677',\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    padding: '10px'\r\n}\r\n\r\nconst linkStyle = {\r\n    color: '#fff',\r\n    textDecoration: 'none'\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react'\r\n\r\nfunction About() {\r\n    return (\r\n        <React.Fragment>\r\n          <h1>About</h1> \r\n          <p>This is the app to help plan and aid program outline v1.0.0.</p> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default About;\r\n","import React from 'react'\r\n\r\nfunction SaveChanges(props) {\r\n    return (\r\n        <input\r\n            onClick={props.onSaveClick}\r\n            style={buttonStyle}\r\n            className=\"btn btn-save\"\r\n            type=\"button\"\r\n            value=\"Save the changes\"\r\n        />\r\n    )\r\n}\r\nconst buttonStyle = {\r\n    borderRadius:'5px',\r\n    border:'2px solid black',\r\n    background: '#55F',\r\n    height: '100%'\r\n};\r\n\r\nexport default SaveChanges;\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class GradeFilter extends Component {\r\n        \r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            category: '2',\r\n            val: 0.0\r\n        };\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const {category, val} = this.state;\r\n        this.props.onClickFilterByCategory(category, val);\r\n    }\r\n\r\n    onChange = (e) => this.setState({[e.target.name]: e.target.value });\r\n\r\n    \r\n    render() {\r\n        return (\r\n            \r\n            <form style={gradeFilterStyle}\r\n            onSubmit={this.onSubmit}\r\n\r\n            >\r\n                <label>Find courses with grade </label>\r\n                {'  '}\r\n                <select \r\n                style={inputStyle}\r\n                id=\"filter\"\r\n                name=\"category\"\r\n                onChange={this.onChange}\r\n                defaultValue={this.state.category}\r\n                >\r\n                    <option value={1}>greater than</option>\r\n                    <option value={2}>less than</option>\r\n                    <option value={3}>equal to</option>\r\n                    <option value={4}>greater than or equal to</option>\r\n                    <option value={5}>less than or equal to</option>\r\n                </select>\r\n                {'  '}\r\n\r\n                <input style={inputStyle} type=\"text\" onChange={this.onChange}  name=\"val\" value={this.state.value} placeholder={0.0} />\r\n                {'  '}\r\n                <input style={btnStyle} type=\"submit\" value=\"Filter\"/>\r\n            </form>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n// PropTypes\r\nGradeFilter.propType = {\r\n    onClickFilterByCategory: PropTypes.func.isRequired,\r\n}\r\n\r\nconst gradeFilterStyle = {\r\n    \r\n    padding: '5px 15px',\r\n    borderRadius:'5px',\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent:'space-evenly',\r\n    background: '#566',\r\n    border: '2px solid black',\r\n    color: 'white',\r\n    height: '100%'\r\n};\r\n\r\nconst inputStyle = {\r\n    background: 'lightgrey',\r\n    borderRadius: '5px',\r\n}\r\n\r\nconst btnStyle = {\r\n    display: 'inline-block',\r\n    border: 'none',\r\n    background: '#67F',\r\n    borderRadius: '5px',\r\n    color: '#fff',\r\n    padding: '2px 10px',\r\n    cursor: 'pointer',\r\n};\r\n\r\nexport default GradeFilter\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport Select from 'react-select'\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst StyledSelect = styled(Select)`\r\n    margin: 10px 20%;\r\n    @media screen and (max-width: 720px){\r\n        margin: 10px 10%;\r\n    }\r\n    \r\n`;\r\n\r\n\r\nexport class SideView extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            prereqCourses:[],\r\n            coreqCourses:[],\r\n\r\n        };\r\n    }\r\n    \r\n    // New onChange(for 'react-select' component)\r\n    onChange = (value, { name, action, removedValue }) => {\r\n        switch (action) {\r\n          case 'remove-value':\r\n            break;\r\n          case 'pop-value':\r\n            break;\r\n          case 'clear':\r\n            break;\r\n            default:\r\n        }\r\n        \r\n        this.setState({ \r\n            [name]: value \r\n        });\r\n    }\r\n\r\n    // Transforms a course into a format used by 'react-select'\r\n    getSelectOption = (course) => {\r\n        return {value: course.code, label: course.code };\r\n    }\r\n    // Transforms from 'react-select' option format to course code\r\n    getValueFromSelectOption = (option) => {\r\n        return option.value;\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        // Notify the user that their changes have been set\r\n        this.props.sendNotification(\"Changes set\");\r\n        \r\n        // New onSubmit code\r\n        // must extract the value from the react-select components\r\n        const code = this.props.selectedCourse.code;\r\n        console.log(\"submitted\");\r\n        \r\n        let pC = this.state.prereqCourses || [];\r\n\r\n\r\n        console.log(\"prereq\");\r\n        const prs = pC.map(option => this.getValueFromSelectOption(option));\r\n        console.log(prs);\r\n        this.props.handleClickEditPrereq(code, prs);\r\n        \r\n\r\n        let cC = this.state.coreqCourses || [];\r\n\r\n        console.log(\"coreq\");\r\n        const crs = cC.map(option => this.getValueFromSelectOption(option));\r\n        \r\n        console.log(crs);\r\n        this.props.handleClickEditCoreq(code, crs);\r\n        \r\n    }\r\n\r\n    \r\n\r\n    \r\n    // this doesn't get called after a user deletes a course\r\n    // only componentWillUpdate gets called\r\n    componentWillReceiveProps(newProps){\r\n        console.log(\"Inside componentWillReceiveProps\");\r\n        console.log(this.props);\r\n        console.log(newProps);\r\n        \r\n        \r\n        // Only update the state (and then the UI) if the component\r\n        // receives a new set of props\r\n        console.log(\"Are the oldProp and newProp equal?\");\r\n        if (!this.equal(this.props, newProps)){\r\n            this.updateState(newProps);\r\n        }\r\n    }\r\n    \r\n\r\n\r\n    equal(first, second){\r\n        const result = JSON.stringify(first) === JSON.stringify(second);\r\n        console.log(\"result: \" + result);\r\n        return result;\r\n    }\r\n\r\n    \r\n\r\n    updateState(newProps){\r\n\r\n        const {selectedCourse, prereq, coreq, courses, selectedTerm} = newProps;\r\n\r\n        \r\n        if (!selectedCourse) return;\r\n\r\n        let selectedPrereqList = prereq[selectedCourse.code];\r\n        if (!selectedPrereqList){\r\n            selectedPrereqList = [];\r\n        }\r\n\r\n        console.log(\"selectedPrereqList\");\r\n        console.log(selectedPrereqList);\r\n        \r\n        let selectPrereq = courses.slice(0, selectedTerm);\r\n        let selectOptionsPrereq = [].concat.apply([], selectPrereq); // flatten the 2d array\r\n        \r\n        // get the full course details of the courses that are prereq\r\n        selectOptionsPrereq = selectOptionsPrereq\r\n        .filter(course => {\r\n            return course.code !== selectedCourse.code && selectedPrereqList.includes(course.code);\r\n        });\r\n        \r\n\r\n\r\n        let selectedCoreqIndex = coreq\r\n        .findIndex(cl => (cl.findIndex(c => c === selectedCourse.code) >= 0));\r\n        \r\n\r\n        let selectedCoreqList;\r\n        if (selectedCoreqIndex < 0){\r\n            selectedCoreqList = [];\r\n        }else{\r\n            selectedCoreqList = coreq[selectedCoreqIndex];\r\n        }\r\n\r\n        console.log(\"selectedCoreqList\");\r\n        console.log(selectedCoreqList);\r\n\r\n        \r\n        // get the full course details of the courses that are coreq\r\n        console.log(selectedTerm);\r\n        let selectOptionsCoreq = courses[selectedTerm];\r\n        if (selectOptionsCoreq == null){\r\n            selectOptionsCoreq = [];\r\n        }\r\n        selectOptionsCoreq = selectOptionsCoreq\r\n        .filter(course => {\r\n            return course.code !== selectedCourse.code && selectedCoreqList.includes(course.code) ;\r\n        });\r\n        \r\n\r\n        \r\n        this.setState({\r\n            prereqCourses: selectOptionsPrereq.map(c => this.getSelectOption(c)),\r\n            coreqCourses: selectOptionsCoreq.map(c => this.getSelectOption(c)),\r\n        });\r\n        \r\n            \r\n        \r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const shouldShow = (this.props.selectedCourse !== null);\r\n        \r\n        if (!shouldShow){\r\n            return (\r\n                <div style={sideViewStyle}>\r\n                    <h2>Advanced Course Edit</h2>\r\n                    <p>You must select a course first</p>\r\n                </div>\r\n            );\r\n        }\r\n        \r\n        \r\n        const {courses, selectedTerm, selectedCourse} = this.props;\r\n\r\n\r\n        // get the available options for the prereq courses\r\n        let selectPrereq = courses.slice(0, selectedTerm);\r\n        let selectOptionsPrereq = [].concat.apply([], selectPrereq); // flatten the 2d array\r\n        \r\n        selectOptionsPrereq = selectOptionsPrereq\r\n        .map((course) =>{\r\n            return this.getSelectOption(course);\r\n        });\r\n        \r\n        \r\n\r\n\r\n        // get the available options for the coreq courses\r\n        let selectOptionsCoreq = courses[selectedTerm];\r\n        \r\n        if (selectOptionsCoreq == null){\r\n            selectOptionsCoreq = [];\r\n        }\r\n        selectOptionsCoreq = selectOptionsCoreq\r\n        .filter(course => {\r\n            return course.code !== selectedCourse.code;\r\n        })\r\n        .map(course =>{\r\n            return this.getSelectOption(course);\r\n        });\r\n        \r\n\r\n\r\n       \r\n        const form = \r\n                <form\r\n                onSubmit={this.onSubmit}\r\n                sytle={formStyle}\r\n                className=\"sideViewForm\"\r\n                >\r\n                    <h3>For course: {(shouldShow)?this.props.selectedCourse.code:\"\"}</h3>\r\n                    \r\n                    \r\n                    <div>\r\n                        <label>Prerequisites</label>\r\n                        <br/>\r\n                        <input \r\n                            className=\"btnShow\"\r\n                            style={buttonShowStyle}\r\n                            type=\"button\" \r\n                            value=\"Highlight Pre-requisites\" \r\n                            onClick={this.props.handleClickShowPrereq.bind(this, selectedCourse.code)}\r\n\r\n                        />\r\n                        <StyledSelect \r\n                            \r\n                            styles={customStyles}\r\n                            onChange={this.onChange}\r\n                            name=\"prereqCourses\"\r\n                            isMulti \r\n                            options={selectOptionsPrereq}\r\n                            value={this.state.prereqCourses}\r\n                        />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label>Corequisites</label>\r\n                        <br/>\r\n                        <input \r\n                            className=\"btnShow\"\r\n                            style={buttonShowStyle}\r\n                            type=\"button\" \r\n                            value=\"Highlight Co-requisites\"\r\n                            onClick={this.props.handleClickShowCoreq.bind(this, selectedCourse.code)}\r\n                        />\r\n                        <StyledSelect \r\n                            \r\n                            styles={customStyles}\r\n                            onChange={this.onChange}\r\n                            name=\"coreqCourses\"\r\n                            isMulti \r\n                            options={selectOptionsCoreq}\r\n                            value={this.state.coreqCourses}\r\n                        />\r\n                    </div>\r\n                \r\n                    <div style={{textAlign:'center', fontWeight:'bold'}}>\r\n                        Remember to click accept changes after making changes\r\n                    </div>\r\n                            \r\n                                    \r\n                                \r\n                    <input className=\"btn btn-save\" type=\"submit\" value=\"Accept Changes\"/>\r\n                </form>\r\n                ;\r\n\r\n\r\n\r\n\r\n        return (\r\n            <div style={sideViewStyle}>\r\n                \r\n                <h2>Advanced Course Edit</h2>\r\n                \r\n                {\r\n                    form\r\n                }\r\n            </div>\r\n        );\r\n        \r\n    }\r\n}   \r\n\r\n\r\n// PropTypes\r\nSideView.propType = {\r\n    sendNotification: PropTypes.func.isRequired,\r\n    handleClickEditCourse: PropTypes.func.isRequired,\r\n    courses: PropTypes.array.isRequired,\r\n    selectedTerm: PropTypes.number.isRequired,\r\n    selectedCourse: PropTypes.object.isRequired,\r\n    prereq: PropTypes.array.isRequired,\r\n    coreq: PropTypes.array.isRequired,\r\n    handleClickEditPrereq: PropTypes.func.isRequired,\r\n    handleClickEditCoreq: PropTypes.func.isRequired,\r\n}\r\n\r\nconst sideViewStyle = {\r\n    background: 'lightgrey',\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    border: '2px solid grey',    \r\n    overflowY: 'scroll',\r\n    height: '100%', \r\n}\r\n\r\nconst buttonShowStyle = {\r\n    \r\n}\r\n\r\n\r\nconst formStyle = {\r\n    border: 'none',\r\n    margin: '0 auto',\r\n}\r\n\r\n// Custom style for 'react-select', uses Emotion JS\r\nconst customStyles = {\r\n    container: (provided, state) => ({\r\n        ...provided,\r\n        // none of react-select's styles are passed to <Control />\r\n        \r\n      }),\r\n\r\n      control: (provided, state) => ({\r\n        ...provided,\r\n        overflowY: 'scroll',\r\n        height: 30,\r\n      }),\r\n\r\n\r\n}\r\n\r\n\r\nexport default SideView\r\n","import React from 'react'\r\n\r\nfunction ResetChanges(props) {\r\n    return (\r\n        <input\r\n            type=\"button\"\r\n            onClick={props.onResetClick}\r\n            style={buttonStyle}\r\n            className=\"btn btn-reset\"\r\n            value=\"Reset the changes\"\r\n        />\r\n    )\r\n}\r\nconst buttonStyle = {\r\n    borderRadius:'5px',\r\n    border:'2px solid black',\r\n    background: 'rgb(241, 83, 83)',\r\n    height: '100%'\r\n};\r\n\r\nexport default ResetChanges;\r\n","import React, { Component } from 'react'\r\nimport styled from 'styled-components';\r\nimport ee from 'event-emitter';\r\n\r\nconst Container = styled.div\r\n`\r\n    background-color: #444;\r\n    color: white;\r\n    padding: 16px;\r\n    position: absolute;\r\n    top: ${props => props.top}px;\r\n    right: 16px;\r\n    z-index: 999;\r\n    transition: top 0.5s ease;\r\n\r\n`;\r\n\r\nconst emitter = new ee();\r\n\r\nexport const notify = (msg) => {\r\n    emitter.emit('notification', msg);\r\n}\r\n\r\nexport class Notification extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            top: -100,\r\n            msg: '',\r\n        };\r\n\r\n        this.timeout = null;\r\n\r\n        emitter.on('notification', (msg) => {\r\n            this.onShow(msg);\r\n        });\r\n    }\r\n\r\n    onShow = (msg) => {\r\n        if (this.timeout){\r\n            clearTimeout(this.timeout);\r\n            this.setState({ top: -100}, () => {\r\n                this.timeout = setTimeout(() => {\r\n                    this.showNotification(msg);\r\n                }, 500);\r\n            });\r\n        }else{\r\n            this.showNotification(msg);\r\n        }\r\n    }\r\n\r\n    showNotification = (msg) => {\r\n        this.setState({\r\n            top: 100,\r\n            msg\r\n        }, () => {\r\n            this.timeout = setTimeout(() => {\r\n                this.setState({\r\n                    top: -100,\r\n                });\r\n            }, 3000)\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container top={this.state.top}>{this.state.msg}</Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Notification\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class CGPACalculator extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            term: this.props.courses.length, // last term\r\n            CGPA: 0,\r\n        };\r\n    }\r\n\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { courses } = this.props;\r\n        const { term } = this.state;\r\n        if (term > -1){\r\n            let allcourses = courses.slice(0, term);\r\n            allcourses = [].concat.apply([], allcourses); // flatten the 2d array\r\n            console.log(allcourses);\r\n            let totalPoints = allcourses.reduce((prev, curr) => prev + curr.grade * curr.credits, 0);\r\n            let totalCredits = allcourses.reduce((prev, curr) => prev + curr.credits, 0);\r\n            if (totalCredits === 0) totalCredits = 1; // to prevent divide by 0\r\n            this.setState({\r\n                CGPA: Math.round(totalPoints/ totalCredits* 100) / 100,\r\n            });\r\n        }else{\r\n            this.setState({\r\n                CGPA: 0\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = (e) => this.setState({[e.target.name]: e.target.value });\r\n\r\n    \r\n    render() {\r\n\r\n        const { courses } = this.props;\r\n        const { term } = this.state;\r\n\r\n        const options = courses.map((cList, index) => {\r\n            return <option key={index+1} value={index + 1}>{index + 1}</option>;\r\n        });\r\n        options.unshift(\r\n            <option key={-1} value={-1}>Choose and option</option>\r\n        );\r\n\r\n\r\n        return (\r\n            \r\n            <form style={gradeFinderStyle}\r\n            onSubmit={this.onSubmit}\r\n            >\r\n                <label>Find the GPA of the courses up to term:</label>\r\n                {'  '}\r\n                <select\r\n                style={inputStyle} \r\n                name=\"term\"\r\n                onChange={this.onChange}\r\n                defaultValue={term}\r\n                >\r\n                    {options}\r\n                </select>\r\n                {'  '}\r\n                <input type=\"submit\" style={btnStyle} value=\"Calculate\"/>\r\n                {'  '}\r\n                <label>CGPA: {this.state.CGPA}</label>\r\n            </form>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n// PropTypes\r\nCGPACalculator.propType = {\r\n    courses: PropTypes.array.isRequired,\r\n}\r\n\r\nconst gradeFinderStyle = {\r\n    padding: '5px 15px',\r\n    borderRadius:'5px',\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent:'space-evenly',\r\n    background: '#566',\r\n    border: '2px solid black',\r\n    color: 'white',\r\n    height: '100%'\r\n};\r\n\r\nconst btnStyle = {\r\n    display: 'inline-block',\r\n    border: 'none',\r\n    background: '#67F',\r\n    borderRadius: '5px',\r\n    color: '#fff',\r\n    padding: '2px 10px',\r\n    cursor: 'pointer',\r\n};\r\n\r\nconst inputStyle = {\r\n    background: 'lightgrey',\r\n    borderRadius: '5px',\r\n}\r\n\r\n\r\nexport default CGPACalculator\r\n","import React, { Component } from 'react';\r\nimport { HashRouter as Router, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n//import { v3, v4, v5 } from 'uuid'\r\nimport './App.css';\r\nimport CourseClass from './componenets/model/CourseClass';\r\nimport ProgramMap from './componenets/ProgramMap';\r\nimport Header from './componenets/layout/Header';\r\nimport About from './componenets/pages/About';\r\nimport SaveChanges from './componenets/SaveChanges';\r\nimport GradeFilter from './componenets/GradeFilter';\r\nimport SideView from './componenets/SideView';\r\nimport ResetChanges from './componenets/ResetChanges';\r\nimport Notification, { notify } from './componenets/Notification';\r\nimport CGPACalculator from './componenets/CGPACalculator';\r\n\r\nimport * as CourseActionCreators from './redux';\r\n\r\nconst SAMPLE_COURSES = [\r\n  [\r\n    new CourseClass(\"OO Prog\", \"PROG10082\", 3.3, 6),\r\n    new CourseClass(\"Intro to Data.\", \"TELE13167\", 2.6, 3),\r\n    new CourseClass(\"Web Dev.\", \"SYST10049\", 3.5, 3)\r\n  ],\r\n  [\r\n    new CourseClass(\"OO Prog 2\", \"PROG24178\", 3.0, 6),\r\n    new CourseClass(\"Data Netw. Design\", \"TELE33324\", 2.2, 3),\r\n    new CourseClass(\"Web Prog.\", \"SYST10199\", 2.6, 3)\r\n  ],\r\n  [\r\n    new CourseClass(\"JAVA\", \"PROG32758\", 3.3, 6),\r\n    new CourseClass(\"Comp. Sec.\", \"INFO24178\", 3.3, 3),\r\n    new CourseClass(\"Databases\", \"DBAS27198\", 3.3, 3)\r\n  ]\r\n]\r\n\r\nconst SAMPLE_PREREQ = {\r\n  \"PROG24178\": [\"PROG10082\"],\r\n  \"PROG32758\": [\"PROG24178\"],\r\n  \"TELE33324\": [\"TELE13167\"],\r\n  \"SYST10199\": [\"SYST10049\"],\r\n}\r\n\r\nconst SAMPLE_COREQ = [\r\n  [\"PROG32758\", \"DBAS27198\"],\r\n]\r\n\r\n\r\nclass App extends Component {\r\n  static apiurlpartial = '';\r\n  static localStorageKey = 'courses';\r\n  constructor(props){\r\n    super(props);\r\n    // Note that these variables for the state have been moved to the Redux store, and are no longer used\r\n    this.state = { \r\n      //courses: [[]], // 2d array, 1st dim = terms, 2nd dim = courses\r\n      filteredCourses: [], // array of courses to highlight\r\n      prereq: {}, // will be treated as a map/dictionary, stores all prerequisites for each course, values are arrays\r\n      coreq: [], // will be treated as an array of sets(but implmented as a 2d array)\r\n      selectedCourse: null, // current selected course\r\n      selectedTerm: null // current selected term\r\n    };\r\n    \r\n  }\r\n\r\n  componentDidMount(){\r\n    this.populateCourseData();\r\n  }\r\n\r\n  resetChanges(){\r\n    let confirmed = window.confirm(\"Are you sure you want to reset to the last saved changes?\");\r\n    if (!confirmed){\r\n      return;\r\n    }\r\n    this.populateCourseData();\r\n    this.props.clearFilter();\r\n    this.props.clearSelected();\r\n\r\n    // this.setState({\r\n    //   filteredCourses: [],\r\n    //   selectedCourse: null,\r\n    //   selectedTerm: null\r\n    // });\r\n  }\r\n\r\n\r\n  /* Local Storage Saving / Retrieving */\r\n  populateCourseData(){\r\n    const dataStringCourses = localStorage.getItem(App.localStorageKey);\r\n    const dataStringPrereq = localStorage.getItem(App.localStorageKey+\"prereq\");\r\n    const dataStringCoreq = localStorage.getItem(App.localStorageKey+\"coreq\");\r\n    //alert(\"retrieved \" + JSON.parse(dataString) + \" from localStorage.\");\r\n    if (!dataStringCourses){\r\n      return;\r\n    }\r\n    const dataObjectCourses = JSON.parse(dataStringCourses);\r\n    const dataObjectPrereq = JSON.parse(dataStringPrereq);\r\n    const dataObjectCoreq = JSON.parse(dataStringCoreq);\r\n\r\n\r\n    this.props.loadCourses(\r\n      dataObjectCourses, \r\n      (dataObjectPrereq)?dataObjectPrereq:this.props.prereq,\r\n      (dataObjectCoreq)?dataObjectCoreq:this.props.coreq\r\n    );\r\n    // this.setState({\r\n    //   courses: dataObjectCourses,\r\n    //   prereq: (dataObjectPrereq)?dataObjectPrereq:this.state.prereq,\r\n    //   coreq: (dataObjectCoreq)?dataObjectCoreq:this.state.coreq,\r\n    // });\r\n\r\n    \r\n  }\r\n\r\n  saveCourseData(){\r\n    let confirmed = window.confirm(\"Are you sure you want to save all the changes?\");\r\n    if (!confirmed){\r\n      return;\r\n    }\r\n    //alert(\"saving \" + JSON.stringify(this.state.courses) + \" into localStorage.\");\r\n    localStorage.setItem(App.localStorageKey, JSON.stringify(this.props.courses));\r\n    localStorage.setItem(App.localStorageKey+\"prereq\", JSON.stringify(this.props.prereq));\r\n    localStorage.setItem(App.localStorageKey+\"coreq\", JSON.stringify(this.props.coreq));\r\n    this.sendNotification('Changes saved');\r\n  }\r\n\r\n\r\n\r\n  // Finding the max number of courses out of all terms\r\n  getMaxCourseForYears(){\r\n      const max = Math.max(...this.props.courses.map((val, index) => val.length));\r\n      return max;\r\n  }\r\n\r\n  sendNotification = (msg) => {\r\n    notify(msg);\r\n  }\r\n\r\n\r\n  render(){\r\n      return(\r\n        <Router>\r\n          <div className=\"App\">\r\n            <div className=\"container\">\r\n              <Header />\r\n              <Notification />\r\n              <Route exact path=\"/\"\r\n              render={props => (\r\n                <React.Fragment>\r\n                  <div className=\"inner\">\r\n                    <div className=\"inner-top\">\r\n                    \r\n                      <ProgramMap \r\n                        handleClickAddTerm={this.props.addTerm}\r\n                        handleClickRemoveTerm={this.props.removeTerm}\r\n                        handleClickAddCourse={this.props.addCourse}\r\n                        handleClickEditCourse={this.props.editCourse}\r\n                        handleClickSelectCourse={this.props.toggleSelect}\r\n                        handleClickDeleteCourse={this.props.deleteCourse}\r\n                        maxCourseYears={this.getMaxCourseForYears()}\r\n                        courses={this.props.courses}\r\n                        selectedCourse={this.props.selectedCourse}\r\n                        filteredCourses={this.props.filteredCourses}\r\n                      />\r\n        \r\n                    </div>\r\n                    <div className={(this.props.selectedCourse==null)?\"inner-bottom\":\"inner-bottom expanded\"}>\r\n                      <div className=\"inner-bottom-head\">\r\n                        <SaveChanges\r\n                          onSaveClick={() => this.saveCourseData()}\r\n                        />\r\n                        <ResetChanges \r\n                          onResetClick={() => this.resetChanges()}\r\n                        />\r\n                        <GradeFilter\r\n                          onClickFilterByCategory={this.props.filterByCategory}\r\n                        />\r\n                        <CGPACalculator \r\n                          courses={this.props.courses}\r\n                        /> \r\n                      </div>\r\n                      <div className=\"inner-bottom-foot\">\r\n                         \r\n                        <SideView \r\n                          sendNotification={this.sendNotification}\r\n                          handleClickEditCourse={this.props.editCourse}\r\n                          courses={this.props.courses}\r\n                          selectedTerm={this.props.selectedTerm}\r\n                          selectedCourse={this.props.selectedCourse}\r\n                          prereq={this.props.prereq}\r\n                          coreq={this.props.coreq}\r\n                          handleClickEditPrereq={this.props.editPrereq}\r\n                          handleClickEditCoreq={this.props.editCoreq}\r\n                          handleClickShowPrereq={this.props.showPrereq}\r\n                          handleClickShowCoreq={this.props.showCoreq}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </React.Fragment>\r\n              )} />\r\n              <Route path=\"/about\" component={About} />\r\n            </div>\r\n          </div>\r\n        </Router>\r\n      );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    courses: state.courses.courses,\r\n    filteredCourses: state.courses.filteredCourses,\r\n    selectedCourse: state.courses.selectedCourse,\r\n    selectedTerm: state.courses.selectedTerm,\r\n    prereq: state.courses.prereq,\r\n    coreq: state.courses.coreq\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addCourse: (term, courseCode) => dispatch(CourseActionCreators.addCourse(term, courseCode)),\r\n    editCourse: (term, editedCourse) => dispatch(CourseActionCreators.editCourse(term, editedCourse)),\r\n    deleteCourse: (term, courseCode) => dispatch(CourseActionCreators.deleteCourse(term, courseCode)),\r\n    addTerm: () => dispatch(CourseActionCreators.addTerm()),\r\n    removeTerm: () => dispatch(CourseActionCreators.removeTerm()),\r\n    toggleSelect: (courseCode) => dispatch(CourseActionCreators.toggleSelectCourse(courseCode)),\r\n    clearSelected: () => dispatch(CourseActionCreators.clearSelected()),\r\n    filterByCategory: (category, value) => dispatch(CourseActionCreators.filterByCategory(category, value)),\r\n    clearFilter: () => dispatch(CourseActionCreators.clearFilter()),\r\n    editPrereq: (courseCode, prereqCourses) => dispatch(CourseActionCreators.editPrereq(courseCode, prereqCourses)),\r\n    editCoreq: (courseCode, coreqCourses) => dispatch(CourseActionCreators.editCoreq(courseCode, coreqCourses)),\r\n    showPrereq: (courseCode) => dispatch(CourseActionCreators.showPrereq(courseCode)),\r\n    showCoreq: (courseCode) => dispatch(CourseActionCreators.showCoreq(courseCode)),\r\n    loadCourses: (courses, prereq, coreq) => dispatch(CourseActionCreators.loadCourses(courses, prereq, coreq))\r\n  }\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as courseTypes from './courseTypes';\r\n\r\nimport CourseClass from '../../componenets/model/CourseClass';\r\n\r\nconst initialState = {\r\n    courses: [[]], // 2d array, 1st dim = terms, 2nd dim = courses\r\n    filteredCourses: [], // array of courses to highlight\r\n    prereq: {}, // will be treated as a map/dictionary, stores all prerequisites for each course, values are arrays\r\n    coreq: [], // will be treated as an array of sets(but implmented as a 2d array)\r\n    selectedCourse: null, // current selected course\r\n    selectedTerm: null\r\n}\r\n\r\n\r\nconst concatAtIndex = (list, index, item) => {\r\n    const listAlt = list.slice();\r\n    listAlt.slice(index, 0, item);\r\n    return listAlt;\r\n} \r\n\r\nconst removeAtIndex = (list, index) => {\r\n    const listAlt = list.slice();\r\n    listAlt.splice(index, 1);\r\n    return listAlt;\r\n} \r\n\r\n  // Goes through each of the sets in the coreq and combines them if they intersects with another\r\n const combineCoreqSets = (inputCoreq) => {\r\n    if (inputCoreq === null || inputCoreq.length === 0) return [];\r\n    let allcoreq = inputCoreq.slice();\r\n    \r\n    for (let i = 0; i < allcoreq.length; i++){\r\n      let first = allcoreq[i];\r\n      \r\n      for (let j = allcoreq.length - 1; j > i; j--){\r\n        let second = allcoreq[j];\r\n        if (intersects(first, second)){\r\n          allcoreq[i] = [...new Set(first.concat(second))];\r\n          allcoreq.splice(j,1);\r\n        }\r\n      }\r\n    }\r\n    return allcoreq;\r\n  }\r\n\r\nconst intersects = (first, second) => {\r\n    if (first === null || second === null) return false;\r\n    return first.findIndex(value => second.includes(value)) !== -1;\r\n  }\r\n\r\nconst getCoursesFromCodes = (codes, allcourses) =>{\r\n    allcourses = [].concat.apply([], allcourses);\r\n    let filtered = allcourses.filter(c => (codes.includes(c.code)));\r\n    return filtered;\r\n} \r\n\r\n\r\n\r\nconst courseReducer = (state = initialState, action) => {\r\n    let term, termList, courseCode, i;\r\n    switch(action.type){\r\n        case courseTypes.ADD_TERM: \r\n            return {\r\n                ...state,\r\n                courses: \r\n                action.payload === -1\r\n                ? state.courses.concat([[]])\r\n                : concatAtIndex(state.courses, action.payload, []) // Not Tested\r\n            };\r\n        case courseTypes.REMOVE_TERM: \r\n            return {\r\n                ...state,\r\n                courses: action.payload === -1\r\n                ? state.courses.slice(0, state.courses.length - 1)\r\n                : removeAtIndex(state.courses, action.payload)  // Not Tested\r\n            };\r\n\r\n        case courseTypes.ADD_COURSE:\r\n            courseCode = action.payload.courseCode;\r\n            term = action.payload.term;\r\n            const course = CourseClass.EmptyCourse();\r\n            course.code = courseCode;\r\n            termList = state.courses.slice();\r\n            termList[term].push(course);\r\n            return {\r\n                ...state,\r\n                courses: termList\r\n            }\r\n        case courseTypes.EDIT_COURSE:\r\n            let { editedCourse } = action.payload;\r\n            term = action.payload.term;\r\n            termList = state.courses.slice();\r\n            termList[term] = termList[term].map(course => {\r\n                if (course.code === editedCourse.code){\r\n                    return editedCourse;\r\n                }else{\r\n                    return course;\r\n                } \r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                courses: termList\r\n            }\r\n\r\n        case courseTypes.DELETE_COURSE:\r\n            termList = state.courses.slice();\r\n            term = action.payload.term;\r\n            i = termList[term].findIndex(course => course.code === action.payload.courseCode);\r\n            termList[term].splice(i, 1);\r\n            return {\r\n                ...state,\r\n                courses: termList\r\n            }\r\n        case courseTypes.FILTER:\r\n            let { category, value } = action.payload;\r\n            const unfiltered = [].concat.apply([], state.courses);\r\n            let filtered;\r\n            if(category === '1'){\r\n                filtered = unfiltered.filter(val => (val.grade > value));\r\n            }else if(category === '2'){\r\n                filtered = unfiltered.filter(val => (val.grade < value));\r\n            }else if(category === '3'){\r\n                filtered = unfiltered.filter(val => (val.grade === value));\r\n            }else if(category === '4'){\r\n                filtered = unfiltered.filter(val => (val.grade >= value));\r\n            }else if(category === '5'){\r\n                filtered = unfiltered.filter(val => (val.grade <= value));\r\n            }else{\r\n                filtered = unfiltered;\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                filteredCourses: filtered\r\n            }\r\n        case courseTypes.CLEAR_FILTER:\r\n            return {\r\n                ...state,\r\n                filteredCourses: []\r\n            }\r\n        case courseTypes.TOGGLE_SELECT:\r\n            const { selectedCourse } = state;\r\n            if(selectedCourse && selectedCourse.code === action.payload){\r\n                return {\r\n                    ...state,\r\n                    selectedCourse: null,\r\n                    selectedTerm: null,  \r\n                    filteredCourses: [],\r\n                }\r\n            }\r\n            let x, y;\r\n            for (x = 0; x < state.courses.length; x++){\r\n                y = state.courses[x].findIndex(val => val.code.trim() === action.payload.trim());\r\n        \r\n                if (y >= 0){\r\n        \r\n                  \r\n                  return{\r\n                      ...state,\r\n                    selectedCourse: state.courses[x][y],\r\n                    selectedTerm: x,  \r\n                    filteredCourses: []\r\n                  };\r\n                  \r\n                }\r\n              }\r\n        \r\n\r\n              return state;\r\n        case courseTypes.CLEAR_SELECT:\r\n            return {\r\n                ...state,\r\n                selectedCourse: null,\r\n                selectedTerm: null\r\n            }\r\n\r\n        case courseTypes.EDIT_PREREQ:\r\n            let prereqcopy = state.prereq;\r\n            prereqcopy[action.payload.courseCode] = action.payload.prereqCourses;\r\n            return {\r\n                ...state,\r\n                prereq: prereqcopy\r\n            }\r\n        case courseTypes.EDIT_COREQ:\r\n            courseCode = action.payload.courseCode;\r\n            let coreqCourses = action.payload.coreqCourses;\r\n            let coreqcopy = state.coreq.slice();\r\n            // find the index of the 'set' that contains the courseCode, -1 if the code is not in any set\r\n            let index = coreqcopy.findIndex(courseSet => courseSet.includes(courseCode));\r\n\r\n            // if there are no supplied coreqs\r\n            // the user wants there to be no coreqCourses for this course\r\n            if (coreqCourses.length === 0){\r\n            \r\n                // delete the courseCode if index >= 0\r\n                if (index >= 0){\r\n                    coreqcopy[index].splice(coreqcopy[index].findIndex(c => c.code === courseCode), 1);\r\n                    if (coreqcopy[index].length === 0 || coreqcopy[index].length === 1){\r\n                        coreqcopy.splice(index, 1);\r\n                    }\r\n                    return {\r\n                        ...state,\r\n                        coreq: coreqcopy\r\n                    }\r\n                }\r\n                return state;\r\n            }\r\n\r\n            // if there are supplied coreqCourses\r\n\r\n\r\n            // if the course is not in the coreq list\r\n            if (index < 0){\r\n                // check if any of the coreq courses are already in the list. \r\n                // want to maintain only one set with each course\r\n                for (i = 0; i < coreqcopy.length; i++){\r\n                    if (coreqcopy[i].findIndex(c => coreqCourses.includes(c)) >= 0){\r\n                        index = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (index < 0){\r\n                // not in the list\r\n                coreqcopy.push([]);\r\n                coreqcopy[coreqcopy.length - 1].push(...coreqCourses, courseCode);\r\n            }else{\r\n                // if within the list\r\n                // concat the coreqlist \r\n        \r\n                // line below allows for deleting courses not found in coreqCourses \r\n                // in the case where the user is removing a course from the set\r\n                coreqcopy[index] = [...coreqCourses, courseCode];\r\n                \r\n                // remove duplicate values\r\n                coreqcopy[index] = [...new Set(coreqcopy[index])];\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                // function directly below helps prevent double entries\r\n                // If there are two sets that intersect,it will combine them.\r\n                // And if the user is combining a set with a single course, the set will be destroyed.\r\n                // (i.e. selecting a course that is not in a set and combining it with another that \r\n                // is in a set, the set of the later course will be destroyed, \r\n                // if both courses are each within different sets both sets will be combined)\r\n                // this function could behave weirdly with the code above that looks like:\r\n                // coreqcopy[index] = [...coreqCourses, courseCode]\r\n                // as that code deletes the previous set\r\n                coreq: combineCoreqSets(coreqcopy), \r\n            };\r\n\r\n        case courseTypes.SHOW_PREREQ:\r\n            const val = state.prereq[action.payload];\r\n            if (val !== undefined){\r\n                let filtered = getCoursesFromCodes(val, state.courses);\r\n                return {\r\n                    ...state,\r\n                    filteredCourses: filtered,\r\n                };\r\n            }\r\n            return {\r\n                ...state,\r\n                filteredCourses: []\r\n            };\r\n\r\n        case courseTypes.SHOW_COREQ:\r\n            \r\n            let selectedCoreqIndex = state.coreq\r\n            .findIndex(cl => cl.includes(action.payload));\r\n            \r\n            if (selectedCoreqIndex >= 0){\r\n                let list = state.coreq[selectedCoreqIndex];\r\n                list = list.filter(li => (li !== courseCode));\r\n                let filtered = getCoursesFromCodes(list, state.courses);\r\n                return{\r\n                    ...state,\r\n                    filteredCourses: filtered,\r\n                };\r\n            }\r\n            return {\r\n                ...state,\r\n                filteredCourses: []\r\n            };\r\n\r\n        case courseTypes.LOAD_COURSES:\r\n            return {\r\n                ...state,\r\n                courses: action.payload.courses,\r\n                prereq: action.payload.prereq,\r\n                coreq: action.payload.coreq\r\n            }\r\n\r\n        case courseTypes.DRAG_ENTER:\r\n            const newCourses = JSON.parse(JSON.stringify(state.courses));\r\n            const {params, currentItem} = action.payload;\r\n            newCourses[params.termI].splice(params.courseI, 0, newCourses[currentItem.termI].splice(currentItem.courseI, 1)[0]);\r\n            return {\r\n                ...state,\r\n                courses: newCourses,\r\n                selectedCourse: null,\r\n                selectedTerm: null,\r\n                filteredCourses: []\r\n            }\r\n\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default courseReducer;\r\n\r\n\r\n\r\n","import { combineReducers } from 'redux';\r\n\r\nimport courseReducer from './course/courseReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n   courses: courseReducer \r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport logger from 'redux-logger';\r\nimport rootReducer from './rootReducer';\r\nconst store = createStore(rootReducer, applyMiddleware(logger));\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n\r\n"],"sourceRoot":""}