{"version":3,"sources":["redux/course/courseTypes.js","redux/course/courseActions.js","redux/settings/settingsTypes.js","redux/settings/settingsActions.js","redux/focus/focusTypes.js","redux/focus/focusActions.js","styles/components/appStyles.js","styles/base/base.js","styles/themes/themes.js","styles/components/headerStyles.js","componenets/layout/Header.js","componenets/pages/About.js","componenets/Notification.js","componenets/pages/Instructions.js","styles/components/homeStyles.js","componenets/SaveChanges.js","componenets/GradeFilter.js","styles/components/sideviewStyles.js","styles/components/animations.js","styles/components/programmapStyles.js","componenets/SideView.js","componenets/ResetChanges.js","componenets/CGPACalculator.js","componenets/AddCourse.js","componenets/model/CourseClass.js","componenets/Course.js","componenets/Term.js","componenets/AddTerm.js","componenets/RemoveTerm.js","componenets/ProgramMap.js","componenets/SideViewHeader.js","hooks/useWindowSize.js","componenets/CourseAnalyzer.js","componenets/Home.js","redux/settings/settingsReducer.js","componenets/GPASettings.js","componenets/ImportExportSettings.js","componenets/Settings.js","App.js","serviceWorker.js","redux/course/courseReducer.js","redux/focus/focusReducer.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["ADD_COURSE","DELETE_COURSE","EDIT_COURSE","ADD_TERM","REMOVE_TERM","FILTER","CLEAR_FILTER","TOGGLE_SELECT","CLEAR_SELECT","EDIT_PREREQ","EDIT_COREQ","SHOW_PREREQ","SHOW_COREQ","LOAD_COURSES","DRAG_ENTER","addCourse","term","courseCode","type","courseTypes","payload","removeTerm","index","toggleSelectCourse","dispatch","getState","courses","selectedCourse","code","loadCourses","prereq","coreq","TOGGLE_DARKMODE","TOGGLE_STICKY_HEADER","SET_CURRENT_SCHOOL","SET_SCHOOL_GRADES","LOAD_CUSTOM_SCHOOL","LOAD_SETTINGS","toggleDarkmode","toggleState","settingsTypes","darkmode","settings","nightmode","CHANGE_FOCUS","CHANGE_STYLE","BLUR_FOCUS","outlineElementStyle","element","style","width","offsetWidth","height","offsetHeight","transform","offsetLeft","offsetTop","changeFocus","focusTypes","changeStyle","newStyle","focus","currentFocusedElm","current","StyledAppContainer","styled","div","StyledFileInput","input","GlobalStyles","createGlobalStyle","defaultTheme","bg","bgAlt","button","buttonHover","sidePanel","border","color","breakpoint","selectedTerm","bgBody","bgUI","panelColor","panelAlt","textColor","primaryColor","secondaryColor","tertiaryColor","darkmodeTheme","StyledHeaderWrapper","theme","StyledHeader","header","isActive","path","match","location","pathname","Header","className","to","exact","activeClassName","bind","this","xmlns","viewBox","d","fill","enable-background","About","Fragment","Container","props","backColor","top","opacity","borderColor","emitter","ee","notify","msg","emit","types","warning","info","success","Notification","onShow","timeout","clearTimeout","setState","setTimeout","showNotification","state","on","Component","Instructions","listStyle","padding","StyledInner","StyledInnerTop","StyledInnerBottomHeadItem","form","StyledButton","StyledInput","Input","StyledInnerBottomHeadContainer","StyledInnerBottomHead","StyledInnerBottomFoot","StyledInnerBottom","expanded","StyledInnerBottomWrapper","StyledButtonPrimary","Button","StyledButtonSecondary","buttonStyle","fontSize","SaveChanges","onClick","onSaveClick","GradeFilter","onSubmit","e","preventDefault","category","val","onClickFilterByCategory","onChange","target","name","value","Label","lineHeight","alignSelf","id","defaultValue","placeholder","propType","PropTypes","func","isRequired","StyledContainer","StyledButtonShow","StyledSelect","Select","StyleResponsiveContainer","radius","y","x","keyframes","fadeinbottom","StyledMap","Table","StyledFocusElement","td","StyledMapHeading","th","isEditing","StyledMapHead","thead","stickyHeader","StyledMapBody","tbody","StyledMapData","StyledCourseData","StyledMapRow","tr","StyledMapRowResponsive","StyledTermRow","StyledButtonAdd","StyledButtonDelete","StyledButtonSave","SideView","sendNotification","handleClickEditPrereq","handleClickEditCoreq","handleClickShowPrereq","handleClickShowCoreq","useState","prereqCourses","coreqCourses","action","removedValue","getSelectOption","course","label","getValueFromSelectOption","option","useEffect","updateState","selectedPrereqList","console","log","selectPrereq","slice","selectOptionsPrereq","concat","apply","filter","includes","selectedCoreqList","selectedCoreqIndex","findIndex","cl","c","selectOptionsCoreq","map","pC","prs","cC","crs","sytle","formStyle","buttonShowStyle","styles","customStyles","isMulti","options","textAlign","fontWeight","handleClickEditCourse","array","number","object","margin","container","provided","control","overflowY","boxShadow","isFocused","ResetChanges","onResetClick","CGPACalculator","convertNumericToGradePoint","numericGrade","GPAStops","gradepoint","forEach","stop","lower","upper","schools","currentSchool","allcourses","length","sort","a","b","grade","credits","totalPoints","reduce","prev","curr","totalCredits","CGPA","Math","round","cList","unshift","checked","connect","AddCourse","performValidation","trim","find","courseList","undefined","message","Form","addCourseStyle","for","inputStyle","handleClickAddCourse","display","flexDirection","justifyContent","paddingTop","marginTop","CourseClass","Course","editedCourse","Number","isNaN","courseName","onSelect","theContainer","isSelected","scrollIntoView","behavior","block","inline","handleClickSelectCourse","toggleFocus","React","createRef","theForm","courseIndex","termIndex","appliedclasses","isHighlighted","draggableId","snapshot","ref","composeRefs","innerRef","draggableProps","courseStyle","dragholder","dragHandleProps","FormGroup","handleClickDeleteCourse","instanceOf","bool","background","borderRadius","cursor","overflow","Term","termNumber","filteredCourses","editing","setEditing","useDispatch","termDisplay","termDisplayStyle","coursesDisplay","ind","isHighlightedCourse","val1","isSelectedCourse","newCourseButtonDisplay","droppableId","direction","_","droppableProps","scope","AddTerm","handleClickAddTerm","addNewTermStyle","RemoveTerm","handleClick","removeTermStyle","handleClickRemoveTerm","ProgramMap","maxCourseYears","isChrome","window","chrome","webstore","runtime","useSelector","focusedCourse","rows","onDragEnd","param","params","currentItem","destination","termI","courseI","source","bordered","size","colSpan","focusParentElmStyleChrome","focusParentElmStyle","position","left","SideViewHeader","pageNumber","setPageNumber","maxPages","setMaxPages","windowSize","setWindowSize","handleResize","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","sideViewHeaderContainer","useRef","resetScrollProperties","scrollHeight","clientHeight","scrollTop","floor","scrollTo","pageIndicatorStyle","onScroll","children","backgroundColor","CourseAnalyzer","recommendedCourse","setRecommendedCourse","setType","setTerm","typeOptions","t","termOptions","allCourses","highestGrade","max","toString","courseA","courseB","Home","componentWillUnmount","clearSelected","resetChanges","confirm","populateCourseData","clearFilter","saveCourseData","localStorage","setItem","App","localStorageKey","JSON","stringify","getMaxCourseForYears","addTerm","editCourse","toggleSelect","deleteCourse","filterByCategory","editPrereq","editCoreq","showPrereq","showCoreq","CourseActionCreators","customSchoolName","AllSchools","initialState","settingsReducer","schoolName","schoolGrades","Object","assign","items","customSchoolSettings","gradeLetters","GPASettings","setGPAStops","letter","customSchoolGPAStops","currentTarget","newStop","newStops","htmlFor","AllActionCreators","keys","striped","removeAtIndex","min","obj_csv","dataFile","loadCoursesPayload","import_csv","callback","files","reader","FileReader","readAsBinaryString","onload","total","result","data","lbreak","split","currentRead","res","startsWith","push","parseCSVData","import_json","readAsText","obj","parse","parseJSONData","ImportExportSettings","fileUploadRef","checkBoxChecked","check","outline","fileName","json","blob","Blob","FileSaver","saveAs","export_json","arrayHeader","terms","delimiter","csv","join","key","row","hasOwnProperty","coursecode","coreqset","csvData","csvUrl","URL","createObjectURL","hiddenElement","document","createElement","href","download","click","export_csv","AllActionsCreators","toggleStickyHeader","CustomInput","componentDidMount","restoreSettings","handleWindowResize","currentSchoolFromLS","getItem","stickyHeaderFromLS","darkmodeFromLS","loadSettings","customSchoolData","loadCustomSchool","dataStringCourses","dataStringPrereq","dataStringCoreq","dataObjectCourses","dataObjectPrereq","dataObjectCoreq","render","component","Settings","actionCreators","Boolean","hostname","concatAtIndex","list","item","listAlt","splice","combineCoreqSets","inputCoreq","allcoreq","i","first","j","second","intersects","Set","getCoursesFromCodes","codes","deleteCoursesFromPrereq","courseCodes","entry","prototype","call","deleteCoursesFromCoreq","courseSet","courseReducer","termList","EmptyCourse","filtered","unfiltered","prereqcopy","coreqcopy","li","newCourses","focusReducer","rootReducer","combineReducers","store","createStore","compose","applyMiddleware","logger","thunk","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.89801686.chunk.js","sourcesContent":["// course\r\nexport const ADD_COURSE = 'ADD_COURSE';\r\nexport const DELETE_COURSE = 'DELETE_COURSE';\r\nexport const EDIT_COURSE = 'EDIT_COURSE';\r\nexport const ADD_TERM = 'ADD_TERM';\r\nexport const REMOVE_TERM = 'REMOVE_TERM';\r\n\r\n// filter\r\nexport const FILTER = 'FILTER';\r\nexport const CLEAR_FILTER = 'CLEAR_FILTER';\r\n\r\n// select\r\nexport const TOGGLE_SELECT = 'TOGGLE_SELECT';\r\nexport const CLEAR_SELECT = 'CLEAR_SELECT';\r\n\r\n// prereq\r\nexport const EDIT_PREREQ = 'EDIT_PREREQ';\r\nexport const EDIT_COREQ = 'EDIT_COREQ';\r\nexport const SHOW_PREREQ = 'SHOW_PREREQ';\r\nexport const SHOW_COREQ = 'SHOW_COREQ';\r\n\r\n// loading\r\nexport const LOAD_COURSES = 'LOAD_COURSES';\r\n\r\n// dragging\r\nexport const DRAG_ENTER = 'DRAG_ENTER';","import * as courseTypes from './courseTypes';\r\n\r\nexport const addCourse = (term, courseCode) => {\r\n    return {\r\n        type: courseTypes.ADD_COURSE,\r\n        payload: { term, courseCode }\r\n    }\r\n}\r\n\r\nexport const editCourse = (term, editedCourse) => {\r\n    return {\r\n        type: courseTypes.EDIT_COURSE,\r\n        payload: { term, editedCourse }\r\n    }\r\n}\r\n\r\nexport const deleteCourse = (term, courseCode) => {\r\n    return {\r\n        type: courseTypes.DELETE_COURSE,\r\n        payload: { term, courseCode }\r\n    }\r\n}\r\n\r\nexport const addTerm = (index = -1) => {\r\n    return {\r\n        type: courseTypes.ADD_TERM,\r\n        payload: index\r\n    }\r\n}\r\n\r\nexport const removeTerm = (index = -1) => {\r\n    return {\r\n        type: courseTypes.REMOVE_TERM,\r\n        payload: index\r\n    }\r\n}\r\n\r\nexport const filterByCategory = (category, value) => {\r\n    return {\r\n        type: courseTypes.FILTER,\r\n        payload: {category, value}\r\n    }\r\n}\r\n\r\nexport const clearFilter = () => {\r\n    return {\r\n        type: courseTypes.CLEAR_FILTER\r\n    }\r\n}\r\n\r\n\r\nexport const toggleSelectCourse = (courseCode = \"not_specified\") => {\r\n    if (courseCode === \"not_specified\") {\r\n\t\treturn (dispatch, getState) => {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: courseTypes.TOGGLE_SELECT,\r\n\t\t\t\tpayload: (getState().courses.selectedCourse)? getState().courses.selectedCourse.code : \"\",\r\n\t\t\t});\r\n        }\r\n    } else {\r\n        return (dispatch, getState) => {\r\n\t\t\tdispatch({ type: courseTypes.TOGGLE_SELECT, payload: courseCode });\r\n\t\t};\r\n    } \r\n}\r\n\r\nexport const clearSelected = () => {\r\n    return {\r\n        type: courseTypes.CLEAR_SELECT\r\n    }\r\n}\r\n\r\nexport const editPrereq = (courseCode, prereqCourses) => {\r\n    return {\r\n        type: courseTypes.EDIT_PREREQ,\r\n        payload: { courseCode, prereqCourses }\r\n    }\r\n}\r\n\r\nexport const editCoreq = (courseCode, coreqCourses) => {\r\n    return {\r\n        type: courseTypes.EDIT_COREQ,\r\n        payload: { courseCode, coreqCourses }\r\n    }\r\n}\r\n\r\nexport const showPrereq = (courseCode) => {\r\n    \r\n    return {\r\n        type: courseTypes.SHOW_PREREQ,\r\n        payload: courseCode\r\n    }\r\n}\r\n\r\nexport const showCoreq = (courseCode) => {\r\n    \r\n    return {\r\n        type: courseTypes.SHOW_COREQ,\r\n        payload: courseCode\r\n    }\r\n}\r\n\r\nexport const loadCourses = (courses, prereq, coreq) => {\r\n    return {\r\n        type: courseTypes.LOAD_COURSES,\r\n        payload: { courses, prereq, coreq }\r\n    }\r\n}\r\n\r\nexport const dragEnter = (params, currentItem) => {\r\n    return {\r\n        type: courseTypes.DRAG_ENTER,\r\n        payload: {params, currentItem}\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","export const TOGGLE_DARKMODE = 'TOGGLE_DARKMODE';\r\nexport const TOGGLE_STICKY_HEADER = 'TOGGLE_STICKY_HEADER';\r\n\r\n\r\n// School Settings\r\n\r\nexport const SET_CURRENT_SCHOOL = 'SET_CURRENT_SCHOOL';\r\nexport const SET_SCHOOL_GRADES = 'SET_SCHOOL_GRADES';\r\nexport const LOAD_CUSTOM_SCHOOL = 'LOAD_CUSTOM_SCHOOL';\r\n\r\n// Loading\r\n\r\nexport const LOAD_SETTINGS = 'LOAD_SETTINGS';","import * as settingsTypes from './settingsTypes';\r\n\r\nexport const toggleDarkmode = (toggleState = 'not_specified') => {\r\n    if (toggleState === \"not_specified\") {\r\n\t\treturn (dispatch, getState) => {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: settingsTypes.TOGGLE_DARKMODE,\r\n\t\t\t\tpayload: { darkmode: !getState().settings.darkmode },\r\n\t\t\t});\r\n        }\r\n    } else {\r\n        return (dispatch, getState) => {\r\n\t\t\tdispatch({ type: settingsTypes.TOGGLE_DARKMODE, payload: { nightmode: toggleState } });\r\n\t\t};\r\n    } \r\n}\r\n\r\nexport const toggleStickyHeader = (toggleState = 'not_specified') => {\r\n    if (toggleState === \"not_specified\") {\r\n\t\treturn (dispatch, getState) => {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: settingsTypes.TOGGLE_STICKY_HEADER,\r\n\t\t\t\tpayload: { stickyHeader: !getState().settings.stickyHeader },\r\n\t\t\t});\r\n        }\r\n    } else {\r\n        return (dispatch, getState) => {\r\n\t\t\tdispatch({ type: settingsTypes.TOGGLE_STICKY_HEADER, payload: { stickyHeader: toggleState } });\r\n\t\t};\r\n    } \r\n}\r\n\r\n\r\nexport const setCurrentSchool = (currentSchool) => {\r\n\treturn {\r\n\t\ttype: settingsTypes.SET_CURRENT_SCHOOL,\r\n\t\tpayload: { currentSchool }\r\n\t}\r\n}\r\n\r\nexport const setSchoolGrades = (schoolName = 'none', schoolGrades) => {\r\n\treturn {\r\n\t\ttype: settingsTypes.SET_SCHOOL_GRADES,\r\n\t\tpayload: { schoolName, schoolGrades }\r\n\t}\r\n}\r\n\r\nexport const loadSettings = (items) => {\r\n\treturn {\r\n\t\ttype: settingsTypes.LOAD_SETTINGS,\r\n\t\tpayload: { items }\r\n\t}\r\n}\r\n\r\nexport const loadCustomSchool = (customSchoolSettings) => {\r\n\treturn {\r\n\t\ttype: settingsTypes.LOAD_CUSTOM_SCHOOL,\r\n\t\tpayload: { customSchoolSettings }\r\n\t}\r\n}\r\n","export const CHANGE_FOCUS = 'CHANGE_FOCUS';\r\nexport const CHANGE_STYLE = 'CHANGE_STYLE';\r\nexport const BLUR_FOCUS = 'BLUR_FOCUS';\r\n","import * as focusTypes from './focusTypes';\r\n\r\n\r\nconst outlineElementStyle = (element, style) => {\r\n    return element\r\n        ? {\r\n              width: `${element.offsetWidth}px`,\r\n              height: `${element.offsetHeight}px`,\r\n              transform: `translateX(${element.offsetLeft}px) translateY(${element.offsetTop + 5}px)`,\r\n            \r\n        }\r\n        : style;\r\n};\r\n\r\nexport const changeFocus = (element) => {\r\n    return {\r\n        type: focusTypes.CHANGE_FOCUS,\r\n        payload: element\r\n    };\r\n}\r\n\r\n\r\nexport const changeStyle = (newStyle = \"not_specified\") => {\r\n    if (newStyle === \"not_specified\") {\r\n\t\treturn (dispatch, getState) => {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: focusTypes.CHANGE_STYLE,\r\n\t\t\t\tpayload: getState().focus.currentFocusedElm?outlineElementStyle(getState().focus.currentFocusedElm.current, getState().focus.style): null,\r\n\t\t\t});\r\n        }\r\n    } else {\r\n        return (dispatch, getState) => {\r\n\t\t\tdispatch({ type: focusTypes.CHANGE_STYLE, payload: newStyle });\r\n\t\t};\r\n    } \r\n}\r\n\r\nexport const blurFocus = () => {\r\n    return {\r\n        type: focusTypes.BLUR_FOCUS\r\n    };\r\n}\r\n\r\n\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledAppContainer = styled.div`\r\n  padding: 0.2rem;\r\n  width: 100%;\r\n  min-height: 100vh;\r\n\r\n  &  input:focus, & select:focus {\r\n    border-color: #16123a;\r\n    box-shadow: 0 0 0 .2rem rgba(128, 119, 212, 0.2);\r\n  }\r\n`;\r\n\r\nexport const StyledFileInput = styled.input`\r\n  padding: 0.2rem;\r\n  background-color: #eee;\r\n  border-radius: 5px;\r\n  border: 1px solid #444;\r\n`;","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n    * {\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n    font-size: 10px;\r\n    }\r\n\r\n    body{\r\n    font-family: 'Roboto', sans-serif;\r\n    line-height: 1.4;\r\n    font-size: 10px;\r\n    ${'' /* background: ${({ theme }) => theme.bgBody}; */}\r\n    }\r\n\r\n    a {\r\n    color: #333;\r\n    text-decoration: none;\r\n    }\r\n\r\n\r\n\r\n    h1{ font-size: 20px; }\r\n    h2{ font-size: 16px; }\r\n    h3{ font-size: 12px; }\r\n    h4{ font-size: 8px; }\r\n    input{font-size: 10px; padding: 0;}\r\n\r\n`;\r\n\r\n\r\nexport default GlobalStyles;","export const defaultTheme = {\r\n  bg: \"#fff\",\r\n  bgAlt: \"#999\",\r\n  button: \"#5b50c8\",\r\n  buttonHover: \"#4F43C4\",\r\n  sidePanel: \"lightgrey\",\r\n  border: \"#222\",\r\n  color: \"#495057\",\r\n  breakpoint: \"200px\",\r\n  selectedTerm: \"#ddd\",\r\n  selectedCourse: \"grey\",\r\n  bgBody: \"white\",\r\n  bgUI: \"#414141\",\r\n  panelColor: \"#D5D5D5\",\r\n  panelAlt: \"#FFF\",\r\n  textColor: \"#000\",\r\n  primaryColor: \"#4F43C4\",\r\n  secondaryColor: \"#AAA0F8\",\r\n  tertiaryColor: \"#a49ee1\",\r\n};\r\n\r\nexport const darkmodeTheme = {\r\n  ...defaultTheme,\r\n  bg: \"#0d1117\",\r\n  bgAlt: \"#161b22\",\r\n  sidePanel: \"darkgrey\",\r\n  border: \"#ced4da\",\r\n  color: \"white\",\r\n  selectedTerm: \"#444\",\r\n  selectedCourse: \"white\",\r\n  bgBody: \"darkgrey\",\r\n  bgUI: \"#30363d\",\r\n  panelColor: \"#222\",\r\n  panelAlt: \"#30363D\",\r\n  textColor: \"#FFF\",\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledHeaderWrapper = styled.div`\r\n    padding: 5px;\r\n    background-color: ${({ theme }) => theme.panelColor};\r\n    height: 10vh;\r\n`;\r\n\r\nexport const StyledHeader = styled.header`\r\n    \r\n    background-color: ${({ theme }) => theme.panelAlt};\r\n    text-align: center;\r\n    border-radius: 5px;\r\n    color: ${({ theme }) => theme.textColor};\r\n    padding: 1px;\r\n    height: 100%;\r\n\r\n    & a {\r\n        color: #B6B2B3;\r\n        border-radius: 5px;\r\n        text-decoration: none;\r\n        outline: none;\r\n        padding: 5px 10px;\r\n        font-weight: 700;\r\n        border-radius: 5px;\r\n        display: inline-block;\r\n        & > * {\r\n            margin: auto 5px;\r\n        }\r\n    }\r\n\r\n    & a.current-link {\r\n        background-color: ${({ theme }) => theme.primaryColor};\r\n        color: #fff;\r\n\r\n        & svg {\r\n            fill: #fff;\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    & svg {\r\n        width: 10px;\r\n        height: 10px;\r\n    \r\n        fill: #B6B2B3;\r\n        \r\n    }\r\n`;","import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { StyledHeader, StyledHeaderWrapper } from '../../styles/components/headerStyles';\r\n\r\nconst isActive = (path, match, location) => !!(match || path === location.pathname);\r\n    \r\nfunction Header() {\r\n    \r\n    return (\r\n        <StyledHeaderWrapper>\r\n        <StyledHeader>\r\n\r\n                <h1 className=\"title\">Grade Tracker</h1>\r\n                \r\n                <div>\r\n                    <NavLink to=\"/\" exact activeClassName=\"current-link\" isActive={isActive.bind(this, '/')}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\"/></svg>                    \r\n                    Home\r\n                    </NavLink> \r\n                    <NavLink to=\"/about\"  activeClassName=\"current-link\" isActive={isActive.bind(this, '/about')}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\"/></svg>                    \r\n                    About\r\n                    </NavLink> \r\n                    <NavLink to=\"/instructions\"  activeClassName=\"current-link\" isActive={isActive.bind(this, '/instructions')}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M19 3h-4.18C14.4 1.84 13.3 1 12 1c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm2 14H7v-2h7v2zm3-4H7v-2h10v2zm0-4H7V7h10v2z\"/></svg>                    \r\n                    Instructions\r\n                    </NavLink>\r\n                    <NavLink to=\"/settings\"   activeClassName=\"current-link\" isActive={isActive.bind(this, '/settings')}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><g><path d=\"M0,0h24v24H0V0z\" fill=\"none\"/><path d=\"M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.8,11.69,4.8,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z\"/></g></svg>                    \r\n                    Settings\r\n                    </NavLink>\r\n                </div>\r\n            \r\n        </StyledHeader>\r\n        </StyledHeaderWrapper>\r\n    )\r\n}\r\n\r\n\r\nexport default Header;\r\n","import React from 'react'\r\n\r\nfunction About() {\r\n    return (\r\n        <React.Fragment>\r\n          <h1 className=\"font-large\">About</h1> \r\n          <p className=\"font-medium\">This app was created to help students manage their courses and assist when planning  what courses they will devote their study time into.</p>\r\n          <p className=\"font-medium\">v.1.0.0</p> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from 'react'\r\nimport styled from 'styled-components';\r\nimport ee from 'event-emitter';\r\n\r\nconst Container = styled.div\r\n`\r\n    background-color: ${props => props.type.backColor};\r\n    color: ${props => props.type.textColor};\r\n    padding: 10px 20px;\r\n    position: absolute;\r\n    top: ${props => props.top}px;\r\n    opacity: ${props => props.opacity};\r\n    left: 50%;\r\n    transform: translate(-50%);\r\n    border-radius: 5px;\r\n    border: 1px solid ${props => props.type.borderColor};\r\n    z-index: 999;\r\n    transition: all 0.5s ease;\r\n`;\r\n\r\nconst emitter = new ee();\r\n\r\nexport const notify = (msg, type = 'info') => {\r\n    emitter.emit('notification', msg, type);\r\n}\r\n\r\nconst types = {\r\n    warning: {borderColor: '#DD1C1A', textColor: '#DD1C1A', backColor: '#EED2CC'},\r\n    info: {borderColor: '#6B818C', textColor: '#6B818C', backColor: '#D8E4FF'},\r\n    success: {borderColor: '#57A773', textColor: '#57A773', backColor: '#A2E1CA'}\r\n}\r\n\r\nexport class Notification extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            top: -100,\r\n            msg: '',\r\n            opacity: 0,\r\n            type: 'info'\r\n        };\r\n\r\n        this.timeout = null;\r\n\r\n        emitter.on('notification', (msg, type) => {\r\n            this.onShow(msg, type);\r\n        });\r\n    }\r\n\r\n    onShow = (msg, type) => {\r\n        if (this.timeout){\r\n            clearTimeout(this.timeout);\r\n            this.setState({ top: -100, opacity: 0}, () => {\r\n                this.timeout = setTimeout(() => {\r\n                    this.showNotification(msg, type);\r\n                }, 500);\r\n            });\r\n        }else{\r\n            this.showNotification(msg, type);\r\n        }\r\n    }\r\n\r\n    showNotification = (msg, type) => {\r\n        this.setState({\r\n            top: 100,\r\n            opacity: 1,\r\n            msg,\r\n            type\r\n        }, () => {\r\n            this.timeout = setTimeout(() => {\r\n                this.setState({\r\n                    top: -100,\r\n                    opacity: 0\r\n                });\r\n            }, 3000)\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container type={types[this.state.type] || types['info']} opacity={this.state.opacity} top={this.state.top}>{this.state.msg}</Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Notification\r\n","import React from 'react'\r\n\r\nfunction Instructions() {\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"padding-left font-large font-bold\">\r\n            <h1>Instructions</h1> \r\n            </div>\r\n            <div className=\"padding-left font-medium\">\r\n            <h2>Adding a course</h2>\r\n            <p>To add a course:</p>\r\n            <ol style={listStyle}>\r\n                <li>First make sure that the term for the course exist. This can be done by clicking the 'Add a new term' button. The term number should be displayed on the left side.</li>\r\n                <li>Once the correct term exist, locate the corresponding 'add course' field for the term.</li>\r\n                <li>Enter the course code for the course in the field, and press enter or click the 'Add a new course' button.</li>\r\n                <li>If the course ws successfully added, a cell should appear with the course code in the table.</li>\r\n                <li>You can change the name, course code, and credits by edit the remaining fields then clicking 'Set changes'</li>\r\n            </ol> \r\n            </div>\r\n\r\n            <div className=\"padding-left font-medium\">\r\n            <h2>Adding/Editing prerequisites</h2>\r\n            <p>To change prerequisite courses:</p>\r\n            <ol style={listStyle}>\r\n                <li>First select a course by clicking on the 'Select' button on any one of the course cells.</li>\r\n                <li>Once a course has been selected, a panel in the bottom will open.</li>\r\n                <li>There will be a select form displaying the current prerequisites of the selected course.</li>\r\n                <li>Click anywhere in the select form to open a list of the available prerequisite courses to choose from.</li>\r\n                <strong>Note: The list of prerequisites is made up of courses that exist in previous terms of the currently selected course</strong>\r\n                <li>Select prerequisite courses by clicking on any of the course codes.</li>\r\n                <strong>Note: Once you have finished, make sure to click 'Accept changes' button at the bottom of the panel</strong>\r\n                <li>You can not only add courses, but remove and change the courses by clicking on the 'x' beside each course code.</li>\r\n\r\n      \r\n            </ol> \r\n            </div>\r\n            <div className=\"padding-left font-medium\">\r\n            <h2>Adding/Editing corequisites</h2>\r\n            <p>To change corequisites courses:</p>\r\n            <ol style={listStyle}>\r\n                <li>First select a course by clicking on the 'Select' button on any one of the course cells.</li>\r\n                <li>Once a course has been selected, a panel in the bottom will open.</li>\r\n                <li>There will be a select form displaying the current corequisites of the selected course.</li>\r\n                <li>Click anywhere in the select form to open a list of the available corequisite courses to choose from.</li>\r\n                <strong>Note: The list of corequisites is made up of courses that exist in same term as the currently selected course</strong>\r\n                <li>Select corequisite courses by clicking on any of the course codes.</li>\r\n                <strong>Note: Once you have finished, make sure to click 'Accept changes' button at the bottom of the panel</strong>\r\n                <li>You can also change and remove the courses by clicking on the 'x' beside each course code.</li>\r\n                <strong>Note: When adding/changing the corequisite for a course, you can combine two sets of corequisites but cannot combine a set with a single course. </strong>\r\n                <strong>Trying to combine a set with a single course without specifying all the courses in the set will delete the previous set and create a new set.</strong>\r\n      \r\n            </ol>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Instructions\r\n\r\n\r\nconst listStyle = {\r\n    padding: '0 5px'\r\n};","import styled from 'styled-components';\r\nimport { Button, Input } from 'reactstrap';\r\n\r\nexport const StyledInner = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 0 0%;\r\n    justify-content: center;\r\n    max-height: 89vh;\r\n`;\r\n\r\nexport const StyledInnerTop = styled.div`\r\n    background-color: ${({ theme }) => theme.bgAlt};\r\n    height: 100vh; ${'' /*  a fix */}\r\n    overflow-y: scroll;\r\n    max-height: 80%;\r\n    max-width: 100%;\r\n    border-left: 1px solid ${({ theme }) => theme.border};\r\n    border-right: 1px solid ${({ theme }) => theme.border};\r\n`;\r\n\r\nexport const StyledInnerBottomHeadItem = styled.form`\r\n    padding: 0px 15px;\r\n    border-radius: 5px;\r\n    display: flex;\r\n    align-items: center;\r\n    width: auto;\r\n    background: ${({ theme }) => theme.panelColor};\r\n    color: ${({ theme }) => theme.textColor};\r\n    height: 100%;\r\n    font-weight: 700;\r\n`;\r\n\r\nexport const StyledButton = styled.input`\r\n    display: inline-block;\r\n    border: 1px solid #9C9C9C;\r\n    background: ${({ theme }) => theme.tertiaryColor};\r\n    border-radius: 15px;\r\n    color: #fff;\r\n    padding: 2px 10px;\r\n    cursor: pointer;\r\n    height: auto;\r\n    margin: 1px 10px;\r\n`;\r\n\r\nexport const StyledInput = styled(Input)`\r\n    background: darkgrey;\r\n    border-radius: 5px;\r\n    height: auto;\r\n    width: auto;\r\n    margin: 1px 10px;\r\n`;\r\n\r\nexport const StyledInnerBottomHeadContainer = styled.div`\r\n    background: ${({ theme }) => theme.panelAlt};\r\n    border: 1px solid #EEE;\r\n    border-radius: 5px;\r\n    margin-bottom: 5px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`\r\n\r\nexport const StyledInnerBottomHead = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  & > * {\r\n    margin: 1px 5px;\r\n  }\r\n  padding: 1px;\r\n  height: 40px;\r\n  width: 100%;\r\n  background: ${({ theme }) => theme.panelAlt};\r\n  flex-wrap: wrap;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  overflow-y: scroll;\r\n  ${'' /* border-bottom: 1px solid black; */}\r\n  ${'' /* transition: height 1s ease-in; */}\r\n`;\r\n\r\nexport const StyledInnerBottomFoot = styled.div`\r\n  height: 50px;\r\n  transition: height 0.5s ease-out;\r\n  \r\n  border-radius: 0 0 15px 15px;\r\n`;\r\n\r\nexport const StyledInnerBottom = styled.div`\r\n  height: ${({ expanded }) => expanded?\"310px\":\"110px\"};\r\n  max-height: 20%;\r\n  ${'' /* border: 1px solid ${({ theme }) => theme.border}; */}\r\n  ${'' /* background: black; */}\r\n  border-radius: 0 0 15px 15px;\r\n  /* used for animation of sideview, not implemented */\r\n  transition: height 0.5s ease-out;\r\n\r\n    & ${StyledInnerBottomHead} {\r\n        height: ${({ expanded }) => expanded?\"40px\":\"40px\"};\r\n    }\r\n\r\n    & ${StyledInnerBottomFoot} {\r\n        height: ${({ expanded }) => expanded?\"250px\":\"50px\"};\r\n    }\r\n  \r\n \r\n`;\r\n\r\nexport const StyledInnerBottomWrapper = styled.div`\r\n    background-color: ${({ theme }) => theme.panelColor};\r\n    padding: 5px;\r\n    height: 100%;\r\n`;\r\n\r\n\r\n\r\nexport const StyledButtonPrimary = styled(Button)`\r\n    font-weight: 700;\r\n    border-radius: 15px;\r\n    background: ${({ theme }) => theme.primaryColor};\r\n    height: 100%;\r\n    color: #FFF;\r\n    &:hover {\r\n        background: #788;\r\n    }\r\n`;\r\n\r\nexport const StyledButtonSecondary = styled(Button)`\r\n    font-weight: 700;\r\n    border-radius:15px;\r\n    background: ${({ theme }) => theme.secondaryColor};\r\n    height: 100%;\r\n    color: #FFF;\r\n    &:hover {\r\n        background: #788;\r\n    }\r\n`;\r\n","import React from 'react';\r\nimport { StyledButtonPrimary } from '../styles/components/homeStyles';\r\nfunction SaveChanges(props) {\r\n    return (\r\n        <StyledButtonPrimary\r\n            onClick={props.onSaveClick}\r\n            style={buttonStyle}\r\n            //className=\"btn btn-save\"\r\n            type=\"button\"\r\n        >\r\n        Save the changes\r\n        </StyledButtonPrimary>\r\n    )\r\n}\r\nconst buttonStyle = {\r\n    fontSize: '1.1rem',\r\n};\r\n\r\nexport default SaveChanges;\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Input, Label } from 'reactstrap';\r\nimport { StyledInnerBottomHeadItem, StyledButton, StyledInput } from '../styles/components/homeStyles';\r\n\r\nexport class GradeFilter extends Component {\r\n        \r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            category: '2',\r\n            val: 0.0\r\n        };\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const {category, val} = this.state;\r\n        this.props.onClickFilterByCategory(category, val);\r\n    }\r\n\r\n    onChange = (e) => this.setState({[e.target.name]: e.target.value });\r\n\r\n    \r\n    render() {\r\n        return (\r\n            \r\n            <StyledInnerBottomHeadItem\r\n            onSubmit={this.onSubmit}\r\n\r\n            >\r\n                <Label style={{lineHeight: '15px', width: 'auto', alignSelf: 'center' }}>Courses with grade </Label>\r\n                <StyledInput \r\n                type=\"select\"\r\n                id=\"filter\"\r\n                name=\"category\"\r\n                onChange={this.onChange}\r\n                defaultValue={this.state.category}\r\n                >\r\n                    <option value={1}>greater than</option>\r\n                    <option value={2}>less than</option>\r\n                    <option value={3}>equal to</option>\r\n                    <option value={4}>greater than or equal to</option>\r\n                    <option value={5}>less than or equal to</option>\r\n                </StyledInput>\r\n                <StyledInput type=\"text\" onChange={this.onChange}  name=\"val\" value={this.state.value} placeholder={0.0} />\r\n                <StyledButton type=\"submit\" value=\"Filter\"/>\r\n            </StyledInnerBottomHeadItem>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n// PropTypes\r\nGradeFilter.propType = {\r\n    onClickFilterByCategory: PropTypes.func.isRequired,\r\n}\r\n\r\n\r\nexport default GradeFilter\r\n","import styled from 'styled-components';\r\nimport { Button } from 'reactstrap';\r\nimport Select from 'react-select'\r\n\r\nexport const StyledContainer = styled.div`\r\n    \r\n    background: ${({ theme }) => theme.panelAlt};\r\n    border-radius: 5px;\r\n    color: ${({ theme }) => theme.textColor};\r\n    width: 100%;\r\n    text-align: center;\r\n    border: 1px solid #EEE;   \r\n    overflow-y: scroll;\r\n    height: 100%; \r\n`;\r\n\r\nexport const StyledButtonShow = styled(Button)`\r\n    border:1px outset black;\r\n    border-radius:5px;\r\n    padding: 5px;\r\n    background: #677;\r\n    &:hover {\r\n        background: #788;\r\n    }\r\n`;\r\n\r\n\r\n\r\nexport const StyledSelect = styled(Select)`\r\n    margin: 10px 20%;\r\n    color: #000;\r\n    @media screen and (max-width: ${({ theme }) => theme.breakpoint}){\r\n        margin: 10px 10%;\r\n    }\r\n    \r\n`;\r\n\r\nexport const StyleResponsiveContainer = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    & > * {\r\n        width: 100%;\r\n        padding: 5px;\r\n    }\r\n    \r\n`;\r\n\r\nexport const StyledCanvasContainer = styled.div`\r\n      position: relative;\r\n        height: 200px;\r\n        min-height: 50%;\r\n        width: 500px;\r\n        overflow: scroll;\r\n        max-width: 100%;\r\n        max-height: 100%;\r\n        background-color: grey;\r\n        margin: auto;\r\n        text-align: left;\r\n        border-radius: 15px;\r\n        border: 2px solid black;\r\n`;\r\n\r\nexport const StyledCanvasNode = styled.div`\r\n      \r\n        position: absolute;\r\n        height: ${({radius}) => `${radius * 2}px`};\r\n        width: ${({radius}) => `${radius * 2}px`};\r\n        border: 2px solid black;\r\n        border-radius: 50%;\r\n        top: ${({y}) => `${y}px`};\r\n        left: ${({x}) => `${x}px`};\r\n        color: white;\r\n\r\n        \r\n`;","import { keyframes } from 'styled-components';\r\n\r\nexport const popin = keyframes`\r\n    0% { opacity: 0; -webkit-transform: scale(0.5); }\r\n\t80% { opacity: 0.5; -webkit-transform: scale(1.1); }\r\n\t100% { opacity: 1; -webkit-transform: scale(1); }\r\n`; \r\n\r\nexport const fadeinbottom = keyframes`\r\n    0% { opacity: 0; -webkit-transform: translateY(25%); }\r\n\t80% { opacity: 0.5; -webkit-transform: translateY(5%); }\r\n\t100% { opacity: 1; -webkit-transform: translateY(0%); }\r\n`; ","import styled from 'styled-components';\r\nimport { Table, Button } from 'reactstrap';\r\nimport { fadeinbottom } from './animations';\r\n\r\n\r\nexport const StyledMap = styled(Table)`\r\n    ${'' /* border: 8px double black; */}\r\n    background-color: ${({ theme }) => theme.bg};\r\n    color: ${({ theme }) => theme.color};\r\n    border-color: ${({ theme }) => theme.border} !important;\r\n    border-radius: 5px;\r\n`; \r\n\r\nexport const StyledFocusElement = styled.td`\r\n    position: absolute;\r\n    z-index: 3;\r\n    border-radius: 5px;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100vh;\r\n    transition: all 0.5s cubic-bezier(0.71, 0.03, 0.56, 0.85);\r\n    opacity: 0;\r\n    display: none;\r\n    pointer-events: none;\r\n    overflow: hidden;\r\n    border: 2px solid rgba(129, 255, 249, 1);\r\n    box-shadow:0 0 14px 4px ${({ theme }) => theme.selectedCourse};\r\n    &.active {\r\n        opacity: 1;\r\n        display: block;\r\n    }\r\n\r\n`;\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const StyledMapHeading = styled.th`\r\n    text-align: center;\r\n    min-width: 50px;\r\n    margin: 2px;\r\n    font-weight: 900;\r\n    max-height: 100%;\r\n    border-radius: 5px;\r\n    padding: .375rem .75rem;\r\n    font-size: 1rem;\r\n    font-weight: 400;\r\n    line-height: 1.5;\r\n    background-clip: padding-box;\r\n    border: 1px solid ${({ theme }) => theme.border} !important;\r\n    border-radius: .25rem;\r\n    & svg {\r\n        width: 20px;\r\n        height: 20px;\r\n        cursor: pointer;\r\n        path {\r\n            fill: ${({ theme, isEditing }) => isEditing?theme.button : 'grey'};\r\n        }\r\n    }\r\n    @media screen and (max-width: ${({ theme }) => theme.breakpoint}){\r\n        max-height: 70px;\r\n    }\r\n`; \r\n\r\nexport const StyledMapHead = styled.thead`\r\n    text-align: center;\r\n\r\n    ${({ stickyHeader, theme }) => stickyHeader && `\r\n        & ${StyledMapHeading}:first-of-type {\r\n            position: sticky;\r\n            left: 0;\r\n            background-color: ${theme.bg};\r\n        }\r\n    `}\r\n    \r\n`; \r\n\r\nexport const StyledMapBody = styled.tbody`\r\n    height: 100%;\r\n\r\n\r\n    ${({ stickyHeader, theme }) => stickyHeader && `\r\n        & ${StyledMapHeading} {\r\n            position: sticky;\r\n            left: 0;\r\n            z-index: 5;\r\n            background-color: ${theme.bg};\r\n        }\r\n    `}\r\n\r\n`; \r\n\r\nexport const StyledMapData = styled.td`\r\n     width: 200px;\r\n     margin: 2px;\r\n     border-radius: 5px;\r\n     border-color: ${({ theme }) => theme.border} !important;\r\n    \r\n`; \r\n\r\nexport const StyledCourseData = styled(StyledMapData)`\r\n    transition: height 0.5s ease;\r\n    height: ${({ isEditing }) => isEditing?'450px':'200px'};\r\n    animation: ${fadeinbottom} 1s ease once;\r\n`;\r\n\r\n\r\nexport const StyledMapRow = styled.tr`\r\n    display: flex;\r\n\r\n\r\n    &.selected-term th, &.selected-term td {\r\n        background-color: ${({ theme }) => theme.selectedTerm};\r\n    }\r\n\r\n    @media screen and (max-width: ${({ theme }) => theme.breakpoint}){\r\n        align-items: center;\r\n        padding: 2% 25%;\r\n        & > * {\r\n            width: 100%;\r\n        }\r\n        & > ${StyledMapHeading}:first-of-type {\r\n            background: ${({ theme }) => theme.bgAlt};\r\n            color: ${({ theme }) => theme.bg};\r\n        }\r\n    }\r\n`;\r\n\r\nexport const StyledMapRowResponsive = styled(StyledMapRow)`\r\n    \r\n        \r\n    @media screen and (max-width: ${({ theme }) => theme.breakpoint}){\r\n        width: 100%;\r\n        \r\n        flex-direction: column;\r\n        justify-content: flex-start;\r\n        ${'' /* flex-wrap: wrap; */}\r\n        ${'' /* width: 100%; */}\r\n    }\r\n`;\r\n\r\nexport const StyledTermRow = styled(StyledMapRowResponsive)`\r\n    \r\n    height: auto;\r\n    @media screen and (max-width: ${({ theme }) => theme.breakpoint}){\r\n        height: auto;\r\n        \r\n    }\r\n`;\r\n\r\nexport const StyledButton = styled(Button)`\r\n    \r\n    display: inline-block;\r\n    border: 1px solid black;\r\n    background: ${({ theme }) => theme.button};\r\n    color: #fff;\r\n    padding: 7px 20px;\r\n    cursor: pointer;\r\n    &:hover {\r\n        background: ${({ theme }) => theme.buttonHover};\r\n    }\r\n    &:hover, &:active, &:focus, &:target { \r\n        background: ${({ theme }) => theme.buttonHover};\r\n        border-color: black;\r\n        box-shadow: none;\r\n    }\r\n    \r\n`;\r\n\r\nexport const StyledButtonAdd = styled(StyledButton)`\r\n    ${'' /* &:hover {\r\n        background: rgb(130, 230, 210);\r\n    } */}\r\n`;\r\n\r\nexport const StyledButtonDelete = styled(StyledButton)`\r\n    ${'' /* &:hover {\r\n        background: rgb(247, 154, 154);\r\n    } */}\r\n`;\r\n\r\nexport const StyledButtonSave = styled(StyledButton)`\r\n    ${'' /* &:hover {\r\n        background: rgb(180, 200, 200);\r\n    } */}\r\n`;\r\n\r\nexport const StyledButtonReset = styled(StyledButton)`\r\n    ${'' /* &:hover {\r\n        background: rgb(228, 27, 27);\r\n    } */}\r\n`;\r\n\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { StyledButtonShow, StyledSelect, StyledContainer, StyleResponsiveContainer } from '../styles/components/sideviewStyles';\r\nimport { StyledButtonSave } from '../styles/components/programmapStyles';\r\n// import Progression from './Progression';\r\n\r\n\r\nfunction SideView ({\r\n    sendNotification,\r\n    selectedCourse,\r\n    selectedTerm,\r\n    handleClickEditPrereq,\r\n    handleClickEditCoreq,\r\n    prereq, \r\n    coreq, \r\n    courses,\r\n    handleClickShowPrereq,\r\n    handleClickShowCoreq\r\n}) {\r\n\r\n    \r\n    const [state, setState] = useState({\r\n        prereqCourses: [],\r\n        coreqCourses:[]\r\n    });\r\n\r\n    \r\n    // New onChange(for 'react-select' component)\r\n    const onChange = (value, { name, action, removedValue }) => {\r\n        switch (action) {\r\n          case 'remove-value':\r\n            break;\r\n          case 'pop-value':\r\n            break;\r\n          case 'clear':\r\n            break;\r\n            default:\r\n        }\r\n        \r\n        setState({ \r\n            ...state,\r\n            [name]: value \r\n        });\r\n    }\r\n\r\n    // Transforms a course into a format used by 'react-select'\r\n    const getSelectOption = (course) => {\r\n        return {value: course.code, label: course.code };\r\n    }\r\n    // Transforms from 'react-select' option format to course code\r\n    const getValueFromSelectOption = (option) => {\r\n        return option.value;\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        // Notify the user that their changes have been set\r\n        sendNotification(\"Changes set\");\r\n        \r\n        // New onSubmit code\r\n        // must extract the value from the react-select components\r\n        const code = selectedCourse.code;\r\n        console.log(\"submitted\");\r\n        \r\n        let pC = state.prereqCourses || [];\r\n\r\n\r\n        console.log(\"prereq\");\r\n        const prs = pC.map(option => getValueFromSelectOption(option));\r\n        console.log(prs);\r\n        handleClickEditPrereq(code, prs);\r\n        \r\n\r\n        let cC = state.coreqCourses || [];\r\n\r\n        console.log(\"coreq\");\r\n        const crs = cC.map(option => getValueFromSelectOption(option));\r\n        \r\n        console.log(crs);\r\n        handleClickEditCoreq(code, crs);\r\n        //forceUpdate();\r\n\r\n        // Somehow the Progression child Component only recieves \r\n        // props and then rerenders when \r\n        // state changes locally in this component\r\n        setState({...state});\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        updateState();\r\n    }, [ prereq, coreq, courses, selectedCourse, selectedTerm]);\r\n    \r\n\r\n\r\n    \r\n\r\n    const updateState = () => {\r\n\r\n        if (!selectedCourse) return;\r\n\r\n        let selectedPrereqList = prereq[selectedCourse.code];\r\n        if (!selectedPrereqList){\r\n            selectedPrereqList = [];\r\n        }\r\n\r\n        console.log(\"selectedPrereqList\");\r\n        console.log(selectedPrereqList);\r\n        \r\n        let selectPrereq = courses.slice(0, selectedTerm);\r\n        let selectOptionsPrereq = [].concat.apply([], selectPrereq); // flatten the 2d array\r\n        \r\n        // get the full course details of the courses that are prereq\r\n        selectOptionsPrereq = selectOptionsPrereq\r\n        .filter(course => {\r\n            return course.code !== selectedCourse.code && selectedPrereqList.includes(course.code);\r\n        });\r\n        \r\n\r\n\r\n        let selectedCoreqIndex = coreq\r\n        .findIndex(cl => (cl.findIndex(c => c === selectedCourse.code) >= 0));\r\n        \r\n\r\n        let selectedCoreqList;\r\n        if (selectedCoreqIndex < 0){\r\n            selectedCoreqList = [];\r\n        }else{\r\n            selectedCoreqList = coreq[selectedCoreqIndex];\r\n        }\r\n\r\n        console.log(\"selectedCoreqList\");\r\n        console.log(selectedCoreqList);\r\n\r\n        \r\n        // get the full course details of the courses that are coreq\r\n        console.log(selectedTerm);\r\n        let selectOptionsCoreq = courses[selectedTerm];\r\n        if (selectOptionsCoreq == null){\r\n            selectOptionsCoreq = [];\r\n        }\r\n        selectOptionsCoreq = selectOptionsCoreq\r\n        .filter(course => {\r\n            return course.code !== selectedCourse.code && selectedCoreqList.includes(course.code) ;\r\n        });\r\n        \r\n\r\n        \r\n        setState({\r\n            ...state,\r\n            prereqCourses: selectOptionsPrereq.map(c => getSelectOption(c)),\r\n            coreqCourses: selectOptionsCoreq.map(c => getSelectOption(c)),\r\n        });\r\n        \r\n            \r\n        \r\n    }\r\n\r\n\r\n\r\n        const shouldShow = (selectedCourse !== null);\r\n        \r\n        if (!shouldShow){\r\n            return (\r\n                <StyledContainer>\r\n                    <h2>Course Details</h2>\r\n                    <p>You must select a course first</p>\r\n                    \r\n                </StyledContainer>\r\n            );\r\n        }\r\n        \r\n        \r\n\r\n\r\n    \r\n\r\n        // get the available options for the prereq courses\r\n        let selectPrereq = courses.slice(0, selectedTerm);\r\n        let selectOptionsPrereq = [].concat.apply([], selectPrereq); // flatten the 2d array\r\n        \r\n        selectOptionsPrereq = selectOptionsPrereq\r\n        .map((course) =>{\r\n            return getSelectOption(course);\r\n        });\r\n        \r\n        \r\n\r\n\r\n        // get the available options for the coreq courses\r\n        let selectOptionsCoreq = courses[selectedTerm];\r\n        \r\n        if (selectOptionsCoreq == null){\r\n            selectOptionsCoreq = [];\r\n        }\r\n        selectOptionsCoreq = selectOptionsCoreq\r\n        .filter(course => {\r\n            return course.code !== selectedCourse.code;\r\n        })\r\n        .map(course =>{\r\n            return getSelectOption(course);\r\n        });\r\n        \r\n\r\n\r\n       \r\n        const form = \r\n                <form\r\n                onSubmit={onSubmit}\r\n                sytle={formStyle}\r\n                className=\"sideViewForm\"\r\n                >\r\n                    \r\n                    \r\n                    <div>\r\n                        <label>Prerequisites</label>\r\n                        <br/>\r\n                        <StyledButtonShow\r\n                            style={buttonShowStyle}\r\n                            type=\"button\"\r\n                            onClick={handleClickShowPrereq.bind(this, selectedCourse.code)}\r\n                        >Highlight Pre-requisites</StyledButtonShow>\r\n                        <StyledSelect \r\n                            \r\n                            styles={customStyles}\r\n                            onChange={onChange}\r\n                            name=\"prereqCourses\"\r\n                            isMulti \r\n                            options={selectOptionsPrereq}\r\n                            value={state.prereqCourses}\r\n                        />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label>Corequisites</label>\r\n                        <br/>\r\n                        <StyledButtonShow \r\n                            style={buttonShowStyle}\r\n                            type=\"button\"\r\n                            onClick={handleClickShowCoreq.bind(this, selectedCourse.code)}\r\n                        >Highlight Co-requisites</StyledButtonShow>\r\n                        <StyledSelect \r\n                            \r\n                            styles={customStyles}\r\n                            onChange={onChange}\r\n                            name=\"coreqCourses\"\r\n                            isMulti \r\n                            options={selectOptionsCoreq}\r\n                            value={state.coreqCourses}\r\n                        />\r\n                    </div>\r\n                \r\n                    <div style={{textAlign:'center', fontWeight:'bold'}}>\r\n                        Remember to click accept changes after making changes\r\n                    </div>\r\n\r\n   \r\n                    <StyledButtonSave type=\"submit\">Accept Changes</StyledButtonSave>\r\n  \r\n                         \r\n                </form>\r\n                ;\r\n\r\n\r\n\r\n\r\n        return (\r\n            <StyledContainer>\r\n                \r\n                <h2>Course Details</h2>\r\n                <h3>For course: {selectedCourse.code}</h3>\r\n                    \r\n                <StyleResponsiveContainer>\r\n                    {form}\r\n                    {/* <Progression\r\n                            prereq={prereq}\r\n                            selectedCourse={selectedCourse}\r\n                    />   */}\r\n                </StyleResponsiveContainer>\r\n            </StyledContainer>\r\n        );\r\n        \r\n    \r\n}   \r\n\r\n\r\n// PropTypes\r\nSideView.propType = {\r\n    sendNotification: PropTypes.func.isRequired,\r\n    handleClickEditCourse: PropTypes.func.isRequired,\r\n    courses: PropTypes.array.isRequired,\r\n    selectedTerm: PropTypes.number.isRequired,\r\n    selectedCourse: PropTypes.object.isRequired,\r\n    prereq: PropTypes.array.isRequired,\r\n    coreq: PropTypes.array.isRequired,\r\n    handleClickEditPrereq: PropTypes.func.isRequired,\r\n    handleClickEditCoreq: PropTypes.func.isRequired,\r\n}\r\n\r\n// const sideViewStyle = {\r\n//     background: 'lightgrey',\r\n//     width: '100%',\r\n//     textAlign: 'center',\r\n//     border: '2px solid grey',    \r\n//     overflowY: 'scroll',\r\n//     height: '100%', \r\n// }\r\n\r\nconst buttonShowStyle = {\r\n    \r\n}\r\n\r\n\r\nconst formStyle = {\r\n    border: 'none',\r\n    margin: '0 auto',\r\n}\r\n\r\n// Custom style for 'react-select', uses Emotion JS\r\nconst customStyles = {\r\n    container: (provided, state) => ({\r\n        ...provided,\r\n        // none of react-select's styles are passed to <Control />\r\n        \r\n      }),\r\n\r\n      control: (provided, state) => ({\r\n        ...provided,\r\n        overflowY: 'scroll',\r\n        height: 30,\r\n        boxShadow: state.isFocused? '0 0 0 1px #16123a': 'none',\r\n        //borderColor: state.isFocused || state.isSelected || state.isActive ? '#3CB371': 'transparent',\r\n        //boxShadow: state.isFocused || state.isSelected || state.isActive ? '0 0 0 .2rem rgba(60,179,113, 0.2)': 'none',\r\n        //outline: state.isFocused || state.isSelected ||  state.isActive ? '1px solid rgba(60,179,113, 0.2)': 'none',\r\n    }),\r\n      input: (provided, state) => ({\r\n          ...provided,\r\n      })\r\n\r\n\r\n}\r\n\r\n\r\nexport default SideView\r\n","import React from 'react'\r\nimport { StyledButtonSecondary } from '../styles/components/homeStyles';\r\nfunction ResetChanges(props) {\r\n    return (\r\n        <StyledButtonSecondary\r\n            type=\"button\"\r\n            onClick={props.onResetClick}\r\n            style={buttonStyle}\r\n            //className=\"btn btn-reset\"\r\n            //value=\"Reset the changes\"\r\n        >\r\n        Reset the changes\r\n        </StyledButtonSecondary>\r\n    )\r\n}\r\nconst buttonStyle = {\r\n    fontSize: '1.1rem',\r\n};\r\n\r\nexport default ResetChanges;\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Input, Label } from 'reactstrap';\r\n//import * as AllActionsCreators from '../redux/index';\r\nimport { StyledInnerBottomHeadItem, StyledButton, StyledInput } from '../styles/components/homeStyles';\r\n\r\nexport class CGPACalculator extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            term: this.props.courses.length, // last term\r\n            CGPA: 0,\r\n            type: 'up to'\r\n        };\r\n    }\r\n\r\n    convertNumericToGradePoint = (numericGrade, GPAStops) => {\r\n        let gradepoint = 0;\r\n        GPAStops.forEach(stop => {\r\n            //console.log(stop.lower, stop.upper, stop.gradepoint);\r\n            if (numericGrade >= stop.lower && numericGrade <= stop.upper){\r\n                gradepoint = stop.gradepoint;\r\n            }\r\n        });\r\n        return gradepoint;\r\n\r\n    }\r\n\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { courses, schools, currentSchool } = this.props;\r\n        const { term, type } = this.state;\r\n        if (term > -1){\r\n            let allcourses = [];\r\n            if (type === 'up to'){\r\n                allcourses = courses.slice(0, term);\r\n                allcourses = [].concat.apply([], allcourses); // flatten the 2d array\r\n            }else if (type === 'at'){\r\n                allcourses = courses[term - 1];\r\n            }\r\n            if (schools[currentSchool] && schools[currentSchool].length !== 0){\r\n                let GPAStops = schools[currentSchool];\r\n                GPAStops = GPAStops.sort((a, b) => b.upper - a.upper);\r\n        \r\n                // convert numeric grades to grade points\r\n                allcourses = allcourses.map(course => ({grade: this.convertNumericToGradePoint(course.grade, GPAStops), credits: course.credits}));\r\n            }\r\n\r\n            console.log(allcourses);\r\n            let totalPoints = allcourses.reduce((prev, curr) => prev + curr.grade * curr.credits, 0);\r\n            let totalCredits = allcourses.reduce((prev, curr) => prev + curr.credits, 0);\r\n            if (totalCredits === 0) totalCredits = 1; // to prevent divide by 0\r\n            this.setState({\r\n                CGPA: Math.round(totalPoints/ totalCredits* 100) / 100,\r\n            });\r\n        }else{\r\n            this.setState({\r\n                CGPA: 0\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = (e) => this.setState({[e.target.name]: e.target.value, CGPA: 0 });\r\n\r\n    \r\n    render() {\r\n\r\n        const { courses, currentSchool, schools } = this.props;\r\n        const { term } = this.state;\r\n\r\n        const options = courses.map((cList, index) => {\r\n            return <option key={index+1} value={index + 1}>{index + 1}</option>;\r\n        });\r\n        options.unshift(\r\n            <option key={-1} value={-1}>Choose an option</option>\r\n        );\r\n\r\n\r\n        return (\r\n            \r\n            <StyledInnerBottomHeadItem\r\n            onSubmit={this.onSubmit}\r\n            >\r\n                <Label>Using {!schools[currentSchool] ||schools[currentSchool].length === 0? 'no grade point conversion': currentSchool + '\\'s grade point conversion'}, </Label>\r\n                <Label style={{width: 'auto' }}>GPA of the courses|</Label>\r\n                {' '}\r\n                <Label><input type=\"radio\" name=\"type\" value=\"up to\" onChange={this.onChange} checked={this.state.type === 'up to'} /> up to </Label>{' '} \r\n                {' '}\r\n                <Label><input type=\"radio\" name=\"type\" value=\"at\" onChange={this.onChange} checked={this.state.type === 'at'} /> at </Label>{' '}\r\n                {' '}\r\n                <Label>|term:</Label>\r\n                \r\n                <StyledInput type=\"select\" id=\"exampleSelect\" \r\n                name=\"term\"\r\n                onChange={this.onChange}\r\n                defaultValue={term}\r\n                >\r\n                    {options}\r\n                </StyledInput>\r\n                \r\n                <StyledButton type=\"submit\" value=\"Calculate\"/>\r\n                \r\n                <Label style={{width: 'auto' }}>{(this.state.type === 'up to' ? 'CGPA': 'GPA')}: {this.state.CGPA}</Label>\r\n            </StyledInnerBottomHeadItem>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n// PropTypes\r\nCGPACalculator.propType = {\r\n    courses: PropTypes.array.isRequired,\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      schools: state.settings.schools,\r\n      currentSchool: state.settings.currentSchool,\r\n    }\r\n  }\r\n  \r\n  \r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n    }\r\n  }\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(CGPACalculator);\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { addCourse } from '../redux'\r\nimport { connect } from 'react-redux';\r\nimport { Form, Label, Input } from 'reactstrap';\r\nimport { StyledButtonAdd } from '../styles/components/programmapStyles';\r\n\r\nexport class AddCourse extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            courseCode: '',\r\n            message:'Enter the course code'\r\n        }\r\n    }\r\n\r\n    performValidation = (courseCode) => {\r\n            courseCode = courseCode.trim();\r\n            if (!courseCode){\r\n                return 2;\r\n            }\r\n            let termList = this.props.courses.slice();\r\n            let courseCodeFound = termList\r\n                .find(courseList => courseList\r\n                .find(course => course.code === courseCode) !== undefined);\r\n\r\n            if (courseCodeFound){\r\n                return 1;\r\n            }\r\n            return 0;\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (!this.state.courseCode){\r\n            this.setState({\r\n                message: \"Must enter course code\"\r\n            });\r\n        }else{\r\n            let successCode = this.performValidation(this.state.courseCode);\r\n            \r\n            switch(successCode){\r\n                case 0:\r\n                    this.props.addCourse(this.props.term,this.state.courseCode);\r\n                    break;\r\n                case 1:\r\n                    this.setState({message: 'Course code already exist'});\r\n                    break;\r\n                case 2:\r\n                    this.setState({message: 'Invalid course code'});\r\n                    break;\r\n                default:\r\n                    this.setState({message:'Enter the course code'});\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    onChange = (e) => this.setState({[e.target.name]: e.target.value });\r\n\r\n    render() {\r\n        \r\n        return (\r\n      \r\n            <Form\r\n            onSubmit={this.onSubmit}\r\n            style={addCourseStyle}\r\n            >\r\n            <Label for=\"addCourseInput\">{this.state.message}</Label>\r\n                <Input \r\n                    id=\"addCourseInput\"\r\n                    style={inputStyle}\r\n                    type=\"text\"\r\n                    name=\"courseCode\"\r\n                    placeholder=\"Course Code Here...\"\r\n                    value={this.state.courseCode}\r\n                    onChange={this.onChange}\r\n\r\n                />\r\n                <StyledButtonAdd \r\n                    style={buttonStyle}\r\n                    type=\"submit\"\r\n                 >Add a new course (+)</StyledButtonAdd>\r\n            </Form>\r\n        \r\n        )\r\n    }\r\n}\r\n\r\n\r\n// PropTypes\r\nAddCourse.propType = {\r\n    handleClickAddCourse: PropTypes.func.isRequired,\r\n    term: PropTypes.number.isRequired,\r\n}\r\n\r\n\r\nconst addCourseStyle = {\r\n    display:'flex', \r\n    flexDirection:'column',\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n    justifyContent: 'center',\r\n    height: 'auto',\r\n    paddingTop: '25%',\r\n    width: '100%',\r\n}\r\n\r\nconst buttonStyle = {\r\n    marginTop:'2px',\r\n    // borderRadius: '5px',\r\n}\r\n\r\nconst inputStyle = {\r\n    marginTop:'2px',\r\n    // borderRadius: '5px',\r\n    // padding:'2px 4px',\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      courses: state.courses.courses\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      addCourse: (term, courseCode) => dispatch(addCourse(term, courseCode))\r\n    }\r\n  }\r\n\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AddCourse)\r\n","  \r\nexport default class CourseClass {\r\n    constructor(name, code, grade, credits){\r\n        this.name = name;\r\n        this.code = code;\r\n        this.grade = grade;\r\n        this.credits = credits;\r\n    }\r\n\r\n  static EmptyCourse()\r\n  {\r\n      return new CourseClass('NA', 'NA', 0.0, 1.0);\r\n  }\r\n};","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport composeRefs from '@seznam/compose-react-refs'\r\n\r\nimport CourseClass from './model/CourseClass';\r\nimport { FormGroup, Label, Input } from 'reactstrap';\r\nimport { StyledCourseData , StyledButtonDelete, StyledButton, StyledButtonSave } from '../styles/components/programmapStyles';\r\n\r\n\r\nexport class Course extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            courseName: this.props.course.name,\r\n            grade: this.props.course.grade,\r\n            credits:this.props.course.credits,\r\n            message: 'Messages here',\r\n        }\r\n        this.theContainer = React.createRef();\r\n        this.theForm = React.createRef();\r\n        this.timeout = null;\r\n    }\r\n\r\n    performValidation = (editedCourse) => {\r\n        editedCourse.grade = Number(editedCourse.grade);\r\n        editedCourse.credits = Number(editedCourse.credits);\r\n        if (isNaN(editedCourse.grade)){\r\n            return 1;\r\n        }\r\n        if (isNaN(editedCourse.credits)){\r\n            return 2;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    \r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        let editedCourse = \r\n        new CourseClass(this.state.courseName, this.props.course.code, this.state.grade, this.state.credits);\r\n        \r\n        let successCode = this.performValidation(editedCourse);\r\n        switch(successCode){\r\n            case 0:\r\n                editedCourse.grade = Number(editedCourse.grade);\r\n                editedCourse.credits = Number(editedCourse.credits);\r\n                this.props.handleClickEditCourse(this.props.term, editedCourse);\r\n                this.setState({message: 'Messages here'});\r\n                break;\r\n            case 1:\r\n                this.setState({message: 'grade must be a number'});\r\n                break;\r\n            case 2:\r\n                this.setState({message: 'credits must be a number'});\r\n                break;\r\n            default:\r\n                this.setState({message: 'Messages here'});\r\n\r\n        }\r\n    }\r\n\r\n    onChange = (e) => this.setState({[e.target.name]: e.target.value });\r\n\r\n    onSelect = (e) => {\r\n        \r\n        if(this.theContainer.current && !this.props.isSelected){\r\n            if (this.timeout)\r\n                clearTimeout(this.timeout);\r\n\r\n            this.timeout = setTimeout(() => {\r\n                //console.log(this);\r\n                // set the focus on the container element after the select button is cliked\r\n                // and setTimeout performs this after css removes the container from view\r\n                this.theContainer.current.focus();\r\n                this.theContainer.current.scrollIntoView({behavior: \"smooth\", block: \"start\", inline: \"nearest\"});\r\n            }, 500); // 2sec is the transition\r\n            //alert(this.selectButton);\r\n        }\r\n        this.props.handleClickSelectCourse(this.props.course.code);\r\n\r\n        this.props.toggleFocus(this.theContainer, this.props.course);\r\n\r\n    }\r\n\r\n    render(){\r\n        const { termIndex, courseIndex, isEditing } = this.props;\r\n       const {code, name, grade, credits} = this.props.course;\r\n        let appliedclasses = \"course\";\r\n        appliedclasses += this.props.isHighlighted? \" highlighted\" : \"\";\r\n        appliedclasses += this.props.isSelected? \" selected \" : \"\";\r\n        return(\r\n       <Draggable\r\n            draggableId={`draggable-${code}`}\r\n            index={courseIndex}\r\n       >\r\n       {(provided, snapshot) => (\r\n       <StyledCourseData \r\n                className=\"course\"\r\n                isEditing={isEditing}\r\n                ref={composeRefs(provided.innerRef, this.theContainer)}\r\n                {...provided.draggableProps}\r\n                \r\n            >\r\n            <form\r\n            onSubmit={this.onSubmit}\r\n            style={courseStyle}\r\n            className={appliedclasses}\r\n            ref={this.theForm}\r\n            >\r\n            \r\n                <span\r\n                    className=\"dragholder\" \r\n                    style={dragholder}\r\n                    {...provided.dragHandleProps}\r\n                >\r\n                \r\n                </span>\r\n                {(isEditing && (\r\n                <Label style={{alignSelf:'center'}}>\r\n                    {this.state.message}\r\n                </Label>))}\r\n                <FormGroup>\r\n                    <span>\r\n                    <Label>Course Code:</Label>{' '}\r\n                    {code}\r\n                    </span>\r\n                    <br />\r\n                    <span>\r\n                    <Label>Name:</Label>{' '}\r\n                    {name}\r\n                    </span>\r\n                    \r\n                    <br /> \r\n                    {(isEditing && (\r\n                    <span>\r\n                    <Label for=\"newNameInput\">New Name:</Label>{' '}\r\n                    <Input \r\n                        id=\"newNameInput\"\r\n                        style={inputStyle}\r\n                        type=\"text\"\r\n                        name=\"courseName\"\r\n                        value={this.state.courseName}\r\n                        onChange={this.onChange}\r\n                    />\r\n                    </span>))}\r\n                    <br />\r\n                    <span>\r\n                    <Label>Grade:</Label>{' '}\r\n                    {grade}\r\n                    </span>\r\n                    <br />\r\n                    {(isEditing && (\r\n                    <span>\r\n                    <Label for=\"newGradeInput\">New Grade:</Label>{' '}\r\n                    <Input \r\n                        id=\"newGradeInput\"\r\n                        style={inputStyle}\r\n                        type=\"text\"\r\n                        name=\"grade\"\r\n                        value={this.state.grade}\r\n                        onChange={this.onChange}\r\n                    />\r\n                    </span>))}\r\n                    <br />\r\n                    <span>\r\n                    <Label>Credits/Units:</Label>{' '}\r\n                    {credits}\r\n                    </span>\r\n                    <br />\r\n                    {(isEditing && (<span>\r\n                    <Label for=\"newCreditInput\">New Credits:</Label>{' '}\r\n                    <Input \r\n                        id=\"newCreditInput\"\r\n                        style={inputStyle}\r\n                        type=\"text\"\r\n                        name=\"credits\"\r\n                        value={this.state.credits}\r\n                        onChange={this.onChange}\r\n                    />\r\n                    </span>))}\r\n                </FormGroup>\r\n                <StyledButton \r\n                    style={buttonStyle}\r\n                    type=\"button\"\r\n                    onClick={\r\n                        this.onSelect\r\n                    }\r\n                >{this.props.isSelected?\"Deselect\":\"Select\"}</StyledButton>\r\n                {(isEditing && (<StyledButtonSave \r\n                    style={buttonStyle}\r\n                    type=\"submit\"\r\n                >Set changes</StyledButtonSave>))}\r\n                {(isEditing && (\r\n                <StyledButtonDelete \r\n                    style={buttonStyle}\r\n                    type=\"button\"\r\n                    onClick={\r\n                        this.props.handleClickDeleteCourse.bind(this,this.props.term, this.props.course.code)\r\n                    }\r\n                >Delete(-)</StyledButtonDelete>))}\r\n                \r\n            </form>\r\n        </StyledCourseData>\r\n        )}\r\n        </Draggable>\r\n       )\r\n\r\n         \r\n\r\n    }\r\n}\r\n\r\n\r\n// PropTypes\r\nCourse.propType = {\r\n    handleClickEditCourse: PropTypes.func.isRequired,\r\n    course: PropTypes.instanceOf(CourseClass).isRequired,\r\n    term: PropTypes.number.isRequired,\r\n    isSelected: PropTypes.bool.isRequired,\r\n    handleClickDeleteCourse: PropTypes.func.isRequired,\r\n    handleClickSelectCourse: PropTypes.func.isRequired,\r\n    isHighlighted: PropTypes.bool.isRequired,\r\n}\r\nconst dragholder = {\r\n    width: '100%',\r\n    background: 'lightgrey',\r\n    height: '15px',\r\n    borderRadius: '3px',\r\n    cursor: 'grab',\r\n    border: '1px solid black'\r\n}\r\n\r\nconst inputStyle = {\r\n    width: '100%',\r\n    background: 'lightgrey',\r\n    borderRadius: '5px',\r\n    padding:'2px 4px',\r\n}\r\n\r\nconst courseStyle = {\r\n    display:'flex', \r\n    flexDirection:'column',\r\n    justifyContent: 'space-between',\r\n    overflow: 'hidden',\r\n    borderRadius: '5px',\r\n    fontWeight: 'bold',\r\n    height: '100%',\r\n    width: '100%',\r\n    padding: '5px', \r\n};\r\n\r\nconst buttonStyle = {\r\n    marginTop:'2px',\r\n    borderRadius: '5px',\r\n}\r\n\r\nexport default Course","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\nimport { changeStyle, clearSelected } from '../redux/index';\r\n//import { outlineElementStyle } from '../redux/focus/focusActions'\r\nimport AddCourse from './AddCourse';\r\nimport Course from './Course';\r\nimport { \r\n    StyledTermRow,\r\n    StyledMapHeading,\r\n    StyledMapData\r\n} from '../styles/components/programmapStyles';\r\n\r\nexport const Term = ({\r\n    isSelected,\r\n    termNumber, \r\n    courseList, \r\n    filteredCourses, \r\n    selectedCourse, \r\n    handleClickEditCourse, \r\n    handleClickDeleteCourse, \r\n    handleClickSelectCourse, \r\n    handleClickAddCourse,\r\n\r\n    \r\n\r\n    // focus\r\n    toggleFocus\r\n\r\n}) => {\r\n\r\n        const [editing, setEditing] = useState(false);\r\n        const dispatch = useDispatch();\r\n        //const { currentFocusedElm, style } = useSelector(state => state.focus);\r\n        \r\n        \r\n        const index = termNumber;\r\n        const termDisplay = \r\n        (<StyledMapHeading \r\n            key={index + \"x\" + -1} \r\n            style={termDisplayStyle}\r\n            isEditing={editing}\r\n        >\r\n            {index + 1}\r\n            <br />\r\n            <svg \r\n                className=\"svg-icon\" \r\n                viewBox=\"0 0 20 20\"\r\n                onClick={() => {\r\n                    \r\n                    setEditing(!editing);\r\n                    \r\n                    // Give the UI time to update then readjust the focus element after\r\n                    setTimeout(() =>\r\n                        dispatch(changeStyle())\r\n                    , 500)\r\n                }}\r\n            >\r\n                <path fill=\"none\" d=\"M19.404,6.65l-5.998-5.996c-0.292-0.292-0.765-0.292-1.056,0l-2.22,2.22l-8.311,8.313l-0.003,0.001v0.003l-0.161,0.161c-0.114,0.112-0.187,0.258-0.21,0.417l-1.059,7.051c-0.035,0.233,0.044,0.47,0.21,0.639c0.143,0.14,0.333,0.219,0.528,0.219c0.038,0,0.073-0.003,0.111-0.009l7.054-1.055c0.158-0.025,0.306-0.098,0.417-0.211l8.478-8.476l2.22-2.22C19.695,7.414,19.695,6.941,19.404,6.65z M8.341,16.656l-0.989-0.99l7.258-7.258l0.989,0.99L8.341,16.656z M2.332,15.919l0.411-2.748l4.143,4.143l-2.748,0.41L2.332,15.919z M13.554,7.351L6.296,14.61l-0.849-0.848l7.259-7.258l0.423,0.424L13.554,7.351zM10.658,4.457l0.992,0.99l-7.259,7.258L3.4,11.715L10.658,4.457z M16.656,8.342l-1.517-1.517V6.823h-0.003l-0.951-0.951l-2.471-2.471l1.164-1.164l4.942,4.94L16.656,8.342z\"></path>\r\n            </svg>\r\n        </StyledMapHeading>);\r\n        const coursesDisplay = \r\n        courseList.map((val, ind) => {\r\n                        \r\n            const isHighlightedCourse = (filteredCourses.find(val1 => \r\n                (val1.code === val.code)) !== undefined);            \r\n\r\n            const isSelectedCourse = selectedCourse && selectedCourse.code === val.code;\r\n                \r\n            \r\n            return (<Course \r\n                        key={val.code}\r\n                        \r\n                        \r\n                        termIndex={index}\r\n                        courseIndex={ind}\r\n\r\n                        toggleFocus={toggleFocus}\r\n                        \r\n                        term={index}\r\n                        handleClickEditCourse={handleClickEditCourse}\r\n                        handleClickDeleteCourse={handleClickDeleteCourse}\r\n                        handleClickSelectCourse={handleClickSelectCourse}\r\n                        course={val}\r\n                        isSelected={isSelectedCourse}\r\n                        isHighlighted={isHighlightedCourse}\r\n                        isEditing={editing}\r\n                    />);\r\n        });\r\n        const newCourseButtonDisplay = (\r\n        <StyledMapData key={index + \"x\" + (coursesDisplay.length + 1)}>\r\n            <AddCourse \r\n                term={termNumber}\r\n                handleClickAddCourse={handleClickAddCourse}\r\n            />\r\n        </StyledMapData>);\r\n\r\n        return (\r\n        <Droppable \r\n            droppableId={`${index}`}\r\n            direction={'horizontal'}\r\n        >\r\n        {(provided, _ ) => (\r\n        <StyledTermRow\r\n                    ref={provided.innerRef}\r\n                    {...provided.droppableProps}\r\n                    //onDragEnter={isDragging && !courseList.length?(e) => handleDragEnter(e, {termI: index, courseI: 0}):null}\r\n                    className={isSelected?\"selected-term\":\"\"}\r\n                    scope=\"row\"\r\n        \r\n                >\r\n                    {termDisplay}\r\n                    \r\n                            \r\n                    {coursesDisplay}\r\n                    {provided.placeholder}\r\n                    {newCourseButtonDisplay}\r\n                </StyledTermRow>\r\n                )}\r\n        </Droppable>\r\n                );\r\n    \r\n}\r\n\r\n\r\n\r\n\r\n// PropTypes\r\nTerm.propType = {\r\n    courseList: PropTypes.array.isRequired,\r\n    termNumber: PropTypes.number.isRequired,\r\n    handleClickAddCourse: PropTypes.func.isRequired,\r\n    handleClickEditCourse: PropTypes.func.isRequired,\r\n    handleClickDeleteCourse: PropTypes.func.isRequired,\r\n    handleClickSelectCourse: PropTypes.func.isRequired,\r\n    selectedCourse: PropTypes.object.isRequired,\r\n    filteredCourses: PropTypes.array.isRequired,\r\n}\r\n\r\nconst termDisplayStyle = {\r\n    textAlign:'center'\r\n};\r\n\r\nexport default Term\r\n","import PropTypes from 'prop-types';\r\nimport React, { Component } from 'react'\r\nimport { StyledButtonAdd } from '../styles/components/programmapStyles';\r\n\r\n\r\nexport class AddTerm extends Component {\r\n    render() {\r\n        return (\r\n            \r\n        <StyledButtonAdd \r\n        type=\"button\" \r\n        onClick={this.props.handleClickAddTerm} \r\n        style={addNewTermStyle}\r\n        >\r\n            Add a new term\r\n        </StyledButtonAdd>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n// PropTypes\r\nAddTerm.propType = {\r\n    termNumber: PropTypes.number.isRequired,\r\n    handleClickAddTerm: PropTypes.func.isRequired,\r\n}\r\n\r\nconst addNewTermStyle = {\r\n    width:'100%',\r\n};\r\n\r\n\r\nexport default  AddTerm;","import PropTypes from 'prop-types';\r\nimport React, { Component } from 'react'\r\nimport { removeTerm } from '../redux'\r\nimport { connect } from 'react-redux';\r\nimport { StyledButtonDelete } from '../styles/components/programmapStyles';\r\n\r\nexport class RemoveTerm extends Component {\r\n    handleClick = () => {\r\n        if (this.props.courses.length <= 1){\r\n            return;\r\n        }\r\n     \r\n        //TODO: Should perform the delete function on each course in the term\r\n        this.props.removeTerm();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            \r\n        <StyledButtonDelete \r\n        type=\"button\" \r\n        onClick={this.handleClick} \r\n        style={removeTermStyle}\r\n        >\r\n            Remove the last term\r\n        </StyledButtonDelete>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n// PropTypes\r\nRemoveTerm.propType = {\r\n    termNumber: PropTypes.number.isRequired,\r\n    handleClickRemoveTerm: PropTypes.func.isRequired,\r\n}\r\n\r\nconst removeTermStyle = {\r\n    width:'100%',\r\n};\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      courses: state.courses.courses\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      removeTerm: () => dispatch(removeTerm())\r\n    }\r\n  }\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(RemoveTerm);","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { DragDropContext } from 'react-beautiful-dnd';\r\n\r\nimport Term from './Term';\r\n//import { v3, v4, v5 } from 'uuid'\r\nimport PropTypes from 'prop-types';\r\nimport AddTerm from './AddTerm';\r\nimport RemoveTerm from './RemoveTerm';\r\nimport { dragEnter, changeFocus, changeStyle } from '../redux';\r\nimport { \r\n    StyledMap,\r\n    StyledMapHead,\r\n    StyledMapBody,\r\n    StyledMapRow,\r\n    StyledMapRowResponsive,\r\n    StyledMapHeading,\r\n    StyledMapData,\r\n    StyledFocusElement\r\n} from '../styles/components/programmapStyles';\r\n\r\n\r\nexport const ProgramMap = ({\r\n    courses,\r\n    selectedCourse,\r\n    handleClickAddCourse,\r\n    handleClickEditCourse,\r\n    handleClickSelectCourse,\r\n    handleClickDeleteCourse,\r\n    filteredCourses,\r\n    maxCourseYears,\r\n    handleClickAddTerm,\r\n    handleClickRemoveTerm\r\n\r\n}) => {\r\n    const isChrome = !!window.chrome && (!!window.chrome.webstore || !!window.chrome.runtime);\r\n\r\n    \r\n    const dispatch = useDispatch();\r\n    //const [currentFocusedElm, setCurrentFocusedElm] = useState(null);\r\n    //const [style, setStyle] = useState(null);\r\n    const { currentFocusedElm, style } = useSelector(state => state.focus);\r\n    const { stickyHeader } = useSelector(state => state.settings);\r\n\r\n    const toggleFocus = (element, focusedCourse) => {\r\n        console.log(element);\r\n        if(!selectedCourse || (selectedCourse !== focusedCourse && currentFocusedElm !== element)){\r\n            //setCurrentFocusedElm(element);\r\n            dispatch(changeFocus(element));\r\n        }else{\r\n            //setCurrentFocusedElm(null);\r\n            dispatch(changeFocus(null));\r\n        }\r\n    }\r\n\r\n    \r\n    useEffect(() => {\r\n        if (currentFocusedElm) {\r\n            //const style = outlineElementStyle(currentFocusedElm.current);\r\n            //setStyle(style);\r\n            //dispatch(changeStyle(style));\r\n            dispatch(changeStyle());\r\n        }\r\n    }, [currentFocusedElm, courses]);\r\n\r\n\r\n    const rows = courses.map((courseList, index) => {\r\n        const isSelected = selectedCourse && (courseList.findIndex(c => c.code === selectedCourse.code) !== -1);\r\n        \r\n        return (<Term \r\n                    isSelected={isSelected}\r\n                    key={index}\r\n                    \r\n\r\n                    toggleFocus={toggleFocus}\r\n\r\n                    selectedCourse={selectedCourse}\r\n                    termNumber={index}\r\n                    courseList={courseList}\r\n                    handleClickAddCourse={handleClickAddCourse}\r\n                    handleClickEditCourse={handleClickEditCourse}\r\n                    handleClickSelectCourse={handleClickSelectCourse}\r\n                    handleClickDeleteCourse={handleClickDeleteCourse}\r\n                    filteredCourses={filteredCourses}\r\n                />\r\n            \r\n        );\r\n    });\r\n    return (\r\n        <DragDropContext \r\n            onDragEnd={(param) => {\r\n                if(param.destination){\r\n                    dispatch(dragEnter(\r\n                        {\r\n                            termI: Number(param.destination.droppableId),\r\n                            courseI: param.destination.index\r\n                        }, \r\n                        {\r\n                            termI: Number(param.source.droppableId),\r\n                            courseI: param.source.index\r\n                        }\r\n                    ));\r\n                }\r\n                console.log(param);\r\n            }}\r\n        >\r\n            <StyledMap\r\n                \r\n                bordered\r\n                size=\"sm\"\r\n\r\n            > \r\n                <StyledMapHead \r\n                    stickyHeader={stickyHeader}\r\n                >\r\n                    <StyledMapRowResponsive>\r\n                        <StyledMapHeading>Term</StyledMapHeading>\r\n                        <StyledMapHeading \r\n                        style={{width: '100%'}}\r\n                        colSpan={maxCourseYears + 1}\r\n                        >\r\n                            Courses\r\n                        </StyledMapHeading>\r\n                    </StyledMapRowResponsive>\r\n                </StyledMapHead>\r\n                <StyledMapBody \r\n                    stickyHeader={stickyHeader}\r\n                    style={{width: '100%', height:'100%'}}\r\n                >\r\n                    <tr style={isChrome?focusParentElmStyleChrome:focusParentElmStyle}>\r\n                        <StyledFocusElement \r\n                            className={`${selectedCourse && currentFocusedElm ? `active` : ``}`}\r\n                            style={style}\r\n                        />\r\n                    </tr>\r\n                    {rows}\r\n                    <StyledMapRow>\r\n                        <StyledMapData\r\n                        style={{width: '100%'}} \r\n                        key={rows.length + 1}\r\n                        colSpan={maxCourseYears + 2}>\r\n                        <AddTerm \r\n                        termNumber={rows.length + 1}\r\n                        handleClickAddTerm={handleClickAddTerm}\r\n                        />\r\n                        </StyledMapData>\r\n                    </StyledMapRow>\r\n                    <StyledMapRow>\r\n                        <StyledMapData \r\n                        style={{width: '100%'}}\r\n                        key={rows.length + 2}\r\n                        colSpan={maxCourseYears + 2}>\r\n                        <RemoveTerm \r\n                        termNumber={rows.length - 1}\r\n                        handleClickRemoveTerm={handleClickRemoveTerm}\r\n                        />\r\n                        </StyledMapData>\r\n                    </StyledMapRow>\r\n                </StyledMapBody>\r\n            </StyledMap>\r\n    </DragDropContext>\r\n    )\r\n}\r\n\r\n// PropTypes\r\nProgramMap.propType = {\r\n    handleClickAddTerm: PropTypes.func.isRequired,\r\n    handleClickRemoveTerm: PropTypes.func.isRequired,\r\n    handleClickAddCourse: PropTypes.func.isRequired,\r\n    handleClickEditCourse: PropTypes.func.isRequired,\r\n    handleClickDeleteCourse: PropTypes.func.isRequired,\r\n    handleClickSelectCourse: PropTypes.func.isRequired,\r\n    maxCourseYears: PropTypes.number.isRequired,\r\n    courses: PropTypes.array.isRequired,\r\n    selectedCourse: PropTypes.object.isRequired,\r\n    filteredCourses: PropTypes.array.isRequired\r\n}\r\n\r\nconst focusParentElmStyle = {\r\n    \r\n    position: 'relative', \r\n    width:'100%', \r\n    height:'100%', \r\n    top:'-32px', \r\n    left:'0px'\r\n} \r\n\r\nconst focusParentElmStyleChrome = {\r\n    ...focusParentElmStyle,\r\n    display:'inline',\r\n    \r\n}\r\n\r\n\r\nexport default ProgramMap\r\n","import React, { useState, useRef, useEffect, Fragment } from 'react'\r\n\r\nimport useWindowSize from '../hooks/useWindowSize';\r\nimport { \r\n    StyledInnerBottomHead,\r\n    StyledInnerBottomHeadContainer\r\n  } from '../styles/components/homeStyles';\r\n\r\n\r\nfunction SideViewHeader(props) {\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n    const [maxPages, setMaxPages] = useState(1);\r\n    //const [lastScrollTop, setLastScrollTop] = useState(0);\r\n    //const [canScroll, setCanScroll] = useState(true);\r\n\r\n    const size = useWindowSize();\r\n\r\n    const sideViewHeaderContainer = useRef(null);\r\n\r\n\r\n    useEffect(() => {\r\n        resetScrollProperties();\r\n    }, [size.width, size.height]);\r\n\r\n    const resetScrollProperties = () => {\r\n        if (sideViewHeaderContainer.current){\r\n            let { scrollHeight, clientHeight, scrollTop } = sideViewHeaderContainer.current;\r\n            \r\n            setMaxPages(Math.floor(scrollHeight / clientHeight));\r\n            //setPageNumber(Math.floor(scrollTop / clientHeight) + 1);\r\n            //setLastScrollTop(0);\r\n            sideViewHeaderContainer.current.scrollTo({\r\n                top: 0,\r\n                left: 0,\r\n                behavior: 'smooth'\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    const scrollContainer = (e) => {\r\n        \r\n        if (sideViewHeaderContainer.current){\r\n          let { scrollTop, clientHeight, scrollHeight } = sideViewHeaderContainer.current;\r\n          \r\n          setPageNumber(Math.floor(scrollTop / clientHeight) + 1);\r\n          setMaxPages(Math.floor(scrollHeight / clientHeight));\r\n\r\n        }\r\n    } \r\n\r\n\r\n    return (\r\n        <StyledInnerBottomHeadContainer>\r\n            <div \r\n                style={pageIndicatorStyle}\r\n            >\r\n                {pageNumber}/{maxPages}\r\n            </div>\r\n            <span className=\"divider\"></span>\r\n            <StyledInnerBottomHead\r\n                \r\n                ref={sideViewHeaderContainer}\r\n                onScroll={scrollContainer}\r\n                \r\n            >\r\n                {props.children}\r\n            </StyledInnerBottomHead>\r\n            \r\n        </StyledInnerBottomHeadContainer>\r\n        \r\n    )\r\n}\r\n\r\nexport default SideViewHeader\r\n\r\n\r\nconst pageIndicatorStyle = {\r\n    width: '30px',\r\n    color:'#000',\r\n    backgroundColor: '#e5e5e5',\r\n    borderRadius: '5px',\r\n    border: '2px solid grey',\r\n    padding: '5px',\r\n    margin: '5px',\r\n}\r\n","import { useState, useEffect } from 'react';\r\n// Hook\r\n\r\nexport default function useWindowSize() {\r\n\r\n    // Initialize state with undefined width/height so server and client renders match\r\n  \r\n    // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\r\n  \r\n    const [windowSize, setWindowSize] = useState({\r\n  \r\n      width: undefined,\r\n  \r\n      height: undefined,\r\n  \r\n    });\r\n  \r\n  \r\n  \r\n    useEffect(() => {\r\n  \r\n      // Handler to call on window resize\r\n  \r\n      function handleResize() {\r\n  \r\n        // Set window width/height to state\r\n  \r\n        setWindowSize({\r\n  \r\n          width: window.innerWidth,\r\n  \r\n          height: window.innerHeight,\r\n  \r\n        });\r\n  \r\n      }\r\n  \r\n      \r\n  \r\n      // Add event listener\r\n  \r\n      window.addEventListener(\"resize\", handleResize);\r\n  \r\n      \r\n  \r\n      // Call handler right away so state gets updated with initial window size\r\n  \r\n      handleResize();\r\n  \r\n      \r\n  \r\n      // Remove event listener on cleanup\r\n  \r\n      return () => window.removeEventListener(\"resize\", handleResize);\r\n  \r\n    }, []); // Empty array ensures that effect is only run on mount\r\n  \r\n  \r\n  \r\n    return windowSize;\r\n  \r\n  }","import React, { useState } from 'react';\r\nimport { Input, Label } from 'reactstrap';\r\nimport { StyledInnerBottomHeadItem, StyledButton, StyledInput } from '../styles/components/homeStyles';\r\n\r\nconst types = [\r\n    \"Course with worst grade and highest credit\",\r\n    \"Course with best grade and highest credit\",\r\n    \"Course with worst grade and lowest credit\",\r\n    \"Course with best grade and lowest credit\",\r\n    \"Corequisite/Prerequisite Analysis\"\r\n]\r\n\r\nfunction CourseAnalyzer({\r\n    courses,\r\n    prereq,\r\n    coreq\r\n}) {\r\n    const [recommendedCourse, setRecommendedCourse] = useState('');\r\n    const [type, setType] = useState(0);\r\n    const [term, setTerm] = useState(courses.length);\r\n    \r\n\r\n    const typeOptions = types.map((t, index) => \r\n    (<option key={index} value={index}>{t}</option>));\r\n\r\n    const termOptions = courses.map((cList, index) => \r\n    (<option key={index + 1} value={index + 1}>{index + 1}</option>));\r\n\r\n\r\n\r\n    const onSubmit = (e) => {\r\n        \r\n        e.preventDefault();\r\n        let allCourses = [].concat.apply([], courses); // flatten the 2d array\r\n\r\n        let highestGrade = Math.max(...allCourses.map(c => c.grade));\r\n        highestGrade *= highestGrade;\r\n        switch(type.toString()){\r\n            case '0':\r\n                allCourses.sort((courseA, courseB) => courseA.credits * (highestGrade - courseA.grade) - courseB.credits * (highestGrade - courseB.grade));\r\n                break;\r\n            case '1':\r\n                allCourses.sort((courseA, courseB) => courseA.credits * courseA.grade - courseB.credits * courseB.grade);\r\n                break;\r\n            case '2':\r\n                allCourses.sort((courseA, courseB) => courseB.credits * courseB.grade - courseA.credits * courseA.grade);\r\n                break;\r\n            case '3':\r\n                allCourses.sort((courseA, courseB) => courseB.credits * (highestGrade - courseB.grade) - courseA.credits * (highestGrade - courseA.grade));\r\n                break;\r\n            default:\r\n                allCourses = [{code: 'Not Implemented'}];\r\n                break;\r\n        }\r\n        console.log(allCourses);\r\n        if (allCourses.length > 0){\r\n            setRecommendedCourse(allCourses[allCourses.length - 1].code);\r\n        }\r\n    }\r\n    return (\r\n       \r\n        <StyledInnerBottomHeadItem\r\n        onSubmit={onSubmit}\r\n        >\r\n            <Label> Type:</Label>\r\n            <StyledInput \r\n                type=\"select\" \r\n                id=\"typeSelect\" \r\n                name=\"type\"\r\n                onChange={e => setType(e.target.value)}\r\n                defaultValue={type}\r\n            >\r\n                {typeOptions}\r\n            </StyledInput>\r\n            \r\n            {/* For some reason type evaluates to a string */}\r\n            {type === '4' &&\r\n            <>\r\n            <Label> Term:</Label>\r\n            <StyledInput \r\n                type=\"select\" \r\n                id=\"termSelect\"\r\n                name=\"term\"\r\n                onChange={e => setTerm(e.target.value)}\r\n                defaultValue={term}\r\n            >\r\n                {termOptions}\r\n            </StyledInput>\r\n            </>}\r\n\r\n            \r\n            <StyledButton type=\"submit\" value=\"Find course\"/>\r\n            \r\n            <Label style={{width: 'auto' }}>Course: {recommendedCourse}</Label>\r\n        </StyledInnerBottomHeadItem>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default CourseAnalyzer\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nimport { \r\n  StyledInner,\r\n  StyledInnerTop,\r\n  StyledInnerBottom,\r\n  StyledInnerBottomHead,\r\n  StyledInnerBottomWrapper,\r\n  StyledInnerBottomFoot\r\n} from '../styles/components/homeStyles';\r\n\r\n\r\nimport SaveChanges from './SaveChanges';\r\nimport GradeFilter from './GradeFilter';\r\nimport SideView from './SideView';\r\nimport ResetChanges from './ResetChanges';\r\nimport CGPACalculator from './CGPACalculator';\r\nimport ProgramMap from './ProgramMap';\r\nimport { notify } from './Notification';\r\nimport App from '../App';\r\nimport * as CourseActionCreators from '../redux';\r\nimport SideViewHeader from './SideViewHeader';\r\nimport CourseAnalyzer from './CourseAnalyzer';\r\n\r\n\r\nclass Home extends Component {\r\n\r\n  componentWillUnmount = () => {\r\n    // this is a temporary fix for the problems that I'm getting with\r\n    // the focusElement and react-select not updating properly when you \r\n    // exit the Home component \r\n    this.props.clearSelected();\r\n  }\r\n  resetChanges = () => {\r\n    let confirmed = window.confirm(\"Are you sure you want to reset to the last saved changes?\");\r\n    if (!confirmed){\r\n      return;\r\n    }\r\n    this.props.populateCourseData();\r\n    this.props.clearFilter();\r\n    this.props.clearSelected();\r\n\r\n  }\r\n\r\n\r\n  /* Local Storage Saving / Retrieving */\r\n  saveCourseData = () =>{\r\n    let confirmed = window.confirm(\"Are you sure you want to save all the changes?\");\r\n    if (!confirmed){\r\n      return;\r\n    }\r\n    //alert(\"saving \" + JSON.stringify(this.state.courses) + \" into localStorage.\");\r\n    localStorage.setItem(App.localStorageKey, JSON.stringify(this.props.courses));\r\n    localStorage.setItem(App.localStorageKey+\"prereq\", JSON.stringify(this.props.prereq));\r\n    localStorage.setItem(App.localStorageKey+\"coreq\", JSON.stringify(this.props.coreq));\r\n    this.sendNotification('Changes saved');\r\n  }\r\n\r\n\r\n\r\n  // Finding the max number of courses out of all terms\r\n  getMaxCourseForYears = () => {\r\n      const max = Math.max(...this.props.courses.map((val, index) => val.length));\r\n      return max;\r\n  }\r\n\r\n  sendNotification = (msg) => {\r\n    notify(msg);\r\n  }\r\n\r\n  render(){\r\n    return (\r\n        <React.Fragment>\r\n            <StyledInner>\r\n              <StyledInnerTop>\r\n                <ProgramMap \r\n                handleClickAddTerm={this.props.addTerm}\r\n                handleClickRemoveTerm={this.props.removeTerm}\r\n                handleClickAddCourse={this.props.addCourse}\r\n                handleClickEditCourse={this.props.editCourse}\r\n                handleClickSelectCourse={this.props.toggleSelect}\r\n                handleClickDeleteCourse={this.props.deleteCourse}\r\n                maxCourseYears={this.getMaxCourseForYears()}\r\n                courses={this.props.courses}\r\n                selectedCourse={this.props.selectedCourse}\r\n                filteredCourses={this.props.filteredCourses}\r\n                />\r\n            </StyledInnerTop>\r\n            <StyledInnerBottom \r\n              expanded={(this.props.selectedCourse !== null)}\r\n            >\r\n            <StyledInnerBottomWrapper>\r\n              {/* Contains StyledInnerBottomHead */}\r\n              <SideViewHeader> \r\n\r\n                <SaveChanges\r\n                    onSaveClick={() => this.saveCourseData()}\r\n                />\r\n                <ResetChanges \r\n                    onResetClick={() => this.resetChanges()}\r\n                />\r\n                <CourseAnalyzer \r\n                  courses={this.props.courses}\r\n                  prereq={this.props.prereq}\r\n                  coreq={this.props.coreq}\r\n                />\r\n                <GradeFilter\r\n                    onClickFilterByCategory={this.props.filterByCategory}\r\n                />\r\n                <CGPACalculator \r\n                    courses={this.props.courses}\r\n                /> \r\n              </SideViewHeader>\r\n              \r\n              <StyledInnerBottomFoot>\r\n                    \r\n                <SideView \r\n                    sendNotification={this.sendNotification}\r\n                    handleClickEditCourse={this.props.editCourse}\r\n                    courses={this.props.courses}\r\n                    selectedTerm={this.props.selectedTerm}\r\n                    selectedCourse={this.props.selectedCourse}\r\n                    prereq={this.props.prereq}\r\n                    coreq={this.props.coreq}\r\n                    handleClickEditPrereq={this.props.editPrereq}\r\n                    handleClickEditCoreq={this.props.editCoreq}\r\n                    handleClickShowPrereq={this.props.showPrereq}\r\n                    handleClickShowCoreq={this.props.showCoreq}\r\n                />\r\n              </StyledInnerBottomFoot>\r\n              </StyledInnerBottomWrapper>\r\n            </StyledInnerBottom>\r\n          </StyledInner>\r\n        </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      courses: state.courses.courses,\r\n      filteredCourses: state.courses.filteredCourses,\r\n      selectedCourse: state.courses.selectedCourse,\r\n      selectedTerm: state.courses.selectedTerm,\r\n      prereq: state.courses.prereq,\r\n      coreq: state.courses.coreq\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      addCourse: (term, courseCode) => dispatch(CourseActionCreators.addCourse(term, courseCode)),\r\n      editCourse: (term, editedCourse) => dispatch(CourseActionCreators.editCourse(term, editedCourse)),\r\n      deleteCourse: (term, courseCode) => dispatch(CourseActionCreators.deleteCourse(term, courseCode)),\r\n      addTerm: () => dispatch(CourseActionCreators.addTerm()),\r\n      removeTerm: () => dispatch(CourseActionCreators.removeTerm()),\r\n      toggleSelect: (courseCode) => dispatch(CourseActionCreators.toggleSelectCourse(courseCode)),\r\n      clearSelected: () => dispatch(CourseActionCreators.clearSelected()),\r\n      filterByCategory: (category, value) => dispatch(CourseActionCreators.filterByCategory(category, value)),\r\n      clearFilter: () => dispatch(CourseActionCreators.clearFilter()),\r\n      editPrereq: (courseCode, prereqCourses) => dispatch(CourseActionCreators.editPrereq(courseCode, prereqCourses)),\r\n      editCoreq: (courseCode, coreqCourses) => dispatch(CourseActionCreators.editCoreq(courseCode, coreqCourses)),\r\n      showPrereq: (courseCode) => dispatch(CourseActionCreators.showPrereq(courseCode)),\r\n      showCoreq: (courseCode) => dispatch(CourseActionCreators.showCoreq(courseCode)),\r\n      loadCourses: (courses, prereq, coreq) => dispatch(CourseActionCreators.loadCourses(courses, prereq, coreq))\r\n    }\r\n  }\r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(Home);","import * as settingsTypes from './settingsTypes';\r\nimport AllSchools from '../../data/SchoolData.json';\r\nexport const customSchoolName = 'custom';\r\nconst customSchoolInitialState = [];\r\nconst schools = { \r\n    ...AllSchools, \r\n    [customSchoolName]: customSchoolInitialState, \r\n    'none' : [] \r\n};\r\n\r\nconst initialState = {\r\n    darkmode: false,\r\n    schools,\r\n    currentSchool: 'none',\r\n    stickyHeader: false\r\n}\r\n\r\n\r\nconst settingsReducer = (state = initialState, action) => {\r\n    \r\n    switch(action.type){\r\n        case settingsTypes.TOGGLE_DARKMODE:\r\n            return {\r\n                ...state,\r\n                darkmode: action.payload.darkmode\r\n            };\r\n        case settingsTypes.TOGGLE_STICKY_HEADER:\r\n            return {\r\n                ...state,\r\n                stickyHeader: action.payload.stickyHeader\r\n            }\r\n        case settingsTypes.SET_CURRENT_SCHOOL:\r\n            return {\r\n                ...state,\r\n                currentSchool: action.payload.currentSchool\r\n            };\r\n        case settingsTypes.SET_SCHOOL_GRADES:\r\n            return {\r\n                ...state,\r\n                schools: (action.payload.schoolName !== 'none')\r\n                ? {...schools, [action.payload.schoolName]: action.payload.schoolGrades}\r\n                : {...schools, [state.currentSchool]: action.payload.schoolGrades}\r\n            }\r\n\r\n        case settingsTypes.LOAD_SETTINGS:\r\n            return Object.assign({}, state, action.payload.items);\r\n        case settingsTypes.LOAD_CUSTOM_SCHOOL:\r\n            return {\r\n                ...state,\r\n                schools: {\r\n                    ...schools, \r\n                    [customSchoolName]: action.payload.customSchoolSettings\r\n                }\r\n            }\r\n        default: return state;\r\n    }\r\n\r\n}\r\nexport default settingsReducer; ","import React, { useState, useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as AllActionCreators from '../redux';\r\nimport { Table, Form, Input, Button, Label } from 'reactstrap';\r\nimport App from '../App';\r\nimport { customSchoolName } from '../redux/settings/settingsReducer';\r\n\r\nconst gradeLetters = ['A+', 'A', 'A-', 'B+', 'B', 'B-', 'C+', 'C', 'C-', 'D+', 'D', 'D-', 'F', 'Not Set'];\r\n\r\nfunction GPASettings(props) \r\n{\r\n    \r\n    const { currentSchool, schools } = useSelector(state => state.settings);\r\n    const dispatch = useDispatch();\r\n    //console.log(schools[currentSchool]);\r\n    const [GPAStops, setGPAStops] = useState(schools[currentSchool]);\r\n    const [state, setState] = useState({lower: 0, upper: 0, gradepoint: 0, letter: 'Not Set'});\r\n        \r\n    useEffect(() => {\r\n        localStorage.setItem(App.localStorageKey+\"currentSchool\", JSON.stringify(currentSchool));\r\n        setGPAStops(schools[currentSchool]);\r\n        \r\n    },[currentSchool, schools]);\r\n\r\n    const customSchoolGPAStops = schools[customSchoolName];\r\n    useEffect(() => {\r\n        localStorage.setItem(App.localStorageKey+customSchoolName, JSON.stringify(customSchoolGPAStops));\r\n    },[customSchoolGPAStops, schools]);\r\n    \r\n    \r\n\r\n    const removeAtIndex = (e, index) => {\r\n        setGPAStops(GPAStops.slice(0, index).concat(GPAStops.slice(index + 1, GPAStops.length)));\r\n    }\r\n\r\n\r\n    const onChange = (e) => {\r\n        setState({...state, [e.currentTarget.name]:e.currentTarget.value});\r\n    }\r\n\r\n    const saveSchoolData = (e) => {\r\n        dispatch(AllActionCreators.setSchoolGrades(currentSchool, GPAStops));\r\n        \r\n    }\r\n\r\n    const onSchoolChange = (e) => {\r\n        const { value } = e.currentTarget;\r\n        dispatch(AllActionCreators.setCurrentSchool(value));\r\n        \r\n\r\n    }\r\n    const addStop = (e) => {\r\n        e.preventDefault();\r\n        const newStop = state;\r\n\r\n\r\n\r\n        const newStops = GPAStops.concat(newStop).sort((a, b) => b.upper - a.upper);\r\n        \r\n        setGPAStops(newStops);\r\n\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <Form\r\n                onSubmit={addStop}\r\n            >\r\n            <Label htmlFor=\"school\">School</Label>\r\n                <Input type=\"select\" name=\"school\" id=\"school\" onChange={onSchoolChange}  value={currentSchool}>\r\n                    {Object.keys(schools).map(val => \r\n                    (<option key={val} value={val}>{val}</option>)\r\n                    )}\r\n                </Input>\r\n                <Table\r\n                    striped\r\n                    size=\"sm\"\r\n                >\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Lower Bound</th>\r\n                            <th>Upper Bound</th>\r\n                            <th>Grade Point</th>\r\n                            <th>Letter</th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        \r\n                        {GPAStops.map((stop, index) => {\r\n                            return (\r\n                                <tr key={index}>\r\n                                    <td>{stop.lower}</td>  \r\n                                    <td>{stop.upper}</td>  \r\n                                    <td>{stop.gradepoint}</td>  \r\n                                    <td>{stop.letter}</td>\r\n                                    <td>\r\n                                    {\r\n                                        (currentSchool === customSchoolName &&\r\n                                            (\r\n                                                <Button \r\n                                                    onClick={(e) => removeAtIndex(e, index)}\r\n                                                >\r\n                                                    Remove\r\n                                                </Button>\r\n                                            )\r\n                                        )\r\n                                    }\r\n                                    </td>  \r\n                                </tr>\r\n                            );\r\n                        })}\r\n                        {\r\n                            (currentSchool === customSchoolName &&\r\n                                (\r\n                                    <tr>\r\n                                        <td><Input type=\"number\" max=\"100\" min=\"0\" name=\"lower\" id=\"lower\" placeholder=\"0\" onChange={onChange} value={state.lower}/></td>  \r\n                                        <td><Input type=\"number\" max=\"100\" min=\"0\" name=\"upper\" id=\"upper\" placeholder=\"0\" onChange={onChange} value={state.upper}/></td>  \r\n                                        <td><Input type=\"number\" min=\"0\" name=\"gradepoint\" id=\"gradepoint\" placeholder=\"0\" onChange={onChange}  value={state.gradepoint}/></td>  \r\n                                        <td>\r\n                                            <Input type=\"select\" name=\"letter\" id=\"letter\" onChange={onChange}  value={state.letter}>\r\n                                                {gradeLetters.map(val => \r\n                                                (<option key={val} value={val}>{val}</option>)\r\n                                                )}\r\n                                    \r\n                                            </Input>\r\n                                        </td>\r\n                                        <td>\r\n                                            \r\n                                                        <Button \r\n                                                            type=\"submit\"\r\n                                                        >\r\n                                                            Add\r\n                                                        </Button>\r\n                                                \r\n                                            \r\n                                        </td>            \r\n                                    </tr>\r\n                                )\r\n                            )\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n                \r\n                {\r\n                    (currentSchool === customSchoolName &&\r\n                        (\r\n                            <Button \r\n                                onClick={saveSchoolData}\r\n                            >\r\n                                Save\r\n                            </Button>\r\n                        )\r\n                    )\r\n                }\r\n                       \r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GPASettings\r\n","import React, { useState, useRef } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport FileSaver, { saveAs } from 'file-saver';\r\nimport { Button, Input, Label, FormGroup } from 'reactstrap'\r\nimport { loadCourses } from '../redux/course/courseActions';\r\nimport CourseClass from './model/CourseClass';\r\nimport { StyledFileInput } from '../styles/components/appStyles';\r\nimport { notify } from './Notification';\r\nvar obj_csv = {\r\n    size: 0,\r\n    dataFile: []\r\n}\r\n\r\nvar loadCoursesPayload = {\r\n    courses: [],\r\n    prereq: {},\r\n    coreq: []\r\n}\r\n\r\nfunction import_csv(input, callback) {\r\n    console.log(input);\r\n    if (input.files && input.files[0]){\r\n        let reader = new FileReader();\r\n        reader.readAsBinaryString(input.files[0]);\r\n        reader.onload = function(e) {\r\n            console.log(e);\r\n            obj_csv.size = e.total;\r\n            obj_csv.dataFile = e.target.result;\r\n            console.log(obj_csv.dataFile);\r\n            parseCSVData(obj_csv.dataFile);\r\n            callback();\r\n        }\r\n    }\r\n}\r\n\r\nfunction parseCSVData(data) {\r\n    let csvData = [];\r\n    let lbreak = data.split(\"\\n\");\r\n    let currentRead = \"\";\r\n    let courses = [];\r\n    let prereq = {};\r\n    let coreq = [];\r\n\r\n    lbreak.forEach(res => {\r\n        // csvData.push(res.split(\",\"));\r\n        if (res === \"TERMS\" || res === \"PREREQ\" || res === \"COREQ\"){\r\n            currentRead = res;\r\n            return;\r\n        }\r\n        \r\n        if (currentRead === \"TERMS\"){\r\n\r\n            if (res.startsWith('name,')){\r\n                return;\r\n            }\r\n            if (res === \"-\"){\r\n                // new term\r\n                courses.push([]);\r\n                return;\r\n            }\r\n            let course = res.split(\",\");\r\n            if (course.length === 4 && courses.length > 0){\r\n                courses[courses.length - 1].push(new CourseClass(course[0], course[1], Number(course[2]), Number(course[3])));\r\n            }\r\n\r\n        }else if (currentRead === \"PREREQ\"){\r\n            let pC = res.split(\",\");\r\n            if (pC.length > 1){\r\n                prereq[pC[0]] = pC.slice(1);\r\n            }\r\n        }else if (currentRead === \"COREQ\"){\r\n            let cC = res.split(\",\");\r\n            if (cC.length > 1){\r\n                coreq.push(cC);\r\n            }\r\n        }\r\n\r\n    });\r\n    //console.table(csvData);\r\n    console.log(courses, prereq, coreq);\r\n    loadCoursesPayload.courses = courses;\r\n    loadCoursesPayload.prereq = prereq;\r\n    loadCoursesPayload.coreq = coreq;\r\n}\r\n\r\nfunction export_csv(arrayHeader, terms, prereq, coreq, delimiter, fileName) {\r\n    let csv = \"TERMS\\n\";\r\n    let header = arrayHeader.join(delimiter) + \"\\n\";\r\n    csv += header;\r\n    terms.forEach(term => {\r\n        csv += \"-\\n\";\r\n        term.forEach(course => {\r\n            let row = [];\r\n            for (let index in arrayHeader){\r\n                if (course.hasOwnProperty(arrayHeader[index])) {\r\n                    row.push(course[arrayHeader[index]]);\r\n                }\r\n            }\r\n            csv += row.join(delimiter)+\"\\n\";\r\n        })\r\n        \r\n    })\r\n\r\n    csv += \"PREREQ\\n\";\r\n    for (let key in prereq) {\r\n        if (prereq.hasOwnProperty(key)){\r\n            let row = [];\r\n            row.push(key);\r\n            prereq[key].forEach(coursecode => {\r\n                row.push(coursecode);\r\n            })\r\n            csv += row.join(delimiter)+\"\\n\";\r\n        }\r\n    }\r\n    csv += \"COREQ\\n\";\r\n    coreq.forEach(coreqset => {\r\n        csv += coreqset.join(delimiter)+\"\\n\";\r\n    })\r\n\r\n    let csvData = new Blob([csv], { type: 'text/csv' });  \r\n    let csvUrl = URL.createObjectURL(csvData);\r\n\r\n    let hiddenElement = document.createElement('a');\r\n    hiddenElement.href = csvUrl;\r\n    hiddenElement.target = '_blank';\r\n    hiddenElement.download = fileName + '.csv';\r\n    hiddenElement.click();\r\n}\r\n\r\nfunction import_json (input, callback) {\r\n    console.log(input);\r\n    if (input.files && input.files[0]){\r\n        let reader = new FileReader();\r\n        reader.readAsText(input.files[0], 'UTF-8');\r\n        reader.onload = function(e) {\r\n            console.log(e);\r\n            obj_csv.size = e.total;\r\n            obj_csv.dataFile = e.target.result;\r\n            console.log(obj_csv.dataFile);\r\n            if (parseJSONData(obj_csv.dataFile)){\r\n                callback();\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction parseJSONData(data) {\r\n    try {\r\n        let obj = JSON.parse(data);\r\n        console.log(obj);\r\n        if (obj.courses && obj.prereq && obj.coreq){\r\n            loadCoursesPayload.courses = obj.courses;\r\n            loadCoursesPayload.prereq = obj.prereq;\r\n            loadCoursesPayload.coreq = obj.coreq;\r\n            return true;\r\n        }\r\n        return false;\r\n    }catch(e){\r\n        return false;\r\n    }\r\n    \r\n}\r\n\r\nfunction export_json (courses, prereq, coreq, fileName){\r\n    var json = JSON.stringify({courses, prereq, coreq });\r\n    var blob = new Blob([json], { type:\"application/json;charset=utf-8\"});\r\n    FileSaver.saveAs(blob, fileName+\".json\");\r\n}\r\n\r\nfunction ImportExportSettings() {\r\n    const [type, setType] = useState('json');\r\n    const { courses, prereq, coreq } = useSelector(state => state.courses)\r\n    const dispatch = useDispatch();\r\n    const fileUploadRef = useRef();\r\n\r\n    const checkBoxChecked = (e) => {\r\n        setType(e.target.value);\r\n    }\r\n\r\n    const handleImport = () => {\r\n        if (type === 'json') {\r\n            if (fileUploadRef.current){\r\n                import_json(fileUploadRef.current, () => {\r\n                    dispatch(loadCourses(\r\n                        loadCoursesPayload.courses,\r\n                        loadCoursesPayload.prereq,\r\n                        loadCoursesPayload.coreq\r\n                    ));\r\n                    notify('Import successful!', 'success');\r\n                });\r\n            }\r\n        }else if (type === 'csv'){\r\n            if (fileUploadRef.current){\r\n                import_csv(fileUploadRef.current, () => {\r\n                    dispatch(loadCourses(\r\n                        loadCoursesPayload.courses,\r\n                        loadCoursesPayload.prereq,\r\n                        loadCoursesPayload.coreq\r\n                    ));\r\n                    notify('Import successful!', 'success');\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleExport = () => {\r\n        if (type === 'json') {\r\n            export_json(courses, prereq, coreq, 'courses');\r\n        }else if (type === 'csv'){\r\n            export_csv(['name', 'code', 'grade', 'credits'], courses, prereq, coreq, ',', 'courses');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"\">\r\n            <Label>Type</Label>\r\n            <FormGroup check>\r\n                <Label check>\r\n                    <Input type=\"radio\" name=\"type\" value=\"json\" checked={type === 'json'} onChange={checkBoxChecked}/>{' '}\r\n                    JSON\r\n                </Label>\r\n            </FormGroup>\r\n            <FormGroup check>\r\n                <Label check>\r\n                    <Input type=\"radio\" name=\"type\" value=\"csv\" checked={type === 'csv'} onChange={checkBoxChecked}/>{' '}\r\n                    CSV\r\n                </Label>\r\n            </FormGroup>\r\n            \r\n            Upload File:{' '}\r\n            <StyledFileInput type=\"file\" id=\"uploadfile\" ref={fileUploadRef} />{' '}\r\n            <Button outline color=\"primary\" onClick={handleImport}>Import</Button>{' '}\r\n            <Button outline color=\"secondary\" onClick={handleExport}>Export</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImportExportSettings\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as AllActionsCreators from '../redux/index';\r\nimport { CustomInput } from 'reactstrap';\r\nimport GPASettings from './GPASettings';\r\nimport App from '../App';\r\nimport ImportExportSettings from './ImportExportSettings';\r\nfunction Settings(props) {\r\n  const changeDarkmode = () => {\r\n    props.toggleDarkmode();\r\n  }\r\n\r\n  const changeStickyHeader = () => {\r\n    props.toggleStickyHeader();\r\n  }\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(App.localStorageKey+\"darkmode\", JSON.stringify(props.darkmode));\r\n  },[props.darkmode]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(App.localStorageKey+\"stickyHeader\", JSON.stringify(props.stickyHeader));\r\n  },[props.stickyHeader]);\r\n\r\n\r\n    return (\r\n        <div>\r\n          <ImportExportSettings />\r\n          <hr />\r\n          <CustomInput checked={props.darkmode} onChange={changeDarkmode} type=\"switch\" id=\"nightModeSwitch\" name=\"nightModeSwitch\" label=\"Toggle NightMode\" />\r\n          \r\n          <CustomInput checked={props.stickyHeader} onChange={changeStickyHeader} type=\"switch\" id=\"stickyHeaderSwitch\" name=\"stickyHeaderSwitch\" label=\"Sticky Row Headings (when scrolling left or right)\" />  \r\n          <hr />\r\n          <GPASettings /> \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      darkmode: state.settings.darkmode,\r\n      stickyHeader: state.settings.stickyHeader,\r\n    }\r\n  }\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n      toggleDarkmode: () => dispatch(AllActionsCreators.toggleDarkmode()),\r\n      toggleStickyHeader: () => dispatch(AllActionsCreators.toggleStickyHeader()),\r\n    }\r\n  }\r\n\r\nexport default connect(\r\n    mapStateToProps, \r\n    mapDispatchToProps\r\n)(Settings);\r\n","import React, { Component } from 'react';\r\nimport { HashRouter as Router, Route } from 'react-router-dom';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { connect } from 'react-redux';\r\n\r\n// import * as AllActionsCreators from './redux/index';\r\nimport { toggleDarkmode, loadSettings, loadCourses, loadCustomSchool, toggleSelectCourse, changeStyle } from './redux/index';\r\nimport './App.css';\r\nimport { StyledAppContainer } from './styles/components/appStyles';\r\nimport GlobalStyles from '../src/styles/base/base';\r\nimport { defaultTheme, darkmodeTheme } from './styles/themes/themes';\r\nimport Header from './componenets/layout/Header';\r\nimport About from './componenets/pages/About';\r\nimport Notification from './componenets/Notification';\r\nimport Instructions from './componenets/pages/Instructions';\r\nimport Home from './componenets/Home';\r\nimport Settings from './componenets/Settings';\r\nimport { customSchoolName } from './redux/settings/settingsReducer';\r\n\r\n\r\nclass App extends Component {\r\n\r\n  static localStorageKey = 'courses';\r\n\r\n  componentDidMount = () => {\r\n    this.restoreSettings();\r\n    this.populateCourseData();\r\n    window.addEventListener('resize', this.handleWindowResize);\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    window.removeEventListener('resize', this.handleWindowResize);\r\n  }\r\n\r\n  handleWindowResize = () => {\r\n    // timeout is a fix to readjust the focus element\r\n    setTimeout(() => {\r\n      this.props.changeStyle();\r\n    }, 500);\r\n  }\r\n\r\n  restoreSettings = () => {\r\n\r\n    const { darkmode, stickyHeader, schools, currentSchool } = this.props.settings; // settings from props is the settings reducer state\r\n\r\n    let currentSchoolFromLS = localStorage.getItem(App.localStorageKey + \"currentSchool\"); // currentSchool should be a string indicating the name of the current school in the setting page\r\n    currentSchoolFromLS = currentSchoolFromLS ? JSON.parse(currentSchoolFromLS) : currentSchool; // I know I don't have to parse a string from the localStorage but this is just convention\r\n    \r\n    if (!schools[currentSchoolFromLS]){ // if there is no school grading data for the current school set it to the custom school name\r\n      currentSchoolFromLS = customSchoolName; // the school grading data file might be missing and entry for the current school retrieved from the localStorage but the school grading data for the custom school has been set programmatically so it wouldn't be missing\r\n    }\r\n\r\n    let stickyHeaderFromLS = localStorage.getItem(App.localStorageKey + \"stickyHeader\"); // stickyHeader should be a boolean indicating whether the row headings are sticky\r\n    stickyHeaderFromLS = stickyHeaderFromLS ? JSON.parse(stickyHeaderFromLS) : stickyHeader;\r\n\r\n    let darkmodeFromLS = localStorage.getItem(App.localStorageKey + \"darkmode\"); // darkmode should be a boolean indicating whether there is darkmode\r\n    darkmodeFromLS = darkmodeFromLS ? JSON.parse(darkmodeFromLS) : darkmode;\r\n\r\n    this.props.loadSettings({\r\n      darkmode: darkmodeFromLS,\r\n      stickyHeader: stickyHeaderFromLS,\r\n      currentSchool: currentSchoolFromLS,\r\n    });\r\n\r\n    // load the custom school's grading data from localStorage (should be the same type as the schools in the school data file)\r\n    let customSchoolData = localStorage.getItem(App.localStorageKey + customSchoolName);\r\n    customSchoolData = customSchoolData ? JSON.parse(customSchoolData): schools[customSchoolName];\r\n\r\n    this.props.loadCustomSchool(customSchoolData);\r\n  }\r\n\r\n  // this will not only be called the first time when the user loads the app, but also when they click the reset changes button\r\n  populateCourseData = () =>{\r\n\r\n    const { prereq, coreq } = this.props.courses; // courses from props is the course reducer state\r\n\r\n\r\n    const dataStringCourses = localStorage.getItem(App.localStorageKey);\r\n    const dataStringPrereq = localStorage.getItem(App.localStorageKey + \"prereq\");\r\n    const dataStringCoreq = localStorage.getItem(App.localStorageKey + \"coreq\");\r\n\r\n\r\n    if (!dataStringCourses){\r\n      // this.props.loadCourses([[]], {}, []);\r\n      return;\r\n    }\r\n    const dataObjectCourses = JSON.parse(dataStringCourses); // should be a 2d array, 1st dimension represent the terms, 2nd dimension represents the courses in a term\r\n    const dataObjectPrereq = JSON.parse(dataStringPrereq); // should be an object, keys are the course codes, values are an array of course codes representing prereq courses\r\n    const dataObjectCoreq = JSON.parse(dataStringCoreq); // should be an array of arrays, each sub array represents a grouping of coreq course codes\r\n\r\n\r\n    this.props.loadCourses(\r\n      dataObjectCourses,\r\n      dataObjectPrereq ? dataObjectPrereq : prereq,\r\n      dataObjectCoreq ? dataObjectCoreq : coreq\r\n    );\r\n\r\n  }\r\n\r\n\r\n  render(){\r\n\r\n      return(\r\n        <ThemeProvider theme={this.props.settings.darkmode?darkmodeTheme:defaultTheme}>\r\n          <GlobalStyles />\r\n          <Router>\r\n            <div className=\"App\">\r\n              <StyledAppContainer>\r\n                <Header />\r\n                <Notification />\r\n                <Route exact path=\"/\" render={props => (\r\n                  <Home \r\n                  populateCourseData={this.populateCourseData}\r\n                  />\r\n                )}/>\r\n                <Route path=\"/about\" component={About} />\r\n                <Route path=\"/instructions\" component={Instructions} />\r\n                <Route path=\"/settings\" component={Settings} />\r\n              </StyledAppContainer>\r\n            </div>\r\n          </Router>\r\n        </ThemeProvider>\r\n      );\r\n  }\r\n}\r\n\r\n\r\n\r\n// const mapStateToProps = state => {\r\n//   return {\r\n//     darkmode: state.settings.darkmode,\r\n//     stickyHeader: state.settings.stickyHeader,\r\n//     schools: state.settings.schools,\r\n//     currentSchool: state.settings.currentSchool,\r\n//     prereq: state.courses.prereq,\r\n//     coreq: state.courses.coreq,\r\n//     courses: state.courses.courses\r\n//   }\r\n// }\r\n\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//   return {\r\n//     toggleDarkmode: () => dispatch(AllActionsCreators.toggleDarkmode()),\r\n//     loadSettings: (items) => dispatch(AllActionsCreators.loadSettings(items)),\r\n//     loadCourses: (courses, prereq, coreq) => dispatch(AllActionsCreators.loadCourses(courses, prereq, coreq)),\r\n//     loadCustomSchool: (customSchoolSettings) => dispatch(AllActionsCreators.loadCustomSchool(customSchoolSettings)),\r\n//     toggleSelected: () => dispatch(AllActionsCreators.toggleSelectCourse()),\r\n//     changeStyle: () => dispatch(AllActionsCreators.changeStyle())\r\n//   }\r\n// }\r\n\r\nconst mapState = state => state;\r\n\r\n\r\nconst actionCreators = {\r\n  toggleDarkmode,\r\n  loadSettings,\r\n  loadCourses,\r\n  loadCustomSchool,\r\n  toggleSelectCourse,\r\n  changeStyle\r\n}\r\n\r\nexport default connect(\r\n  mapState,\r\n  actionCreators\r\n)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as courseTypes from './courseTypes';\r\n\r\nimport CourseClass from '../../componenets/model/CourseClass';\r\n\r\n\r\n// These are sample of the data that could be in the state\r\nconst SAMPLE_COURSES = [\r\n    [\r\n      new CourseClass(\"OO Prog\", \"PROG10082\", 95, 6),\r\n      new CourseClass(\"Intro to Data.\", \"TELE13167\", 80, 3),\r\n      new CourseClass(\"Web Dev.\", \"SYST10049\", 82, 3)\r\n    ],\r\n    [\r\n      new CourseClass(\"OO Prog 2\", \"PROG24178\", 77, 6),\r\n      new CourseClass(\"Data Netw. Design\", \"TELE33324\", 50, 3),\r\n      new CourseClass(\"Web Prog.\", \"SYST10199\", 65, 3)\r\n    ],\r\n    [\r\n      new CourseClass(\"JAVA\", \"PROG32758\", 82, 6),\r\n      new CourseClass(\"Comp. Sec.\", \"INFO24178\", 45, 3),\r\n      new CourseClass(\"Databases\", \"DBAS27198\", 70, 3)\r\n    ]\r\n  ]\r\n  \r\n  const SAMPLE_PREREQ = {\r\n    \"PROG24178\": [\"PROG10082\"],\r\n    \"PROG32758\": [\"PROG24178\"],\r\n    \"TELE33324\": [\"TELE13167\"],\r\n    \"SYST10199\": [\"SYST10049\"],\r\n  }\r\n  \r\n  const SAMPLE_COREQ = [\r\n    [\"PROG32758\", \"DBAS27198\"],\r\n  ]\r\n\r\nconst initialState = {\r\n    courses: SAMPLE_COURSES , // 2d array, 1st dim = terms, 2nd dim = courses\r\n    filteredCourses: [], // array of courses to highlight\r\n    prereq: SAMPLE_PREREQ, // will be treated as a map/dictionary, stores all prerequisites for each course, values are arrays\r\n    coreq: SAMPLE_COREQ, // will be treated as an array of sets(but implmented as a 2d array)\r\n    selectedCourse: null, // current selected course\r\n    selectedTerm: null\r\n}\r\n\r\n\r\n\r\nconst concatAtIndex = (list, index, item) => {\r\n    const listAlt = list.slice();\r\n    listAlt.slice(index, 0, item);\r\n    return listAlt;\r\n} \r\n\r\nconst removeAtIndex = (list, index) => {\r\n    const listAlt = list.slice();\r\n    listAlt.splice(index, 1);\r\n    return listAlt;\r\n} \r\n\r\n  // Goes through each of the sets in the coreq and combines them if they intersects with another\r\n const combineCoreqSets = (inputCoreq) => {\r\n    if (inputCoreq === null || inputCoreq.length === 0) return [];\r\n    let allcoreq = inputCoreq.slice();\r\n    \r\n    for (let i = 0; i < allcoreq.length; i++){\r\n      let first = allcoreq[i];\r\n      \r\n      for (let j = allcoreq.length - 1; j > i; j--){\r\n        let second = allcoreq[j];\r\n        if (intersects(first, second)){\r\n          allcoreq[i] = [...new Set(first.concat(second))];\r\n          allcoreq.splice(j,1);\r\n        }\r\n      }\r\n    }\r\n    return allcoreq;\r\n  }\r\n\r\nconst intersects = (first, second) => {\r\n    if (first === null || second === null) return false;\r\n    return first.findIndex(value => second.includes(value)) !== -1;\r\n  }\r\n\r\nconst getCoursesFromCodes = (codes, allcourses) =>{\r\n    allcourses = [].concat.apply([], allcourses);\r\n    let filtered = allcourses.filter(c => (codes.includes(c.code)));\r\n    return filtered;\r\n} \r\n\r\nconst deleteCoursesFromPrereq = (prereq, courseCodes) => {\r\n    // first delete the courseCode entry from the prerequisite map\r\n    courseCodes.forEach(courseCode => {\r\n        if (Object.prototype.hasOwnProperty.call(prereq, courseCode)) {\r\n            delete prereq[courseCode];\r\n        }\r\n    });\r\n    \r\n\r\n    // then delete the courseCodes if it is a prereq (value) for any other entry\r\n    for (let entry in prereq) {\r\n        if (Object.prototype.hasOwnProperty.call(prereq, entry)) {\r\n            prereq[entry] = prereq[entry].filter(c => !courseCodes.includes(c));\r\n            if (prereq[entry].length === 0){\r\n                delete prereq[entry];\r\n            }\r\n        }\r\n    }\r\n    \r\n    return prereq;\r\n}\r\n\r\nconst deleteCoursesFromCoreq = (coreq, courseCodes) => {\r\n\r\n\r\n    courseCodes.forEach(courseCode => { \r\n        // find the index of the 'set' that contains the courseCode, -1 if the code is not in any set\r\n        let index = coreq.findIndex(courseSet => courseSet.includes(courseCode));\r\n        if (index > -1){\r\n            coreq[index] = coreq[index].filter(c => c !== courseCode);\r\n            if (coreq[index].length === 0 || coreq[index].length === 1){\r\n                coreq.splice(index, 1);\r\n            }\r\n        }\r\n    });\r\n\r\n\r\n\r\n    return coreq;\r\n}\r\n\r\n\r\n\r\nconst courseReducer = (state = initialState, action) => {\r\n    let term, termList, courseCode, i;\r\n    switch(action.type){\r\n        case courseTypes.ADD_TERM: \r\n            return {\r\n                ...state,\r\n                courses: \r\n                action.payload === -1\r\n                ? state.courses.concat([[]])\r\n                : concatAtIndex(state.courses, action.payload, []) // Not Tested\r\n            };\r\n        case courseTypes.REMOVE_TERM: \r\n\r\n            if (action.payload === -1){\r\n                return {\r\n                    ...state,\r\n                    courses: state.courses.slice(0, state.courses.length - 1),\r\n                    prereq: deleteCoursesFromPrereq(state.prereq, state.courses[state.courses.length - 1].map(c => c.code)),\r\n                    coreq: deleteCoursesFromCoreq(state.coreq, state.courses[state.courses.length - 1].map(c => c.code)),\r\n                    \r\n                    selectedCourse: (state.selectedCourse && state.courses[state.courses.length - 1].includes(state.selectedCourse))? null: state.selectedCourse,\r\n                    selectedTerm: (state.selectedCourse && state.courses[state.courses.length - 1].includes(state.selectedCourse))? null: state.selectedTerm,\r\n\r\n                }\r\n            }else{\r\n                // Not Tested\r\n                return {\r\n                    ...state,\r\n                    courses: removeAtIndex(state.courses, action.payload),  \r\n                    prereq: deleteCoursesFromPrereq(state.prereq, state.courses[action.payload].map(c => c.code)),\r\n                    coreq: deleteCoursesFromCoreq(state.coreq, state.courses[action.payload].map(c => c.code)),\r\n                                        \r\n                    selectedCourse: (state.selectedCourse && state.courses[action.payload].includes(state.selectedCourse))? null: state.selectedCourse,\r\n                    selectedTerm: (state.selectedCourse && state.courses[action.payload].includes(state.selectedCourse))? null: state.selectedTerm,\r\n\r\n                }\r\n            }\r\n            \r\n\r\n        case courseTypes.ADD_COURSE:\r\n            courseCode = action.payload.courseCode;\r\n            term = action.payload.term;\r\n            const course = CourseClass.EmptyCourse();\r\n            course.code = courseCode;\r\n            termList = state.courses.slice();\r\n            termList[term].push(course);\r\n            return {\r\n                ...state,\r\n                courses: termList\r\n            }\r\n        case courseTypes.EDIT_COURSE:\r\n            let { editedCourse } = action.payload;\r\n            term = action.payload.term;\r\n            termList = state.courses.slice();\r\n            termList[term] = termList[term].map(course => {\r\n                if (course.code === editedCourse.code){\r\n                    return editedCourse;\r\n                }else{\r\n                    return course;\r\n                } \r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                courses: termList\r\n            }\r\n\r\n        case courseTypes.DELETE_COURSE:\r\n            termList = state.courses.slice();\r\n            term = action.payload.term;\r\n            i = termList[term].findIndex(course => course.code === action.payload.courseCode);\r\n            termList[term].splice(i, 1);\r\n            return {\r\n                ...state,\r\n                courses: termList,\r\n                prereq: deleteCoursesFromPrereq(state.prereq, [action.payload.courseCode]),\r\n                coreq: deleteCoursesFromCoreq(state.coreq, [action.payload.courseCode]),\r\n                selectedCourse: (state.selectedCourse && action.payload.courseCode === state.selectedCourse.code)? null: state.selectedCourse,\r\n                selectedTerm: (state.selectedCourse && action.payload.courseCode === state.selectedCourse.code)? null: state.selectedTerm,\r\n            }\r\n        case courseTypes.FILTER:\r\n            let { category, value } = action.payload;\r\n            const unfiltered = [].concat.apply([], state.courses);\r\n            let filtered;\r\n            if(category === '1'){\r\n                filtered = unfiltered.filter(val => (val.grade > value));\r\n            }else if(category === '2'){\r\n                filtered = unfiltered.filter(val => (val.grade < value));\r\n            }else if(category === '3'){\r\n                filtered = unfiltered.filter(val => (val.grade === value));\r\n            }else if(category === '4'){\r\n                filtered = unfiltered.filter(val => (val.grade >= value));\r\n            }else if(category === '5'){\r\n                filtered = unfiltered.filter(val => (val.grade <= value));\r\n            }else{\r\n                filtered = unfiltered;\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                filteredCourses: filtered\r\n            }\r\n        case courseTypes.CLEAR_FILTER:\r\n            return {\r\n                ...state,\r\n                filteredCourses: []\r\n            }\r\n        case courseTypes.TOGGLE_SELECT:\r\n            const { selectedCourse } = state;\r\n            if(selectedCourse && selectedCourse.code === action.payload){\r\n                return {\r\n                    ...state,\r\n                    selectedCourse: null,\r\n                    selectedTerm: null,  \r\n                    filteredCourses: [],\r\n                }\r\n            }\r\n            let x, y;\r\n            for (x = 0; x < state.courses.length; x++){\r\n                y = state.courses[x].findIndex(val => val.code.trim() === action.payload.trim());\r\n        \r\n                if (y >= 0){\r\n        \r\n                  \r\n                  return{\r\n                      ...state,\r\n                    selectedCourse: state.courses[x][y],\r\n                    selectedTerm: x,  \r\n                    filteredCourses: []\r\n                  };\r\n                  \r\n                }\r\n              }\r\n        \r\n\r\n              return state;\r\n        case courseTypes.CLEAR_SELECT:\r\n            return {\r\n                ...state,\r\n                selectedCourse: null,\r\n                selectedTerm: null\r\n            }\r\n\r\n        case courseTypes.EDIT_PREREQ:\r\n            let prereqcopy = state.prereq;\r\n            prereqcopy[action.payload.courseCode] = action.payload.prereqCourses;\r\n            if (prereqcopy[action.payload.courseCode].length === 0){\r\n                delete prereqcopy[action.payload.courseCode];\r\n            }\r\n            return {\r\n                ...state,\r\n                prereq: prereqcopy\r\n            }\r\n        case courseTypes.EDIT_COREQ:\r\n            courseCode = action.payload.courseCode;\r\n            let coreqCourses = action.payload.coreqCourses;\r\n            let coreqcopy = state.coreq.slice();\r\n            // find the index of the 'set' that contains the courseCode, -1 if the code is not in any set\r\n            let index = coreqcopy.findIndex(courseSet => courseSet.includes(courseCode));\r\n\r\n            // if there are no supplied coreqs\r\n            // the user wants there to be no coreqCourses for this course\r\n            if (coreqCourses.length === 0){\r\n            \r\n                // delete the courseCode if index >= 0\r\n                if (index >= 0){\r\n                    coreqcopy[index].splice(coreqcopy[index].findIndex(c => c.code === courseCode), 1);\r\n                    if (coreqcopy[index].length === 0 || coreqcopy[index].length === 1){\r\n                        coreqcopy.splice(index, 1);\r\n                    }\r\n                    return {\r\n                        ...state,\r\n                        coreq: coreqcopy\r\n                    }\r\n                }\r\n                return state;\r\n            }\r\n\r\n            // if there are supplied coreqCourses\r\n\r\n\r\n            // if the course is not in the coreq list\r\n            if (index < 0){\r\n                // check if any of the coreq courses are already in the list. \r\n                // want to maintain only one set with each course\r\n                for (i = 0; i < coreqcopy.length; i++){\r\n                    if (coreqcopy[i].findIndex(c => coreqCourses.includes(c)) >= 0){\r\n                        index = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (index < 0){\r\n                // not in the list\r\n                coreqcopy.push([]);\r\n                coreqcopy[coreqcopy.length - 1].push(...coreqCourses, courseCode);\r\n            }else{\r\n                // if within the list\r\n                // concat the coreqlist \r\n        \r\n                // line below allows for deleting courses not found in coreqCourses \r\n                // in the case where the user is removing a course from the set\r\n                coreqcopy[index] = [...coreqCourses, courseCode];\r\n                \r\n                // remove duplicate values\r\n                coreqcopy[index] = [...new Set(coreqcopy[index])];\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                // function directly below helps prevent double entries\r\n                // If there are two sets that intersect,it will combine them.\r\n                // And if the user is combining a set with a single course, the set will be destroyed.\r\n                // (i.e. selecting a course that is not in a set and combining it with another that \r\n                // is in a set, the set of the later course will be destroyed, \r\n                // if both courses are each within different sets both sets will be combined)\r\n                // this function could behave weirdly with the code above that looks like:\r\n                // coreqcopy[index] = [...coreqCourses, courseCode]\r\n                // as that code deletes the previous set\r\n                coreq: combineCoreqSets(coreqcopy), \r\n            };\r\n\r\n        case courseTypes.SHOW_PREREQ:\r\n            const val = state.prereq[action.payload];\r\n            if (val !== undefined){\r\n                let filtered = getCoursesFromCodes(val, state.courses);\r\n                return {\r\n                    ...state,\r\n                    filteredCourses: filtered,\r\n                };\r\n            }\r\n            return {\r\n                ...state,\r\n                filteredCourses: []\r\n            };\r\n\r\n        case courseTypes.SHOW_COREQ:\r\n            \r\n            let selectedCoreqIndex = state.coreq\r\n            .findIndex(cl => cl.includes(action.payload));\r\n            \r\n            if (selectedCoreqIndex >= 0){\r\n                let list = state.coreq[selectedCoreqIndex];\r\n                list = list.filter(li => (li !== courseCode));\r\n                let filtered = getCoursesFromCodes(list, state.courses);\r\n                return{\r\n                    ...state,\r\n                    filteredCourses: filtered,\r\n                };\r\n            }\r\n            return {\r\n                ...state,\r\n                filteredCourses: []\r\n            };\r\n\r\n        case courseTypes.LOAD_COURSES:\r\n            return {\r\n                ...state,\r\n                courses: action.payload.courses,\r\n                prereq: action.payload.prereq,\r\n                coreq: action.payload.coreq\r\n            }\r\n\r\n        case courseTypes.DRAG_ENTER:\r\n            const newCourses = JSON.parse(JSON.stringify(state.courses));\r\n            const {params, currentItem} = action.payload;\r\n            newCourses[params.termI].splice(params.courseI, 0, newCourses[currentItem.termI].splice(currentItem.courseI, 1)[0]);\r\n            return {\r\n                ...state,\r\n                courses: newCourses,\r\n                selectedCourse: null,\r\n                selectedTerm: null,\r\n                filteredCourses: []\r\n            }\r\n\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default courseReducer;\r\n\r\n\r\n\r\n","import * as focusTypes from './focusTypes';\r\n\r\nconst initialState = {\r\n    currentFocusedElm: null,\r\n    style: null\r\n}\r\n\r\n\r\n\r\nconst focusReducer = (state = initialState, action) => {\r\n    \r\n    switch(action.type){\r\n        case focusTypes.CHANGE_FOCUS:\r\n            return {\r\n                ...state,\r\n                currentFocusedElm: action.payload\r\n            }\r\n        case focusTypes.CHANGE_STYLE:\r\n            return {\r\n                ...state,\r\n                style: action.payload\r\n            }\r\n        case focusTypes.BLUR_FOCUS:\r\n            return {\r\n                ...state,\r\n                currentFocusedElm: null,\r\n                style: null\r\n            }\r\n        \r\n        default: return state;\r\n    }\r\n\r\n}\r\nexport default focusReducer; ","import { combineReducers } from 'redux';\r\n\r\nimport courseReducer from './course/courseReducer';\r\nimport settingsReducer from './settings/settingsReducer';\r\nimport focusReducer from './focus/focusReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n   courses: courseReducer,\r\n   settings: settingsReducer,\r\n   focus: focusReducer\r\n});\r\n\r\nexport default rootReducer;","import { compose, createStore, applyMiddleware } from 'redux';\r\nimport logger from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './rootReducer';\r\nconst store = createStore(rootReducer, compose(applyMiddleware(logger, thunk)));\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n\r\n"],"sourceRoot":""}