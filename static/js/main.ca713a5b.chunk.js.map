{"version":3,"sources":["componenets/model/CourseClass.js","componenets/AddCourse.js","componenets/Course.js","componenets/Term.js","componenets/AddTerm.js","componenets/RemoveTerm.js","componenets/ProgramMap.js","componenets/layout/Header.js","componenets/pages/About.js","componenets/SaveChanges.js","componenets/GradeFilter.js","componenets/SideView.js","componenets/ResetChanges.js","componenets/Notification.js","App.js","serviceWorker.js","index.js"],"names":["CourseClass","name","code","grade","credits","this","AddCourse","props","onSubmit","e","preventDefault","state","courseCode","handleClickAddCourse","term","setState","message","onChange","target","value","style","addCourseStyle","inputStyle","type","placeholder","buttonStyle","className","Component","propType","PropTypes","func","isRequired","number","display","flexDirection","fontWeight","textAlign","justifyContent","height","width","padding","marginTop","borderRadius","Course","editedCourse","courseName","course","handleClickEditCourse","onSelect","selectButton","focus","handleClickSelectCourse","appliedclasses","isHighlighted","isSelected","courseStyle","ref","sButton","onClick","handleClickDeleteCourse","bind","instanceOf","bool","background","Term","index","termNumber","termDisplay","key","termDisplayStyle","coursesDisplay","courseList","map","val","ind","highlighted","undefined","filteredCourses","find","val1","selectedCourse","length","array","object","AddTerm","handleClickAddTerm","addNewTermStyle","RemoveTerm","handleClickRemoveTerm","removeTermStyle","ProgramMap","rows","courses","includes","colSpan","maxCourseYears","headerStyle","border","color","linkStyle","textDecoration","Header","to","About","Fragment","SaveChanges","onSaveClick","GradeFilter","category","onClickFilterByCategory","gradeFilterStyle","id","defaultValue","btnStyle","flexWrap","cursor","SideView","action","removedValue","getSelectOption","label","getValueFromSelectOption","option","sendNotification","console","log","prereqCourses","prs","handleClickEditPrereq","coreqCourses","crs","handleClickEditCoreq","newProps","equal","updateState","first","second","result","JSON","stringify","prereq","coreq","selectedTerm","selectedPrereqList","selectPrereq","slice","selectOptionsPrereq","concat","apply","filter","selectedCoreqList","selectedCoreqIndex","findIndex","cl","c","selectOptionsCoreq","shouldShow","sideViewStyle","form","sytle","formStyle","tableStyle","buttonShowStyle","handleClickShowPrereq","handleClickShowCoreq","styles","customStyles","isMulti","options","margin","container","provided","control","overflowY","ResetChanges","onResetClick","Container","styled","div","top","emitter","ee","Notification","onShow","msg","timeout","clearTimeout","setTimeout","showNotification","on","App","newCourses","push","EmptyCourse","i","splice","handleOnClickFilterByCategory","unfiltered","filtered","emit","notify","j","allcourses","trim","prereqcopy","coreqcopy","courseSet","Set","combineCoreqSets","clearFilteredCourses","getCoursesFromCodes","list","li","populateCourseData","window","confirm","dataStringCourses","localStorage","getItem","localStorageKey","dataStringPrereq","dataStringCoreq","dataObjectCourses","parse","dataObjectPrereq","dataObjectCoreq","setItem","Math","max","inputCoreq","allcoreq","intersects","codes","exact","path","render","getMaxCourseForYears","saveCourseData","resetChanges","component","apiurlpartial","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.ca713a5b.chunk.js","sourcesContent":["  \r\nexport default class CourseClass {\r\n    constructor(name, code, grade, credits){\r\n        this.name = name;\r\n        this.code = code;\r\n        this.grade = grade;\r\n        this.credits = credits;\r\n    }\r\n\r\n  static EmptyCourse()\r\n  {\r\n      return new CourseClass('NA', 'NA', 0.0, 1.0);\r\n  }\r\n};","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class AddCourse extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            courseCode: '',\r\n            message:'Enter the course code'\r\n        }\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (!this.state.courseCode){\r\n            this.setState({\r\n                message: \"Must enter course code\"\r\n            });\r\n        }else{\r\n        this.props.handleClickAddCourse(this.props.term,this.state.courseCode);\r\n        }\r\n    }\r\n\r\n    onChange = (e) => this.setState({[e.target.name]: e.target.value });\r\n\r\n    render() {\r\n        return (\r\n      \r\n            <form\r\n            onSubmit={this.onSubmit}\r\n            style={addCourseStyle}\r\n            >\r\n            <span>{this.state.message}</span>\r\n                <input \r\n                    style={inputStyle}\r\n                    type=\"text\"\r\n                    name=\"courseCode\"\r\n                    placeholder=\"Course Code Here...\"\r\n                    value={this.state.courseCode}\r\n                    onChange={this.onChange}\r\n\r\n                />\r\n                <input \r\n                    style={buttonStyle}\r\n                    type=\"submit\"\r\n                    value=\"Add a new course (+)\"\r\n                    className=\"btn btn-add\"\r\n                 />\r\n            </form>\r\n        \r\n        )\r\n    }\r\n}\r\n\r\n\r\n// PropTypes\r\nAddCourse.propType = {\r\n    handleClickAddCourse: PropTypes.func.isRequired,\r\n    term: PropTypes.number.isRequired,\r\n}\r\n\r\n\r\nconst addCourseStyle = {\r\n    display:'flex', \r\n    flexDirection:'column',\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n    justifyContent: 'space-around',\r\n    height: 'auto',\r\n    width: 'auto',\r\n    padding: '5px',\r\n};\r\n\r\nconst buttonStyle = {\r\n    marginTop:'2px',\r\n    borderRadius: '5px',\r\n}\r\n\r\nconst inputStyle = {\r\n    marginTop:'2px',\r\n    borderRadius: '5px',\r\n    padding:'2px 4px',\r\n}\r\n\r\n\r\n\r\nexport default AddCourse\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport CourseClass from './model/CourseClass';\r\n\r\nexport class Course extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            courseName: this.props.course.name,\r\n            grade: this.props.course.grade,\r\n            credits:this.props.course.credits,\r\n        }\r\n        this.selectButton = null;\r\n    }\r\n\r\n    \r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        let editedCourse = \r\n        new CourseClass(this.state.courseName, this.props.course.code, this.state.grade, this.state.credits);\r\n        \r\n        this.props.handleClickEditCourse(this.props.term, editedCourse);\r\n    }\r\n\r\n    onChange = (e) => this.setState({[e.target.name]: e.target.value });\r\n\r\n    onSelect = (e) => {\r\n        if(this.selectButton){\r\n            this.selectButton.focus();\r\n        }\r\n        this.props.handleClickSelectCourse(this.props.course.code)\r\n    }\r\n\r\n    render(){\r\n       const {code, name, grade, credits} = this.props.course;\r\n        let appliedclasses = \"course \";\r\n        appliedclasses += this.props.isHighlighted? \"highlighted \" : \" \";\r\n        appliedclasses += this.props.isSelected? \"selected \" : \" \";\r\n       return(\r\n            <form \r\n            onSubmit={this.onSubmit}\r\n            style={courseStyle}\r\n            className={appliedclasses}\r\n            >\r\n                <span>\r\n                    <label>Course Code:</label>{' '}\r\n                    {code}\r\n                </span>\r\n                <span>\r\n                    <label>Name:</label>{' '}\r\n                    {name}\r\n                </span>\r\n                <span>\r\n                    <label>New Name:</label>{' '}\r\n                    <input \r\n         \r\n                        style={inputStyle}\r\n                        type=\"text\"\r\n                        name=\"courseName\"\r\n                        value={this.state.courseName}\r\n                        onChange={this.onChange}\r\n                    />\r\n                </span>\r\n                <span>\r\n                    <label>Grade:</label>{' '}\r\n                    {grade}\r\n                </span>\r\n                <span>\r\n                    <label>New Grade:</label>{' '}\r\n                    <input \r\n                        style={inputStyle}\r\n                        type=\"text\"\r\n                        name=\"grade\"\r\n                        value={this.state.grade}\r\n                        onChange={this.onChange}\r\n                    />\r\n                </span>\r\n                <span>\r\n                    <label>Credits/Units:</label>{' '}\r\n                    {credits}\r\n                </span>\r\n                <span>\r\n                    <label>New Credits:</label>{' '}\r\n                    <input \r\n                        style={inputStyle}\r\n                        type=\"text\"\r\n                        name=\"credits\"\r\n                        value={this.state.credits}\r\n                        onChange={this.onChange}\r\n                    />\r\n                </span>\r\n                <input \r\n                    ref={(sButton) => {this.selectButton = sButton;}}\r\n                    style={buttonStyle}\r\n                    type=\"button\"\r\n                    value={this.props.isSelected?\"Deselect\":\"Select\"}\r\n                    className=\"btn\"\r\n                    onClick={\r\n                        this.onSelect\r\n                    }\r\n                />\r\n                <input \r\n                    style={buttonStyle}\r\n                    type=\"submit\"\r\n                    value=\"Set changes\"\r\n                    className=\"btn btn-save\"\r\n                    \r\n                />\r\n                <input \r\n                    style={buttonStyle}\r\n                    type=\"button\"\r\n                    value=\"Delete(-)\"\r\n                    className=\"btn btn-delete\"\r\n                    onClick={\r\n                        this.props.handleClickDeleteCourse.bind(this, this.props.term, this.props.course.code)\r\n                    }\r\n                />\r\n                \r\n            </form>\r\n            \r\n       )\r\n\r\n         \r\n\r\n    }\r\n}\r\n\r\n\r\n// PropTypes\r\nCourse.propType = {\r\n    handleClickEditCourse: PropTypes.func.isRequired,\r\n    course: PropTypes.instanceOf(CourseClass).isRequired,\r\n    term: PropTypes.number.isRequired,\r\n    isSelected: PropTypes.bool.isRequired,\r\n    handleClickDeleteCourse: PropTypes.func.isRequired,\r\n    handleClickSelectCourse: PropTypes.func.isRequired,\r\n    isHighlighted: PropTypes.bool.isRequired,\r\n}\r\n\r\nconst inputStyle = {\r\n    width: '100%',\r\n    background: 'lightgrey',\r\n    borderRadius: '5px',\r\n    padding:'2px 4px',\r\n}\r\n\r\nconst courseStyle = {\r\n    display:'flex', \r\n    flexDirection:'column',\r\n    borderRadius: '5px',\r\n    fontWeight: 'bold',\r\n    height: 'auto',\r\n    width: 'auto',\r\n    padding: '5px', \r\n};\r\n\r\nconst buttonStyle = {\r\n    marginTop:'2px',\r\n    borderRadius: '5px',\r\n}\r\n\r\nexport default Course","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport AddCourse from './AddCourse';\r\nimport Course from './Course';\r\n\r\n\r\nexport class Term extends Component {\r\n    render() {\r\n        //console.log(this.props.filteredCourses);\r\n        const index = this.props.termNumber;\r\n        const termDisplay = (<th key={index + \"x\" + -1} style={termDisplayStyle}>{index}</th>);\r\n        const coursesDisplay = \r\n        this.props.courseList.map((val, ind) => {\r\n                        \r\n            const highlighted = (this.props.filteredCourses.find(val1 => \r\n                (val1.code === val.code)) !== undefined);\r\n                //console.log(highlighted);\r\n            \r\n\r\n            let isSelected = false;\r\n                if (this.props.selectedCourse){\r\n                    isSelected = (this.props.selectedCourse.code === val.code);\r\n                }\r\n            \r\n            return (<td key={index + \"x\" + ind}>\r\n                <Course \r\n                    term={index}\r\n                    handleClickEditCourse={this.props.handleClickEditCourse}\r\n                    handleClickDeleteCourse={this.props.handleClickDeleteCourse}\r\n                    handleClickSelectCourse={this.props.handleClickSelectCourse}\r\n                    course={val}\r\n                    isSelected={isSelected}\r\n                    isHighlighted={highlighted}\r\n                    \r\n                />\r\n            </td>);\r\n        });\r\n        const newCourseButtonDisplay = (\r\n        <td key={index + \"x\" + (coursesDisplay.length + 1)}>\r\n            <AddCourse \r\n                term={this.props.termNumber}\r\n                handleClickAddCourse={this.props.handleClickAddCourse}\r\n            />\r\n        </td>);\r\n\r\n        return (\r\n            \r\n            [termDisplay, coursesDisplay, newCourseButtonDisplay]\r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n// PropTypes\r\nTerm.propType = {\r\n    courseList: PropTypes.array.isRequired,\r\n    termNumber: PropTypes.number.isRequired,\r\n    handleClickAddCourse: PropTypes.func.isRequired,\r\n    handleClickEditCourse: PropTypes.func.isRequired,\r\n    handleClickDeleteCourse: PropTypes.func.isRequired,\r\n    handleClickSelectCourse: PropTypes.func.isRequired,\r\n    selectedCourse: PropTypes.object.isRequired,\r\n    filteredCourses: PropTypes.array.isRequired,\r\n}\r\n\r\nconst termDisplayStyle = {\r\n    textAlign:'center',\r\n    height:'250px'\r\n};\r\n\r\nexport default Term\r\n","import PropTypes from 'prop-types';\r\nimport React, { Component } from 'react'\r\n\r\nexport class AddTerm extends Component {\r\n    render() {\r\n        return (\r\n            \r\n        <button \r\n        type=\"button\" \r\n        onClick={this.props.handleClickAddTerm} \r\n        style={addNewTermStyle}\r\n        className=\"btn btn-add\"\r\n        >\r\n            Add a new term\r\n        </button>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n// PropTypes\r\nAddTerm.propType = {\r\n    termNumber: PropTypes.number.isRequired,\r\n    handleClickAddTerm: PropTypes.func.isRequired,\r\n}\r\n\r\nconst addNewTermStyle = {\r\n    width:'100%',\r\n};\r\n\r\n\r\nexport default  AddTerm;","import PropTypes from 'prop-types';\r\nimport React, { Component } from 'react'\r\n\r\nexport class RemoveTerm extends Component {\r\n    render() {\r\n        return (\r\n            \r\n        <button \r\n        type=\"button\" \r\n        onClick={this.props.handleClickRemoveTerm} \r\n        style={removeTermStyle}\r\n        className=\"btn btn-delete\"\r\n        >\r\n            Remove the last term\r\n        </button>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n// PropTypes\r\nRemoveTerm.propType = {\r\n    termNumber: PropTypes.number.isRequired,\r\n    handleClickRemoveTerm: PropTypes.func.isRequired,\r\n}\r\n\r\nconst removeTermStyle = {\r\n    width:'100%',\r\n};\r\n\r\n\r\nexport default RemoveTerm;","import React, { Component } from 'react';\r\nimport Term from './Term';\r\n//import { v3, v4, v5 } from 'uuid'\r\nimport PropTypes from 'prop-types';\r\nimport AddTerm from './AddTerm';\r\nimport RemoveTerm from './RemoveTerm';\r\n\r\nexport class ProgramMap extends Component {\r\n\r\n    render() {\r\n        const rows = this.props.courses.map((courseList, index) => {\r\n            let isSelected = false;\r\n                if (this.props.selectedCourse){\r\n                    isSelected = courseList.includes(this.props.selectedCourse);\r\n                }\r\n            \r\n            return <tr \r\n            className={isSelected?\"selected-term\":\"\"}\r\n            key={index}>\r\n            {\r\n                <Term \r\n                    \r\n                    selectedCourse={this.props.selectedCourse}\r\n                  termNumber={index}\r\n                  courseList={courseList}\r\n                  handleClickAddCourse={this.props.handleClickAddCourse}\r\n                  handleClickEditCourse={this.props.handleClickEditCourse}\r\n                  handleClickSelectCourse={this.props.handleClickSelectCourse}\r\n                  handleClickDeleteCourse={this.props.handleClickDeleteCourse}\r\n                  filteredCourses={this.props.filteredCourses}\r\n                />\r\n            }\r\n            </tr>;\r\n    \r\n        });\r\n        return (\r\n        <table className=\"courseTable\"> \r\n            <thead>\r\n                <tr>\r\n                    <th>Term</th>\r\n                    <th \r\n                    colSpan={this.props.maxCourseYears + 1}\r\n                    >\r\n                        Courses\r\n                    </th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {rows}\r\n                <tr>\r\n                    <td \r\n                    key={rows.length + 1}\r\n                    colSpan={this.props.maxCourseYears + 2}>\r\n                    <AddTerm \r\n                    termNumber={rows.length + 1}\r\n                    handleClickAddTerm={this.props.handleClickAddTerm}\r\n                    />\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td \r\n                    key={rows.length + 2}\r\n                    colSpan={this.props.maxCourseYears + 2}>\r\n                    <RemoveTerm \r\n                    termNumber={rows.length - 1}\r\n                    handleClickRemoveTerm={this.props.handleClickRemoveTerm}\r\n                    />\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n        )\r\n    }\r\n}\r\n\r\n// PropTypes\r\nProgramMap.propType = {\r\n    handleClickAddTerm: PropTypes.func.isRequired,\r\n    handleClickRemoveTerm: PropTypes.func.isRequired,\r\n    handleClickAddCourse: PropTypes.func.isRequired,\r\n    handleClickEditCourse: PropTypes.func.isRequired,\r\n    handleClickDeleteCourse: PropTypes.func.isRequired,\r\n    handleClickSelectCourse: PropTypes.func.isRequired,\r\n    maxCourseYears: PropTypes.number.isRequired,\r\n    courses: PropTypes.array.isRequired,\r\n    selectedCourse: PropTypes.object.isRequired,\r\n    filteredCourses: PropTypes.array.isRequired\r\n}\r\n\r\n\r\n\r\nexport default ProgramMap\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header style={headerStyle}>\r\n            <h1>Program Map Helper</h1>\r\n            <Link style={linkStyle} to=\"/\">Home</Link> | {' '}  \r\n            <Link style={linkStyle} to=\"/about\">About</Link> \r\n        </header>\r\n    )\r\n}\r\n\r\n\r\nconst headerStyle = {\r\n    border: '2px solid black',\r\n    background: '#677',\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    padding: '10px'\r\n}\r\n\r\nconst linkStyle = {\r\n    color: '#fff',\r\n    textDecoration: 'none'\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react'\r\n\r\nfunction About() {\r\n    return (\r\n        <React.Fragment>\r\n          <h1>About</h1> \r\n          <p>This is the app to help plan and aid program outline v1.0.0.</p> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default About;\r\n","import React from 'react'\r\n\r\nfunction SaveChanges(props) {\r\n    return (\r\n        <button\r\n            onClick={props.onSaveClick}\r\n            style={buttonStyle}\r\n            className=\"btn btn-save\"\r\n        >\r\n            Save the changes\r\n        </button>\r\n    )\r\n}\r\nconst buttonStyle = {\r\n    borderRadius:'5px 0 0 0',\r\n    border:'2px solid black',\r\n    background: '#55F',\r\n};\r\n\r\nexport default SaveChanges;\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class GradeFilter extends Component {\r\n        \r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            category: '2',\r\n            val: 0.0\r\n        };\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const {category, val} = this.state;\r\n        this.props.onClickFilterByCategory(category, val);\r\n    }\r\n\r\n    onChange = (e) => this.setState({[e.target.name]: e.target.value });\r\n\r\n    \r\n    render() {\r\n        return (\r\n            \r\n            <form style={gradeFilterStyle}\r\n            onSubmit={this.onSubmit}\r\n\r\n            >\r\n                <label>Find courses with grade </label>\r\n                {'  '}\r\n                <select \r\n                id=\"filter\"\r\n                name=\"category\"\r\n                onChange={this.onChange}\r\n                defaultValue={this.state.category}\r\n                >\r\n                    <option value={1}>greater than</option>\r\n                    <option value={2}>less than</option>\r\n                    <option value={3}>equal to</option>\r\n                    <option value={4}>greater than or equal to</option>\r\n                    <option value={5}>less than or equal to</option>\r\n                </select>\r\n                {'  '}\r\n\r\n                <input type=\"text\" onChange={this.onChange}  name=\"val\" value={this.state.value} placeholder={0.0} />\r\n                {'  '}\r\n                <input style={btnStyle} type=\"submit\" value=\"Filter\"/>\r\n            </form>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n// PropTypes\r\nGradeFilter.propType = {\r\n    onClickFilterByCategory: PropTypes.func.isRequired,\r\n}\r\n\r\nconst gradeFilterStyle = {\r\n    padding: '5px 15px',\r\n    width: 'auto',\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent:'space-evenly',\r\n    background: '#566',\r\n    borderRadius: '0 5px 0 0',\r\n    border: '2px solid black',\r\n    color: 'white'\r\n};\r\n\r\nconst btnStyle = {\r\n    display: 'inline-block',\r\n    border: 'none',\r\n    background: '#67F',\r\n    borderRadius: '5px',\r\n    color: '#fff',\r\n    padding: '2px 10px',\r\n    cursor: 'pointer',\r\n};\r\n\r\nexport default GradeFilter\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport Select from 'react-select'\r\n\r\nexport class SideView extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            prereqCourses:[],\r\n            coreqCourses:[],\r\n\r\n        };\r\n    }\r\n    \r\n    // New onChange(for 'react-select' component)\r\n    onChange = (value, { name, action, removedValue }) => {\r\n        switch (action) {\r\n          case 'remove-value':\r\n            \r\n          case 'pop-value':\r\n            break;\r\n          case 'clear':\r\n            break;\r\n            default:\r\n        }\r\n        \r\n        this.setState({ \r\n            [name]: value \r\n        });\r\n    }\r\n\r\n    // Transforms a course into a format used by 'react-select'\r\n    getSelectOption = (course) => {\r\n        return {value: course.code, label: course.code };\r\n    }\r\n    // Transforms from 'react-select' option format to course code\r\n    getValueFromSelectOption = (option) => {\r\n        return option.value;\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        // Notify the user that their changes have been set\r\n        this.props.sendNotification(\"Changes set\");\r\n        \r\n        // New onSubmit code\r\n        // must extract the value from the react-select components\r\n        const code = this.props.selectedCourse.code;\r\n        console.log(\"submitted\");\r\n        if (this.state.prereqCourses == null){\r\n            this.setState({\r\n                prereqCourses:  [],\r\n            })\r\n        }\r\n        console.log(\"prereq\");\r\n        const prs = this.state.prereqCourses.map(option => this.getValueFromSelectOption(option));\r\n        console.log(prs);\r\n        this.props.handleClickEditPrereq(code, prs);\r\n        \r\n\r\n        if(this.state.coreqCourses == null){\r\n            this.setState({\r\n                coreqCourses:  [],\r\n            })\r\n        }\r\n        const crs = this.state.coreqCourses.map(option => this.getValueFromSelectOption(option));\r\n        console.log(\"coreq\");\r\n        console.log(crs);\r\n        this.props.handleClickEditCoreq(code, crs);\r\n        \r\n    }\r\n\r\n    \r\n\r\n    \r\n    // this doesn't get called after a user deletes a course\r\n    // only componentWillUpdate gets called\r\n    componentWillReceiveProps(newProps){\r\n        console.log(\"Inside componentWillReceiveProps\");\r\n        console.log(this.props);\r\n        console.log(newProps);\r\n        \r\n        \r\n        // Only update the state (and then the UI) if the component\r\n        // receives a new set of props\r\n        console.log(\"Are the oldProp and newProp equal?\");\r\n        if (!this.equal(this.props, newProps)){\r\n            this.updateState(newProps);\r\n        }\r\n    }\r\n    \r\n\r\n\r\n    equal(first, second){\r\n        const result = JSON.stringify(first) === JSON.stringify(second);\r\n        console.log(\"result: \" + result);\r\n        return result;\r\n    }\r\n\r\n    \r\n\r\n    updateState(newProps){\r\n\r\n        const {selectedCourse, prereq, coreq, courses, selectedTerm} = newProps;\r\n\r\n        \r\n        if (!selectedCourse) return;\r\n\r\n        let selectedPrereqList = prereq[selectedCourse.code];\r\n        if (!selectedPrereqList){\r\n            selectedPrereqList = [];\r\n        }\r\n\r\n        console.log(\"selectedPrereqList\");\r\n        console.log(selectedPrereqList);\r\n        \r\n        let selectPrereq = courses.slice(0, selectedTerm);\r\n        let selectOptionsPrereq = [].concat.apply([], selectPrereq); // flatten the 2d array\r\n        \r\n        // get the full course details of the courses that are prereq\r\n        selectOptionsPrereq = selectOptionsPrereq\r\n        .filter(course => {\r\n            return course.code !== selectedCourse.code && selectedPrereqList.includes(course.code);\r\n        });\r\n        \r\n\r\n\r\n        let selectedCoreqIndex = coreq\r\n        .findIndex(cl => (cl.findIndex(c => c === selectedCourse.code) >= 0));\r\n        \r\n\r\n        let selectedCoreqList;\r\n        if (selectedCoreqIndex < 0){\r\n            selectedCoreqList = [];\r\n        }else{\r\n            selectedCoreqList = coreq[selectedCoreqIndex];\r\n        }\r\n\r\n        console.log(\"selectedCoreqList\");\r\n        console.log(selectedCoreqList);\r\n\r\n        \r\n        // get the full course details of the courses that are coreq\r\n        console.log(selectedTerm);\r\n        let selectOptionsCoreq = courses[selectedTerm];\r\n        if (selectOptionsCoreq == null){\r\n            selectOptionsCoreq = [];\r\n        }\r\n        selectOptionsCoreq = selectOptionsCoreq\r\n        .filter(course => {\r\n            return course.code !== selectedCourse.code && selectedCoreqList.includes(course.code) ;\r\n        });\r\n        \r\n\r\n        \r\n        this.setState({\r\n            prereqCourses: selectOptionsPrereq.map(c => this.getSelectOption(c)),\r\n            coreqCourses: selectOptionsCoreq.map(c => this.getSelectOption(c)),\r\n        });\r\n        \r\n            \r\n        \r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const shouldShow = (this.props.selectedCourse !== null);\r\n        \r\n        if (!shouldShow){\r\n            return (\r\n                <div style={sideViewStyle}>\r\n                    <h2>Advanced Course Edit</h2>\r\n                    <p>You must select a course first</p>\r\n                </div>\r\n            );\r\n        }\r\n        \r\n        \r\n        const {courses, selectedTerm, selectedCourse, prereq, coreq} = this.props;\r\n\r\n        // Prerequisites\r\n        let selectedPrereqList = prereq[selectedCourse.code];\r\n        if (!selectedPrereqList){\r\n            selectedPrereqList = [];\r\n        }\r\n\r\n        let selectPrereq = courses.slice(0, selectedTerm);\r\n        let selectOptionsPrereq = [].concat.apply([], selectPrereq); // flatten the 2d array\r\n        if (shouldShow){\r\n            selectOptionsPrereq = selectOptionsPrereq\r\n            .filter(course => {\r\n                return course.code !== selectedCourse.code;\r\n            })\r\n            .map((course) =>{\r\n                return this.getSelectOption(course);\r\n            });\r\n        }\r\n        \r\n        // Corequisites\r\n        let selectedCoreqIndex = coreq\r\n        .findIndex(cl => cl.includes(selectedCourse.code));\r\n        let selectedCoreqList;\r\n        if (selectedCoreqIndex < 0){\r\n            selectedCoreqList = [];\r\n        }else{\r\n            selectedCoreqList = coreq[selectedCoreqIndex];\r\n           \r\n        }\r\n\r\n\r\n\r\n        let selectOptionsCoreq = courses[selectedTerm];\r\n        if (shouldShow){\r\n            if (selectOptionsCoreq == null){\r\n                selectOptionsCoreq = [];\r\n            }\r\n            selectOptionsCoreq = selectOptionsCoreq\r\n            .filter(course => {\r\n                return course.code !== selectedCourse.code;\r\n            })\r\n            .map(course =>{\r\n                return this.getSelectOption(course);\r\n            });\r\n        }\r\n\r\n\r\n       \r\n        const form = \r\n                <form\r\n                onSubmit={this.onSubmit}\r\n                sytle={formStyle}\r\n                >\r\n                    <h3>For course: {(shouldShow)?this.props.selectedCourse.code:\"\"}</h3>\r\n                    <br />\r\n                    \r\n                    <table style={tableStyle}>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>\r\n                                    <label>Pre-Requisites</label>\r\n                                </th>\r\n                                <th></th>\r\n                                <th>\r\n                                    <label>Co-Requisites</label>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>\r\n                                    <input \r\n                                        className=\"btnShow\"\r\n                                        style={buttonShowStyle}\r\n                                        type=\"button\" \r\n                                        value=\"Highlight Pre-requisites\" \r\n                                        onClick={this.props.handleClickShowPrereq.bind(this, selectedCourse.code)}\r\n\r\n                                    />\r\n                                </td>\r\n                                <td>\r\n\r\n                                </td>\r\n                                <td>\r\n                                    <input \r\n                                        className=\"btnShow\"\r\n                                        style={buttonShowStyle}\r\n                                        type=\"button\" \r\n                                        value=\"Highlight Co-requisites\"\r\n                                        onClick={this.props.handleClickShowCoreq.bind(this, selectedCourse.code)}\r\n                                    />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td style={{textAlign:'center', fontWeight:'bold'}} colSpan={3}>\r\n                                    Remember to click accept changes after making changes\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <Select \r\n                                        \r\n                                        styles={customStyles}\r\n                                        onChange={this.onChange}\r\n                                        name=\"prereqCourses\"\r\n                                        isMulti \r\n                                        options={selectOptionsPrereq}\r\n                                        value={this.state.prereqCourses}\r\n                                    />\r\n                                </td>\r\n                                <td></td>\r\n                                <td>\r\n                                    <Select \r\n                                        \r\n                                        styles={customStyles}\r\n                                        onChange={this.onChange}\r\n                                        name=\"coreqCourses\"\r\n                                        isMulti \r\n                                        options={selectOptionsCoreq}\r\n                                        value={this.state.coreqCourses}\r\n                                    />\r\n                                </td>\r\n                            </tr>\r\n\r\n                        </tbody>\r\n                    </table>\r\n                    \r\n                    <input className=\"btn btn-save\" type=\"submit\" value=\"Accept Changes\"/>\r\n                </form>\r\n                ;\r\n\r\n\r\n\r\n\r\n        return (\r\n            <div style={sideViewStyle}>\r\n                \r\n                <h2>Advanced Course Edit</h2>\r\n                \r\n                {\r\n                    form\r\n                }\r\n            </div>\r\n        );\r\n        \r\n    }\r\n}   \r\n\r\n\r\n// PropTypes\r\nSideView.propType = {\r\n    sendNotification: PropTypes.func.isRequired,\r\n    handleClickEditCourse: PropTypes.func.isRequired,\r\n    courses: PropTypes.array.isRequired,\r\n    selectedTerm: PropTypes.number.isRequired,\r\n    selectedCourse: PropTypes.object.isRequired,\r\n    prereq: PropTypes.array.isRequired,\r\n    coreq: PropTypes.array.isRequired,\r\n    handleClickEditPrereq: PropTypes.func.isRequired,\r\n    handleClickEditCoreq: PropTypes.func.isRequired,\r\n}\r\n\r\nconst sideViewStyle = {\r\n    background: 'lightgrey',\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    border: '2px solid grey',     \r\n}\r\n\r\nconst buttonShowStyle = {\r\n    \r\n}\r\n\r\nconst tableStyle = {\r\n    border: 'none'\r\n\r\n}\r\n\r\nconst formStyle = {\r\n    border: 'none',\r\n    margin: '0 auto',\r\n}\r\n\r\n// Custom style for 'react-select', uses Emotion JS\r\nconst customStyles = {\r\n    container: (provided, state) => ({\r\n        ...provided,\r\n        // none of react-select's styles are passed to <Control />\r\n        width: 250,\r\n      }),\r\n\r\n      control: (provided, state) => ({\r\n        ...provided,\r\n        overflowY: 'scroll',\r\n        height: 30,\r\n      }),\r\n\r\n\r\n}\r\n\r\n\r\nexport default SideView\r\n","import React from 'react'\r\n\r\nfunction ResetChanges(props) {\r\n    return (\r\n        <button\r\n            onClick={props.onResetClick}\r\n            style={buttonStyle}\r\n            className=\"btn btn-reset\"\r\n        >\r\n            Reset the changes\r\n        </button>\r\n    )\r\n}\r\nconst buttonStyle = {\r\n    borderRadius:'0 0 0 0',\r\n    border:'2px solid black',\r\n    background: 'rgb(241, 83, 83)',\r\n};\r\n\r\nexport default ResetChanges;\r\n","import React, { Component } from 'react'\r\nimport styled from 'styled-components';\r\nimport ee from 'event-emitter';\r\n\r\nconst Container = styled.div\r\n`\r\n    background-color: #444;\r\n    color: white;\r\n    padding: 16px;\r\n    position: absolute;\r\n    top: ${props => props.top}px;\r\n    right: 16px;\r\n    z-index: 999;\r\n    transition: top 0.5s ease;\r\n\r\n`;\r\n\r\nconst emitter = new ee();\r\n\r\nexport const notify = (msg) => {\r\n    emitter.emit('notification', msg);\r\n}\r\n\r\nexport class Notification extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            top: -100,\r\n            msg: '',\r\n        };\r\n\r\n        this.timeout = null;\r\n\r\n        emitter.on('notification', (msg) => {\r\n            this.onShow(msg);\r\n        });\r\n    }\r\n\r\n    onShow = (msg) => {\r\n        if (this.timeout){\r\n            clearTimeout(this.timeout);\r\n            this.setState({ top: -100}, () => {\r\n                this.timeout = setTimeout(() => {\r\n                    this.showNotification(msg);\r\n                }, 500);\r\n            });\r\n        }else{\r\n            this.showNotification(msg);\r\n        }\r\n    }\r\n\r\n    showNotification = (msg) => {\r\n        this.setState({\r\n            top: 100,\r\n            msg\r\n        }, () => {\r\n            this.timeout = setTimeout(() => {\r\n                this.setState({\r\n                    top: -100,\r\n                });\r\n            }, 3000)\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container top={this.state.top}>{this.state.msg}</Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Notification\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n//import { v3, v4, v5 } from 'uuid'\nimport './App.css';\nimport CourseClass from './componenets/model/CourseClass';\nimport ProgramMap from './componenets/ProgramMap';\nimport Header from './componenets/layout/Header';\nimport About from './componenets/pages/About';\nimport SaveChanges from './componenets/SaveChanges';\nimport GradeFilter from './componenets/GradeFilter';\nimport SideView from './componenets/SideView';\nimport ResetChanges from './componenets/ResetChanges';\nimport Notification, { notify } from './componenets/Notification';\n\nclass App extends Component {\n  static apiurlpartial = '';\n  static localStorageKey = 'courses';\n  constructor(props){\n    super(props);\n    this.state = { \n      courses: [[]], // 2d array, 1st dim = terms, 2nd dim = courses\n      filteredCourses: [], // array of courses to highlight\n      prereq: {}, // will be treated as a map/dictionary, stores all prerequisites for each course, values are arrays\n      coreq: [], // will be treated as an array of sets(but implmented as a 2d array)\n      selectedCourse: null, // current selected course\n      selectedTerm: null // current selected term\n    };\n    \n  }\n\n  componentDidMount(){\n    this.populateCourseData();\n  }\n\n  resetChanges(){\n    let confirmed = window.confirm(\"Are you sure you want to reset to the last saved changes?\");\n    if (!confirmed){\n      return;\n    }\n    this.populateCourseData();\n    this.setState({\n      filteredCourses: [],\n      selectedCourse: null,\n      selectedTerm: null\n    });\n  }\n\n\n  /* Local Storage Saving / Retrieving */\n  populateCourseData(){\n    const dataStringCourses = localStorage.getItem(App.localStorageKey);\n    const dataStringPrereq = localStorage.getItem(App.localStorageKey+\"prereq\");\n    const dataStringCoreq = localStorage.getItem(App.localStorageKey+\"coreq\");\n    //alert(\"retrieved \" + JSON.parse(dataString) + \" from localStorage.\");\n    if (!dataStringCourses){\n      return;\n    }\n    const dataObjectCourses = JSON.parse(dataStringCourses);\n    const dataObjectPrereq = JSON.parse(dataStringPrereq);\n    const dataObjectCoreq = JSON.parse(dataStringCoreq);\n\n\n    this.setState({\n      courses: dataObjectCourses,\n      prereq: (dataObjectPrereq)?dataObjectPrereq:this.state.prereq,\n      coreq: (dataObjectCoreq)?dataObjectCoreq:this.state.coreq,\n    });\n    \n\n  }\n\n  saveCourseData(){\n    let confirmed = window.confirm(\"Are you sure you want to save all the changes?\");\n    if (!confirmed){\n      return;\n    }\n    //alert(\"saving \" + JSON.stringify(this.state.courses) + \" into localStorage.\");\n    localStorage.setItem(App.localStorageKey, JSON.stringify(this.state.courses));\n    localStorage.setItem(App.localStorageKey+\"prereq\", JSON.stringify(this.state.prereq));\n    localStorage.setItem(App.localStorageKey+\"coreq\", JSON.stringify(this.state.coreq));\n  }\n\n\n  /* Basic Edits (Used in Course) */\n\n  // Adding a new term\n  handleClickAddTerm = () => {\n    //console.log(\"Adding a term\");\n    let newCourses = this.state.courses.slice();\n    newCourses.push([]);\n    this.setState({\n        courses: newCourses,\n    });\n    \n  }\n\n  // Removing th last term\n  handleClickRemoveTerm = () => {\n    if (this.state.courses.length === 0){\n      return;\n    }\n   \n    this.setState({\n      courses: this.state.courses.slice(0, this.state.courses.length - 1),\n    });\n  }\n\n  // Adding a new course\n  handleClickAddCourse = (term, courseCode) => {\n        \n    let courseList = this.state.courses.slice();\n    let course = CourseClass.EmptyCourse();\n    course.code = courseCode;\n    courseList[term].push(course);\n    this.setState({\n        courses: courseList,\n    });\n  }\n\n  // Editing an existing course\n  handleClickEditCourse = (term, editedCourse) => {\n    let courseList = this.state.courses.slice();\n    courseList[term] = courseList[term].map(c => {\n      if (c.code === editedCourse.code){\n        return editedCourse;\n      }else{\n        return c;\n      }\n    });\n    this.setState({\n        courses: courseList,\n    });\n  }\n\n  // Deleting an existing course\n  handleClickDeleteCourse = (term, courseCode) => {\n    let courseList = this.state.courses.slice();\n    let i = courseList[term].findIndex(course => course.code === courseCode);\n    if (i >= 0){\n      courseList[term].splice(i, 1);\n      this.setState({\n          courses: courseList,\n      });\n    }\n  }\n\n  // Finding/Filtering course with specific GPA\n  handleOnClickFilterByCategory = (category, value) => {\n    this.setState({\n      selectedCourse: null, // current selected course\n      selectedTerm: null // current selected term\n    });\n    const unfiltered = [].concat.apply([], this.state.courses);\n    let filtered = [];\n    //console.log(unfiltered);\n    switch(category){\n      case '1': // greater than\n        filtered = unfiltered.filter(val => (val.grade > value));\n        break;\n      case '2': // less than\n      filtered = unfiltered.filter(val => (val.grade < value));\n          break;\n      case '3': // equal\n      filtered = unfiltered.filter(val => (val.grade === value));\n        break;\n      case '4': // greater than or equal to\n        filtered = unfiltered.filter(val => (val.grade >= value));\n            break;\n      case '5': // less than or equal to\n        filtered = unfiltered.filter(val => (val.grade <= value));\n          break;\n      default:\n        \n    }\n    //console.log(filtered);\n\n    this.setState({\n      filteredCourses: filtered,\n    });\n    //console.log(this.state.filteredCourses);\n\n  }\n\n  // Clear all the course that were filtered and highlighted\n  clearFilteredCourses(){\n    this.setState({\n      filteredCourses: [],\n    });\n  }\n\n  // Finding the max number of courses out of all terms\n  getMaxCourseForYears(){\n      const max = Math.max(...this.state.courses.map((val, index) => val.length));\n      return max;\n  }\n\n  sendNotification = (msg) => {\n    notify(msg);\n  }\n\n\n\n  /* Advanced Edit (Used in SideView) */\n\n  // Selecting a course given courseCode\n  handleClickSelectCourse = (courseCode) => {\n    const { selectedCourse } = this.state;\n    if(selectedCourse && selectedCourse.code == courseCode){\n      // deselect the course\n      this.setState({\n        selectedCourse: null,\n        selectedTerm: null,  \n        filteredCourses: [],\n      });\n      return;\n    }\n    // else\n    \n    let allcourses = this.state.courses;\n    let i;\n    let j;\n    console.log(courseCode);\n\n    for (i = 0; i < allcourses.length; i++){\n        j = allcourses[i].findIndex(val => val.code.trim() === courseCode.trim());\n\n        if (j >= 0){\n\n          console.log(\"found at \" + i + \" \" + j);\n          this.setState({\n            selectedCourse: allcourses[i][j],\n            selectedTerm: i,  \n            filteredCourses: [],\n          });\n          //console.log(this.state.selectedCourse);\n          break;\n        }\n      }\n    \n    \n  }\n\n  // Editing the prerequisites given a the courseCode and a list of courseCodes of the prerequisites courses\n  // GUI side (component) enforces whether two courses are prerequisites\n  handleClickEditPrereq = (courseCode, prereqCourses) => {\n    console.log(\"Setting prereq of course: \" + courseCode + \" to \" + prereqCourses);\n    let prereqcopy = this.state.prereq;\n    prereqcopy[courseCode] = prereqCourses;\n    this.setState({\n      prereq: prereqcopy\n    });\n\n    //console.log(this.state.prereq);\n  }\n\n  // Same as above except with corequisites\n  handleClickEditCoreq = (courseCode, coreqCourses) => {\n    \n    console.log(\"Setting coreq of course: \" + courseCode + \" to \" + coreqCourses);\n    let coreqcopy = this.state.coreq.slice();\n    // find the index of the 'set' that contains the courseCode, -1 if the code is not in any set\n    let index = coreqcopy.findIndex(courseSet => courseSet.includes(courseCode));\n    console.log(index);\n    \n    // if there are no supplied coreqs\n    // the user wants there to be no coreqCourses for this course\n    if (coreqCourses.length === 0){\n      \n      // delete the courseCode if index >= 0\n      if (index >= 0){\n        coreqcopy[index].splice(coreqcopy[index].findIndex(c => c.code === courseCode), 1);\n        if (coreqcopy[index].length === 0 || coreqcopy[index].length === 1){\n          coreqcopy.splice(index, 1);\n        }\n        \n        console.log(coreqcopy);\n        this.setState({\n          coreq: coreqcopy,\n        });\n      }\n      return;\n    }\n    \n    // if there are supplied coreqCourses\n\n\n    // if the course is not in the coreq list\n    if (index < 0){\n      // check if any of the coreq courses are already in the list. \n      // want to maintain only one set with each course\n      for (let i = 0; i < coreqcopy.length; i++){\n        if (coreqcopy[i].findIndex(c => coreqCourses.includes(c)) >= 0){\n          index = i;\n          console.log(\"found a match at index: \" + index);\n          break;\n        }\n      }\n    }\n    \n    if (index < 0){\n      // not in the list\n      coreqcopy.push([]);\n      coreqcopy[coreqcopy.length - 1].push(...coreqCourses, courseCode);\n    }else{\n      // if within the list\n      // concat the coreqlist \n\n       // line below allows for deleting courses not found in coreqCourses \n       // in the case where the user is removing a course from the set\n      coreqcopy[index] = [...coreqCourses, courseCode];\n      \n      // remove duplicate values\n      coreqcopy[index] = [...new Set(coreqcopy[index])];\n    }\n\n\n\n    console.log(coreqcopy);\n    this.setState({\n      // function directly below helps prevent double entries\n      // If there are two sets that intersect,it will combine them.\n      // And if the user is combining a set with a single course, the set will be destroyed.\n      // (i.e. selecting a course that is not in a set and combining it with another that \n      // is in a set, the set of the later course will be destroyed, \n      // if both courses are each within different sets both sets will be combined)\n      // this function could behave weirdly with the code above that looks like:\n      // coreqcopy[index] = [...coreqCourses, courseCode]\n      // as that code deletes the previous set\n      coreq: this.combineCoreqSets(coreqcopy), \n    });\n    \n    \n  }\n\n  // Goes through each of the sets in the coreq and combines them if they intersects with another\n  combineCoreqSets(inputCoreq){\n    if (inputCoreq === null || inputCoreq.length === 0) return [];\n    let allcoreq = inputCoreq.slice();\n    \n    for (let i = 0; i < allcoreq.length; i++){\n      let first = allcoreq[i];\n      \n      for (let j = allcoreq.length - 1; j > i; j--){\n        let second = allcoreq[j];\n        if (this.intersects(first, second)){\n          allcoreq[i] = [...new Set(first.concat(second))];\n          allcoreq.splice(j,1);\n        }\n      }\n    }\n    console.log(\"all coreq are:\");\n    console.log(allcoreq);\n    return allcoreq;\n  }\n\n  intersects(first, second){\n    if (first === null || second === null) return false;\n    return first.findIndex(value => second.includes(value)) !== -1;\n  }\n\n\n\n\n\n  // Takes a list of the course codes and converts them into full course object \n  // Disregards the codes that have no associated matching course in the state\n  getCoursesFromCodes(codes){\n    const allcourses = [].concat.apply([], this.state.courses);\n    let filtered = allcourses.filter(c => (codes.includes(c.code)));\n    return filtered;\n  } \n\n\n  // Highlghts the prerequisite courses given the course code\n  handleClickShowPrereq = (courseCode) => {\n    this.clearFilteredCourses();\n    const val = this.state.prereq[courseCode];\n    if (val !== undefined){\n      let filtered = this.getCoursesFromCodes(val);\n      this.setState({\n        filteredCourses: filtered,\n      });\n    }\n  }\n  // Same as above except for corequisites\n  handleClickShowCoreq = (courseCode) => {\n    this.clearFilteredCourses();\n    let selectedCoreqIndex = this.state.coreq\n    .findIndex(cl => cl.includes(courseCode));\n    if (selectedCoreqIndex >= 0){\n      let list = this.state.coreq[selectedCoreqIndex];\n      list = list.filter(li => (li !== courseCode));\n      let filtered = this.getCoursesFromCodes(list);\n      this.setState({\n        filteredCourses: filtered,\n      });\n    }\n  }\n\n  render(){\n      return(\n        <Router>\n          <div className=\"App\">\n            <div className=\"container\">\n              <Header />\n              <Notification />\n              <Route exact path=\"\"\n              render={props => (\n                <React.Fragment>\n                  <div className=\"inner\">\n                    <div className=\"inner-top\">\n                    \n                      <ProgramMap \n                        handleClickAddTerm={this.handleClickAddTerm}\n                        handleClickRemoveTerm={this.handleClickRemoveTerm}\n                        handleClickAddCourse={this.handleClickAddCourse}\n                        handleClickEditCourse={this.handleClickEditCourse}\n                        handleClickSelectCourse={this.handleClickSelectCourse}\n                        handleClickDeleteCourse={this.handleClickDeleteCourse}\n                        maxCourseYears={this.getMaxCourseForYears()}\n                        courses={this.state.courses}\n                        selectedCourse={this.state.selectedCourse}\n                        filteredCourses={this.state.filteredCourses}\n                      />\n        \n                    </div>\n                    <div className={(this.state.selectedCourse==null)?\"inner-bottom\":\"inner-bottom expanded\"}>\n                      <div className=\"inner-bottom-head\">\n                        <SaveChanges\n                          onSaveClick={() => this.saveCourseData()}\n                        />\n                        <ResetChanges \n                          onResetClick={() => this.resetChanges()}\n                        />\n                        <GradeFilter\n                          onClickFilterByCategory={this.handleOnClickFilterByCategory}\n                        />\n                        \n                      </div>\n                      <div className=\"inner-bottom-foot\">\n                        <SideView \n                          sendNotification={this.sendNotification}\n                          handleClickEditCourse={this.handleClickEditCourse}\n                          courses={this.state.courses}\n                          selectedTerm={(this.state.selectedCourse)? this.state.selectedTerm : null}\n                          selectedCourse={this.state.selectedCourse}\n                          prereq={this.state.prereq}\n                          coreq={this.state.coreq}\n                          handleClickEditPrereq={this.handleClickEditPrereq}\n                          handleClickEditCoreq={this.handleClickEditCoreq}\n                          handleClickShowPrereq={this.handleClickShowPrereq}\n                          handleClickShowCoreq={this.handleClickShowCoreq}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </React.Fragment>\n              )} />\n              <Route path=\"/about\" component={About} />\n            </div>\n          </div>\n        </Router>\n      );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n\r\n"],"sourceRoot":""}