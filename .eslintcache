[{"C:\\Users\\josh_\\reactapps\\gt-app\\src\\index.js":"1","C:\\Users\\josh_\\reactapps\\gt-app\\src\\serviceWorker.js":"2","C:\\Users\\josh_\\reactapps\\gt-app\\src\\App.js":"3","C:\\Users\\josh_\\reactapps\\gt-app\\src\\redux\\store.js":"4","C:\\Users\\josh_\\reactapps\\gt-app\\src\\redux\\index.js":"5","C:\\Users\\josh_\\reactapps\\gt-app\\src\\redux\\rootReducer.js":"6","C:\\Users\\josh_\\reactapps\\gt-app\\src\\componenets\\Notification.js":"7","C:\\Users\\josh_\\reactapps\\gt-app\\src\\componenets\\layout\\Header.js":"8","C:\\Users\\josh_\\reactapps\\gt-app\\src\\componenets\\Home.js":"9","C:\\Users\\josh_\\reactapps\\gt-app\\src\\componenets\\pages\\About.js":"10","C:\\Users\\josh_\\reactapps\\gt-app\\src\\componenets\\Settings.js":"11","C:\\Users\\josh_\\reactapps\\gt-app\\src\\componenets\\pages\\Instructions.js":"12","C:\\Users\\josh_\\reactapps\\gt-app\\src\\redux\\settings\\settingsReducer.js":"13","C:\\Users\\josh_\\reactapps\\gt-app\\src\\styles\\components\\appStyles.js":"14","C:\\Users\\josh_\\reactapps\\gt-app\\src\\styles\\base\\base.js":"15","C:\\Users\\josh_\\reactapps\\gt-app\\src\\redux\\settings\\settingsActions.js":"16","C:\\Users\\josh_\\reactapps\\gt-app\\src\\redux\\focus\\focusActions.js":"17","C:\\Users\\josh_\\reactapps\\gt-app\\src\\redux\\course\\courseActions.js":"18","C:\\Users\\josh_\\reactapps\\gt-app\\src\\styles\\components\\homeStyles.js":"19","C:\\Users\\josh_\\reactapps\\gt-app\\src\\styles\\components\\headerStyles.js":"20","C:\\Users\\josh_\\reactapps\\gt-app\\src\\redux\\course\\courseReducer.js":"21","C:\\Users\\josh_\\reactapps\\gt-app\\src\\redux\\focus\\focusReducer.js":"22","C:\\Users\\josh_\\reactapps\\gt-app\\src\\componenets\\SideView.js":"23","C:\\Users\\josh_\\reactapps\\gt-app\\src\\componenets\\SaveChanges.js":"24","C:\\Users\\josh_\\reactapps\\gt-app\\src\\componenets\\CGPACalculator.js":"25","C:\\Users\\josh_\\reactapps\\gt-app\\src\\componenets\\ResetChanges.js":"26","C:\\Users\\josh_\\reactapps\\gt-app\\src\\componenets\\ProgramMap.js":"27","C:\\Users\\josh_\\reactapps\\gt-app\\src\\componenets\\GradeFilter.js":"28","C:\\Users\\josh_\\reactapps\\gt-app\\src\\componenets\\GPASettings.js":"29","C:\\Users\\josh_\\reactapps\\gt-app\\src\\redux\\settings\\settingsTypes.js":"30","C:\\Users\\josh_\\reactapps\\gt-app\\src\\componenets\\SideViewHeader.js":"31","C:\\Users\\josh_\\reactapps\\gt-app\\src\\redux\\focus\\focusTypes.js":"32","C:\\Users\\josh_\\reactapps\\gt-app\\src\\redux\\course\\courseTypes.js":"33","C:\\Users\\josh_\\reactapps\\gt-app\\src\\styles\\components\\programmapStyles.js":"34","C:\\Users\\josh_\\reactapps\\gt-app\\src\\styles\\components\\sideviewStyles.js":"35","C:\\Users\\josh_\\reactapps\\gt-app\\src\\componenets\\Term.js":"36","C:\\Users\\josh_\\reactapps\\gt-app\\src\\componenets\\Progression.js":"37","C:\\Users\\josh_\\reactapps\\gt-app\\src\\componenets\\AddTerm.js":"38","C:\\Users\\josh_\\reactapps\\gt-app\\src\\componenets\\RemoveTerm.js":"39","C:\\Users\\josh_\\reactapps\\gt-app\\src\\componenets\\model\\CourseClass.js":"40","C:\\Users\\josh_\\reactapps\\gt-app\\src\\hooks\\useWindowSize.js":"41","C:\\Users\\josh_\\reactapps\\gt-app\\src\\styles\\components\\animations.js":"42","C:\\Users\\josh_\\reactapps\\gt-app\\src\\componenets\\Course.js":"43","C:\\Users\\josh_\\reactapps\\gt-app\\src\\componenets\\AddCourse.js":"44","C:\\Users\\josh_\\reactapps\\gt-app\\src\\lib\\progression.js":"45","C:\\Users\\josh_\\reactapps\\gt-app\\src\\lib\\arboreal.js":"46","C:\\Users\\josh_\\reactapps\\gt-app\\src\\componenets\\ImportExportSettings.js":"47","C:\\Users\\josh_\\reactapps\\gt-app\\src\\componenets\\CourseAnalyzer.js":"48","C:\\Users\\josh_\\reactapps\\gt-app\\src\\styles\\themes\\themes.js":"49"},{"size":675,"mtime":1598974126115,"results":"50","hashOfConfig":"51"},{"size":5086,"mtime":499162500000,"results":"52","hashOfConfig":"51"},{"size":6838,"mtime":1622749927857,"results":"53","hashOfConfig":"51"},{"size":281,"mtime":1599121333446,"results":"54","hashOfConfig":"51"},{"size":123,"mtime":1599705763217,"results":"55","hashOfConfig":"51"},{"size":364,"mtime":1599705799120,"results":"56","hashOfConfig":"51"},{"size":2353,"mtime":1612693488100,"results":"57","hashOfConfig":"51"},{"size":3288,"mtime":1615246046211,"results":"58","hashOfConfig":"51"},{"size":7165,"mtime":1622860821440,"results":"59","hashOfConfig":"51"},{"size":432,"mtime":1616382660938,"results":"60","hashOfConfig":"51"},{"size":1581,"mtime":1623198092750,"results":"61","hashOfConfig":"51"},{"size":3977,"mtime":1616383784957,"results":"62","hashOfConfig":"51"},{"size":1833,"mtime":1614830493571,"results":"63","hashOfConfig":"51"},{"size":425,"mtime":1615159830998,"results":"64","hashOfConfig":"51"},{"size":625,"mtime":1615162735366,"results":"65","hashOfConfig":"51"},{"size":1584,"mtime":1614829062170,"results":"66","hashOfConfig":"51"},{"size":1122,"mtime":1615219330772,"results":"67","hashOfConfig":"51"},{"size":2577,"mtime":1622944559148,"results":"68","hashOfConfig":"51"},{"size":4005,"mtime":1623263842965,"results":"69","hashOfConfig":"51"},{"size":1033,"mtime":1615198037380,"results":"70","hashOfConfig":"51"},{"size":15747,"mtime":1622944550592,"results":"71","hashOfConfig":"51"},{"size":768,"mtime":1600406514025,"results":"72","hashOfConfig":"51"},{"size":10301,"mtime":1615337089556,"results":"73","hashOfConfig":"51"},{"size":478,"mtime":1613102989284,"results":"74","hashOfConfig":"51"},{"size":4531,"mtime":1623262244996,"results":"75","hashOfConfig":"51"},{"size":529,"mtime":1613102999116,"results":"76","hashOfConfig":"51"},{"size":5820,"mtime":1622947449541,"results":"77","hashOfConfig":"51"},{"size":1855,"mtime":1623262168219,"results":"78","hashOfConfig":"51"},{"size":6740,"mtime":1600824907034,"results":"79","hashOfConfig":"51"},{"size":368,"mtime":1614828924015,"results":"80","hashOfConfig":"51"},{"size":3279,"mtime":1623263411185,"results":"81","hashOfConfig":"51"},{"size":131,"mtime":1600403420075,"results":"82","hashOfConfig":"51"},{"size":708,"mtime":1622944467902,"results":"83","hashOfConfig":"51"},{"size":5792,"mtime":1623447687995,"results":"84","hashOfConfig":"51"},{"size":1768,"mtime":1615165337120,"results":"85","hashOfConfig":"51"},{"size":4238,"mtime":1623370760123,"results":"86","hashOfConfig":"51"},{"size":5891,"mtime":1605365843832,"results":"87","hashOfConfig":"88"},{"size":692,"mtime":1600559059887,"results":"89","hashOfConfig":"51"},{"size":1297,"mtime":1600559080864,"results":"90","hashOfConfig":"51"},{"size":300,"mtime":1596501913788,"results":"91","hashOfConfig":"51"},{"size":1195,"mtime":1604576258259,"results":"92","hashOfConfig":"51"},{"size":472,"mtime":1601442252423,"results":"93","hashOfConfig":"51"},{"size":7582,"mtime":1623447686427,"results":"94","hashOfConfig":"51"},{"size":2455,"mtime":1623371570211,"results":"95","hashOfConfig":"51"},{"size":684,"mtime":1599178279862,"results":"96","hashOfConfig":"88"},{"size":5809,"mtime":1598975870028,"results":"97","hashOfConfig":"88"},{"size":7598,"mtime":1612692150167,"results":"98","hashOfConfig":"51"},{"size":3384,"mtime":1623262195520,"results":"99","hashOfConfig":"51"},{"size":785,"mtime":1622737297113,"results":"100","hashOfConfig":"51"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},"sur1cr",{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"103"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"178"},"1h1q034",{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"197","usedDeprecatedRules":"178"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"103"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},"C:\\Users\\josh_\\reactapps\\gt-app\\src\\index.js",[],["205","206"],"C:\\Users\\josh_\\reactapps\\gt-app\\src\\serviceWorker.js",[],"C:\\Users\\josh_\\reactapps\\gt-app\\src\\App.js",[],"C:\\Users\\josh_\\reactapps\\gt-app\\src\\redux\\store.js",[],"C:\\Users\\josh_\\reactapps\\gt-app\\src\\redux\\index.js",[],"C:\\Users\\josh_\\reactapps\\gt-app\\src\\redux\\rootReducer.js",[],"C:\\Users\\josh_\\reactapps\\gt-app\\src\\componenets\\Notification.js",[],"C:\\Users\\josh_\\reactapps\\gt-app\\src\\componenets\\layout\\Header.js",[],"C:\\Users\\josh_\\reactapps\\gt-app\\src\\componenets\\Home.js",[],"C:\\Users\\josh_\\reactapps\\gt-app\\src\\componenets\\pages\\About.js",[],"C:\\Users\\josh_\\reactapps\\gt-app\\src\\componenets\\Settings.js",[],"C:\\Users\\josh_\\reactapps\\gt-app\\src\\componenets\\pages\\Instructions.js",[],"C:\\Users\\josh_\\reactapps\\gt-app\\src\\redux\\settings\\settingsReducer.js",[],"C:\\Users\\josh_\\reactapps\\gt-app\\src\\styles\\components\\appStyles.js",[],"C:\\Users\\josh_\\reactapps\\gt-app\\src\\styles\\base\\base.js",[],"C:\\Users\\josh_\\reactapps\\gt-app\\src\\redux\\settings\\settingsActions.js",[],"C:\\Users\\josh_\\reactapps\\gt-app\\src\\redux\\focus\\focusActions.js",[],"C:\\Users\\josh_\\reactapps\\gt-app\\src\\redux\\course\\courseActions.js",[],"C:\\Users\\josh_\\reactapps\\gt-app\\src\\styles\\components\\homeStyles.js",[],"C:\\Users\\josh_\\reactapps\\gt-app\\src\\styles\\components\\headerStyles.js",[],"C:\\Users\\josh_\\reactapps\\gt-app\\src\\redux\\course\\courseReducer.js",[],"C:\\Users\\josh_\\reactapps\\gt-app\\src\\redux\\focus\\focusReducer.js",[],"C:\\Users\\josh_\\reactapps\\gt-app\\src\\componenets\\SideView.js",["207"],"import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { StyledButtonShow, StyledSelect, StyledContainer, StyleResponsiveContainer } from '../styles/components/sideviewStyles';\r\nimport { StyledButtonSave } from '../styles/components/programmapStyles';\r\n// import Progression from './Progression';\r\n\r\n\r\nfunction SideView ({\r\n    sendNotification,\r\n    selectedCourse,\r\n    selectedTerm,\r\n    handleClickEditPrereq,\r\n    handleClickEditCoreq,\r\n    prereq, \r\n    coreq, \r\n    courses,\r\n    handleClickShowPrereq,\r\n    handleClickShowCoreq\r\n}) {\r\n\r\n    \r\n    const [state, setState] = useState({\r\n        prereqCourses: [],\r\n        coreqCourses:[]\r\n    });\r\n\r\n    \r\n    // New onChange(for 'react-select' component)\r\n    const onChange = (value, { name, action, removedValue }) => {\r\n        switch (action) {\r\n          case 'remove-value':\r\n            break;\r\n          case 'pop-value':\r\n            break;\r\n          case 'clear':\r\n            break;\r\n            default:\r\n        }\r\n        \r\n        setState({ \r\n            ...state,\r\n            [name]: value \r\n        });\r\n    }\r\n\r\n    // Transforms a course into a format used by 'react-select'\r\n    const getSelectOption = (course) => {\r\n        return {value: course.code, label: course.code };\r\n    }\r\n    // Transforms from 'react-select' option format to course code\r\n    const getValueFromSelectOption = (option) => {\r\n        return option.value;\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        // Notify the user that their changes have been set\r\n        sendNotification(\"Changes set\");\r\n        \r\n        // New onSubmit code\r\n        // must extract the value from the react-select components\r\n        const code = selectedCourse.code;\r\n        console.log(\"submitted\");\r\n        \r\n        let pC = state.prereqCourses || [];\r\n\r\n\r\n        console.log(\"prereq\");\r\n        const prs = pC.map(option => getValueFromSelectOption(option));\r\n        console.log(prs);\r\n        handleClickEditPrereq(code, prs);\r\n        \r\n\r\n        let cC = state.coreqCourses || [];\r\n\r\n        console.log(\"coreq\");\r\n        const crs = cC.map(option => getValueFromSelectOption(option));\r\n        \r\n        console.log(crs);\r\n        handleClickEditCoreq(code, crs);\r\n        //forceUpdate();\r\n\r\n        // Somehow the Progression child Component only recieves \r\n        // props and then rerenders when \r\n        // state changes locally in this component\r\n        setState({...state});\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        updateState();\r\n    }, [ prereq, coreq, courses, selectedCourse, selectedTerm]);\r\n    \r\n\r\n\r\n    \r\n\r\n    const updateState = () => {\r\n\r\n        if (!selectedCourse) return;\r\n\r\n        let selectedPrereqList = prereq[selectedCourse.code];\r\n        if (!selectedPrereqList){\r\n            selectedPrereqList = [];\r\n        }\r\n\r\n        console.log(\"selectedPrereqList\");\r\n        console.log(selectedPrereqList);\r\n        \r\n        let selectPrereq = courses.slice(0, selectedTerm);\r\n        let selectOptionsPrereq = [].concat.apply([], selectPrereq); // flatten the 2d array\r\n        \r\n        // get the full course details of the courses that are prereq\r\n        selectOptionsPrereq = selectOptionsPrereq\r\n        .filter(course => {\r\n            return course.code !== selectedCourse.code && selectedPrereqList.includes(course.code);\r\n        });\r\n        \r\n\r\n\r\n        let selectedCoreqIndex = coreq\r\n        .findIndex(cl => (cl.findIndex(c => c === selectedCourse.code) >= 0));\r\n        \r\n\r\n        let selectedCoreqList;\r\n        if (selectedCoreqIndex < 0){\r\n            selectedCoreqList = [];\r\n        }else{\r\n            selectedCoreqList = coreq[selectedCoreqIndex];\r\n        }\r\n\r\n        console.log(\"selectedCoreqList\");\r\n        console.log(selectedCoreqList);\r\n\r\n        \r\n        // get the full course details of the courses that are coreq\r\n        console.log(selectedTerm);\r\n        let selectOptionsCoreq = courses[selectedTerm];\r\n        if (selectOptionsCoreq == null){\r\n            selectOptionsCoreq = [];\r\n        }\r\n        selectOptionsCoreq = selectOptionsCoreq\r\n        .filter(course => {\r\n            return course.code !== selectedCourse.code && selectedCoreqList.includes(course.code) ;\r\n        });\r\n        \r\n\r\n        \r\n        setState({\r\n            ...state,\r\n            prereqCourses: selectOptionsPrereq.map(c => getSelectOption(c)),\r\n            coreqCourses: selectOptionsCoreq.map(c => getSelectOption(c)),\r\n        });\r\n        \r\n            \r\n        \r\n    }\r\n\r\n\r\n\r\n        const shouldShow = (selectedCourse !== null);\r\n        \r\n        if (!shouldShow){\r\n            return (\r\n                <StyledContainer>\r\n                    <h2>Course Details</h2>\r\n                    <p>You must select a course first</p>\r\n                    \r\n                </StyledContainer>\r\n            );\r\n        }\r\n        \r\n        \r\n\r\n\r\n    \r\n\r\n        // get the available options for the prereq courses\r\n        let selectPrereq = courses.slice(0, selectedTerm);\r\n        let selectOptionsPrereq = [].concat.apply([], selectPrereq); // flatten the 2d array\r\n        \r\n        selectOptionsPrereq = selectOptionsPrereq\r\n        .map((course) =>{\r\n            return getSelectOption(course);\r\n        });\r\n        \r\n        \r\n\r\n\r\n        // get the available options for the coreq courses\r\n        let selectOptionsCoreq = courses[selectedTerm];\r\n        \r\n        if (selectOptionsCoreq == null){\r\n            selectOptionsCoreq = [];\r\n        }\r\n        selectOptionsCoreq = selectOptionsCoreq\r\n        .filter(course => {\r\n            return course.code !== selectedCourse.code;\r\n        })\r\n        .map(course =>{\r\n            return getSelectOption(course);\r\n        });\r\n        \r\n\r\n\r\n       \r\n        const form = \r\n                <form\r\n                onSubmit={onSubmit}\r\n                sytle={formStyle}\r\n                className=\"sideViewForm\"\r\n                >\r\n                    \r\n                    \r\n                    <div>\r\n                        <label>Prerequisites</label>\r\n                        <br/>\r\n                        <StyledButtonShow\r\n                            style={buttonShowStyle}\r\n                            type=\"button\"\r\n                            onClick={handleClickShowPrereq.bind(this, selectedCourse.code)}\r\n                        >Highlight Pre-requisites</StyledButtonShow>\r\n                        <StyledSelect \r\n                            \r\n                            styles={customStyles}\r\n                            onChange={onChange}\r\n                            name=\"prereqCourses\"\r\n                            isMulti \r\n                            options={selectOptionsPrereq}\r\n                            value={state.prereqCourses}\r\n                        />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label>Corequisites</label>\r\n                        <br/>\r\n                        <StyledButtonShow \r\n                            style={buttonShowStyle}\r\n                            type=\"button\"\r\n                            onClick={handleClickShowCoreq.bind(this, selectedCourse.code)}\r\n                        >Highlight Co-requisites</StyledButtonShow>\r\n                        <StyledSelect \r\n                            \r\n                            styles={customStyles}\r\n                            onChange={onChange}\r\n                            name=\"coreqCourses\"\r\n                            isMulti \r\n                            options={selectOptionsCoreq}\r\n                            value={state.coreqCourses}\r\n                        />\r\n                    </div>\r\n                \r\n                    <div style={{textAlign:'center', fontWeight:'bold'}}>\r\n                        Remember to click accept changes after making changes\r\n                    </div>\r\n\r\n   \r\n                    <StyledButtonSave type=\"submit\">Accept Changes</StyledButtonSave>\r\n  \r\n                         \r\n                </form>\r\n                ;\r\n\r\n\r\n\r\n\r\n        return (\r\n            <StyledContainer>\r\n                \r\n                <h2>Course Details</h2>\r\n                <h3>For course: {selectedCourse.code}</h3>\r\n                    \r\n                <StyleResponsiveContainer>\r\n                    {form}\r\n                    {/* <Progression\r\n                            prereq={prereq}\r\n                            selectedCourse={selectedCourse}\r\n                    />   */}\r\n                </StyleResponsiveContainer>\r\n            </StyledContainer>\r\n        );\r\n        \r\n    \r\n}   \r\n\r\n\r\n// PropTypes\r\nSideView.propType = {\r\n    sendNotification: PropTypes.func.isRequired,\r\n    handleClickEditCourse: PropTypes.func.isRequired,\r\n    courses: PropTypes.array.isRequired,\r\n    selectedTerm: PropTypes.number.isRequired,\r\n    selectedCourse: PropTypes.object.isRequired,\r\n    prereq: PropTypes.array.isRequired,\r\n    coreq: PropTypes.array.isRequired,\r\n    handleClickEditPrereq: PropTypes.func.isRequired,\r\n    handleClickEditCoreq: PropTypes.func.isRequired,\r\n}\r\n\r\n// const sideViewStyle = {\r\n//     background: 'lightgrey',\r\n//     width: '100%',\r\n//     textAlign: 'center',\r\n//     border: '2px solid grey',    \r\n//     overflowY: 'scroll',\r\n//     height: '100%', \r\n// }\r\n\r\nconst buttonShowStyle = {\r\n    \r\n}\r\n\r\n\r\nconst formStyle = {\r\n    border: 'none',\r\n    margin: '0 auto',\r\n}\r\n\r\n// Custom style for 'react-select', uses Emotion JS\r\nconst customStyles = {\r\n    container: (provided, state) => ({\r\n        ...provided,\r\n        // none of react-select's styles are passed to <Control />\r\n        \r\n      }),\r\n\r\n      control: (provided, state) => ({\r\n        ...provided,\r\n        overflowY: 'scroll',\r\n        height: 30,\r\n        boxShadow: state.isFocused? '0 0 0 1px #16123a': 'none',\r\n        //borderColor: state.isFocused || state.isSelected || state.isActive ? '#3CB371': 'transparent',\r\n        //boxShadow: state.isFocused || state.isSelected || state.isActive ? '0 0 0 .2rem rgba(60,179,113, 0.2)': 'none',\r\n        //outline: state.isFocused || state.isSelected ||  state.isActive ? '1px solid rgba(60,179,113, 0.2)': 'none',\r\n    }),\r\n      input: (provided, state) => ({\r\n          ...provided,\r\n      })\r\n\r\n\r\n}\r\n\r\n\r\nexport default SideView\r\n","C:\\Users\\josh_\\reactapps\\gt-app\\src\\componenets\\SaveChanges.js",[],"C:\\Users\\josh_\\reactapps\\gt-app\\src\\componenets\\CGPACalculator.js",[],"C:\\Users\\josh_\\reactapps\\gt-app\\src\\componenets\\ResetChanges.js",[],"C:\\Users\\josh_\\reactapps\\gt-app\\src\\componenets\\ProgramMap.js",[],"C:\\Users\\josh_\\reactapps\\gt-app\\src\\componenets\\GradeFilter.js",[],"C:\\Users\\josh_\\reactapps\\gt-app\\src\\componenets\\GPASettings.js",[],"C:\\Users\\josh_\\reactapps\\gt-app\\src\\redux\\settings\\settingsTypes.js",[],"C:\\Users\\josh_\\reactapps\\gt-app\\src\\componenets\\SideViewHeader.js",[],"C:\\Users\\josh_\\reactapps\\gt-app\\src\\redux\\focus\\focusTypes.js",[],"C:\\Users\\josh_\\reactapps\\gt-app\\src\\redux\\course\\courseTypes.js",[],"C:\\Users\\josh_\\reactapps\\gt-app\\src\\styles\\components\\programmapStyles.js",[],"C:\\Users\\josh_\\reactapps\\gt-app\\src\\styles\\components\\sideviewStyles.js",[],"C:\\Users\\josh_\\reactapps\\gt-app\\src\\componenets\\Term.js",[],"C:\\Users\\josh_\\reactapps\\gt-app\\src\\componenets\\Progression.js",["208"],"import * as Arborel from '../lib/arboreal';\r\nimport { buildTreeObject } from '../lib/progression';\r\nimport React, { useEffect, useRef} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CourseClass from './model/CourseClass';\r\nimport { StyledCanvasContainer } from '../styles/components/sideviewStyles';\r\n\r\nfunction Node(props) {\r\n    const {ctx, x, y, radius, text} = props;\r\n    \r\n    if (props.parentX && props.parentY){\r\n        ctx.moveTo(x, y);\r\n        ctx.lineTo(props.parentX, props.parentY);\r\n        ctx.stroke();\r\n    }\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, radius, 0, 2 * Math.PI);\r\n    ctx.stroke();\r\n    ctx.font = \"10px Arial\";\r\n    ctx.fillText(text, x, y);\r\n    console.log(\"RERENDERED\");\r\n}\r\n\r\n\r\nfunction Progression(props) {\r\n    const prereqObject = buildTreeObject(props.prereq, props.selectedCourse.code);\r\n    //console.log(props.prereq)\r\n    //console.log(prereqObject);\r\n    \r\n    console.log(\"RERENDERED PROGRESSION\");\r\n    var tree = Arborel.Arboreal.parse(prereqObject, 'prerequisites');\r\n    //let value = [];\r\n    let leafNodes = [];\r\n    let maxDepth = 0;\r\n    let maxSiblingCount = 1;\r\n    let nodeRadius = 20;\r\n    let distanceBetweenNodes = nodeRadius * 2 + 1;\r\n    let theCanvas = useRef(null);\r\n    let theContainer = useRef(null);\r\n    \r\n    tree.traverseDown(node => {\r\n        if (node.depth > maxDepth){\r\n            maxDepth = node.depth;\r\n        }\r\n        if (node.children.length > maxSiblingCount){\r\n            maxSiblingCount = node.children.length;\r\n        }\r\n    });\r\n    let rootNodePosition = distanceBetweenNodes \r\n    * Math.pow(maxSiblingCount, maxDepth);\r\n    let canvasDimentionY = rootNodePosition  * 2 + 100; // 100px padding\r\n    let canvasDimentionX = (distanceBetweenNodes + 50) * (maxDepth + 1) + 100;\r\n\r\n    function updateState(){\r\n        const ctx = theCanvas.current.getContext('2d');\r\n        ctx.clearRect(0,0, canvasDimentionX, canvasDimentionY);\r\n        \r\n        console.log(\"CANVAS CLEARED\");\r\n        tree\r\n        //.find(node => node.data.courseCode === nodeName)\r\n        .traverseDown(iterator);\r\n    }\r\n    \r\n    function iterator (node) {\r\n        let numOfSiblings = (node.parent)? node.parent.children.length : 1;\r\n        let positionInSibling = 0;\r\n        if (node.parent){\r\n            positionInSibling = node.parent.children.findIndex(n => n.data.courseCode === node.data.courseCode);\r\n        }\r\n\r\n        let nodePosition = 0;\r\n        if (numOfSiblings % 2 === 0){\r\n            let x = numOfSiblings / 2 - 0.5 - positionInSibling;\r\n            if (x < 0){\r\n                x = Math.floor(x);\r\n            }else{\r\n                x = Math.ceil(x);\r\n            }\r\n            nodePosition = x * -1;\r\n        }else{\r\n            nodePosition = (Math.floor(numOfSiblings / 2) - positionInSibling) * -1;\r\n        }\r\n        \r\n        //node.data.yPos = (node.parent)? node.parent.data.yPos + nodePosition * distanceBetweenNodes * maxSiblingCount : distanceBetweenNodes * maxDepth * maxSiblingCount;\r\n        \r\n        node.data.yPos = (node.parent)? node.parent.data.yPos \r\n        + nodePosition * distanceBetweenNodes \r\n        * Math.pow(maxSiblingCount, maxDepth - node.depth) \r\n        : rootNodePosition;\r\n        \r\n        // var depth = \"\", i;\r\n        // for (i = 1; i <= node.depth; i++) depth += \"--\";\r\n        //console.log([depth, node.data.courseCode].join(\" \"));\r\n        //value.push(<span>{[depth, node.data.courseCode].join(\">\")}</span>);\r\n        //value.push(node.data.courseCode);\r\n        // value.push(\r\n        // <StyledCanvasNode \r\n        //     x={(maxDepth - node.depth) * (distanceBetweenNodes + 20)} \r\n        //     y={node.data.yPos} \r\n        //     radius={nodeRadius}\r\n        // >\r\n        //     {node.data.courseCode} -//- {nodePosition}\r\n        // </StyledCanvasNode>\r\n        // );\r\n        const ctx = theCanvas.current.getContext('2d');\r\n        if (node.parent){\r\n            Node({\r\n                ctx, \r\n                y: node.data.yPos + 50, \r\n                x: (maxDepth - node.depth) * (distanceBetweenNodes + 20) + 50, \r\n                radius: nodeRadius, \r\n                text: `${node.data.courseCode}`, \r\n                parentY: node.parent.data.yPos + 50, \r\n                parentX: (maxDepth - node.parent.depth) * (distanceBetweenNodes + 20) + 50\r\n            });\r\n        }else{\r\n            Node({\r\n                ctx, \r\n                y: node.data.yPos + 50, \r\n                x: (maxDepth - node.depth) * (distanceBetweenNodes + 20) + 50, \r\n                radius: nodeRadius, \r\n                text: `${node.data.courseCode}`\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    function iteratorLeafNodes (node) {\r\n        if (node.children.length === 0){\r\n            leafNodes.push(node.data.courseCode);\r\n        }\r\n    }\r\n\r\n\r\n    // find all the leafNodes\r\n    tree\r\n    .traverseDown(iteratorLeafNodes);\r\n\r\n    const selectedCoursePrereq = props.prereq[props.selectedCourse.code];\r\n    useEffect(() => {\r\n        if (theContainer){\r\n            theContainer.current.scrollTo(0,rootNodePosition);\r\n        }\r\n        updateState();\r\n    },[props.selectedCourse, selectedCoursePrereq]);\r\n    \r\n    //value = value.reverse()\r\n    return (\r\n        <div>\r\n        <h2>Course prerequisites</h2>\r\n        \r\n        <StyledCanvasContainer\r\n            ref={theContainer}\r\n        >\r\n            {/* {value} */}\r\n            <canvas \r\n                //  style={{ background: 'darkgrey', border: '2px solid black'}} \r\n                ref={theCanvas} \r\n                width={canvasDimentionX} \r\n                height={canvasDimentionY}\r\n            ></canvas>\r\n        </StyledCanvasContainer>\r\n        <br />\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\n// PropTypes\r\nProgression.propType = {\r\n    prereq: PropTypes.object.isRequired,\r\n    selectedCourse: PropTypes.objectOf(CourseClass).isRequired,\r\n}\r\n\r\nexport default Progression\r\n",["209","210"],"C:\\Users\\josh_\\reactapps\\gt-app\\src\\componenets\\AddTerm.js",[],"C:\\Users\\josh_\\reactapps\\gt-app\\src\\componenets\\RemoveTerm.js",[],"C:\\Users\\josh_\\reactapps\\gt-app\\src\\componenets\\model\\CourseClass.js",[],"C:\\Users\\josh_\\reactapps\\gt-app\\src\\hooks\\useWindowSize.js",[],"C:\\Users\\josh_\\reactapps\\gt-app\\src\\styles\\components\\animations.js",[],"C:\\Users\\josh_\\reactapps\\gt-app\\src\\componenets\\Course.js",[],"C:\\Users\\josh_\\reactapps\\gt-app\\src\\componenets\\AddCourse.js",[],"C:\\Users\\josh_\\reactapps\\gt-app\\src\\lib\\progression.js",[],"C:\\Users\\josh_\\reactapps\\gt-app\\src\\lib\\arboreal.js",["211","212","213","214"],"//!function () {\n  'use strict';\n\n  export function include (array, item) {\n    return array.indexOf(item) > -1;\n  }\n\n  export function _traverseDown (context, iterator) {\n    var doContinue = true;\n  \n    (function walkDown (node) {\n      var i, newContext;\n  \n      if (!doContinue) return;\n  \n      if (iterator(node) === false) {\n        //break the traversal loop if the iterator returns a falsy value\n        doContinue = false;\n      }\n      else {\n        for (i = 0; i < node.children.length; i++) {\n          newContext = node.children[i];\n          walkDown(newContext);\n        }\n      }\n    })(context);\n  }\n\n\n  export function _traverseUp (context, iterator) {\n    var i, node, doContinue;\n\n    while (context) {\n      if ( iterator(context) === false ) return;\n\n      for (i = 0; i < context.children.length; i++) {\n        node = context.children[i];\n        if ( iterator(node) === false ) return;\n      }\n      context = context.parent;\n    }\n  }\n  \n  \n  export function _traverse (context, iterator, callback) {\n    var visited = [],\n        callIterator = function (node) {\n          var id = node.id,\n              returned;\n  \n          if (! include(visited, id)) {\n            returned = iterator.call(node, node);\n            visited.push(id);\n  \n            if (returned === false) {\n              return returned;\n            }\n          }\n        },\n        i, node;\n  \n    callback(context, callIterator);\n  }\n  \n\n  export function _removeChild (node) {\n    var parent = node.parent, \n        child,\n        i;\n  \n    for (i = 0; i < parent.children.length; i++) {\n      child = parent.children[i];\n  \n      if (child === node) {\n        return parent.children.splice(i, 1).shift();\n      }\n    }\n  }\n  \n  export function nodeId (parent, separator) {\n    separator = separator || '/';\n    if (parent) {\n      return [parent.id, parent.children.length ].join(separator);\n    }\n    else {\n      return '0';\n    }\n  }\n  \n  \n  export function Arboreal (parent, data, id) {\n    this.depth = parent ? parent.depth + 1 : 0;\n    this.data = data || {};\n    this.parent = parent || null;\n    this.id = id || nodeId(parent);\n    this.children = [];\n  }\n  \n  Arboreal.parse = function (object, childrenAttr) {\n    var root, getNodeData = function (node) {\n          var attr, nodeData = {};\n          for (attr in node) {\n            if (attr !== childrenAttr) nodeData[attr] = node[attr];\n          }\n          return nodeData;\n        };\n  \n    (function walkDown(node, parent) {\n      var newNode, i;\n  \n      if (!parent) {\n        newNode = root = new Arboreal(null, getNodeData(node));\n      } else {\n        newNode = new Arboreal(parent, getNodeData(node));\n        parent.children.push(newNode);\n      }\n      if (childrenAttr in node) {\n        for (i = 0; i < node[childrenAttr].length; i++ ) {\n          walkDown(node[childrenAttr][i], newNode);\n        }\n      }\n    })(object);\n  \n    return root;\n  \n  };\n  \n  Arboreal.prototype.appendChild = function (data, id) {\n    var child = new Arboreal(this, data, id);\n    this.children.push(child);\n    return this;\n  };\n  \n  Arboreal.prototype.removeChild = function (arg) {\n    if (typeof arg === 'number' && this.children[arg]) {\n      return this.children.splice(arg, 1).shift();\n    }\n    if (arg instanceof Arboreal) {\n      return _removeChild(arg);\n    }\n    throw new Error(\"Invalid argument \"+ arg);\n  };\n  \n  Arboreal.prototype.remove = function () {\n    return _removeChild(this);\n  };\n  \n  \n  Arboreal.prototype.root = function () {\n    var node = this;\n  \n    if (!node.parent) {\n      return this;\n    }\n  \n    while (node.parent) {\n      node = node.parent;\n    }\n    return node;\n  };\n  \n  Arboreal.prototype.isRoot = function () {\n    return !this.parent;\n  };\n  \n  Arboreal.prototype.traverseUp = function (iterator) {\n    _traverse(this, iterator, _traverseUp);\n  };\n  \n  Arboreal.prototype.traverseDown = function (iterator) {\n    _traverse(this, iterator, _traverseDown);\n  };\n  \n  Arboreal.prototype.toString = function () {\n    var lines = [];\n  \n    this.traverseDown(function (node) {\n      var separator = '|- ', indentation = '',  i;\n  \n      if (node.depth === 0) {\n        lines.push(node.id);\n        return;\n      }\n      for (i = 0; i < node.depth; i++) {\n        indentation += ' ';\n      }\n      lines.push( indentation + separator + node.id);\n    });\n    return lines.join(\"\\n\");\n  };\n  \n  Arboreal.prototype.find = function (finder) {\n    var match = null,\n        iterator = (typeof finder === 'function') ?\n          finder : function (node) {\n            if (node.id === finder) {\n              match = node;\n              return false;\n            }\n          };\n  \n    this.traverseDown(function (node) {\n      if (iterator.call(this, node)) {\n        match = node;\n        return false;\n      }\n    });\n  \n    return match;\n  };\n  \n  Arboreal.prototype.path = function (path, separator) {\n    separator = separator || '/';\n    //allow path to begin with \n    if (path[0] === separator) path = path.substring(1);\n  \n    var indexes = path.split(separator),\n        index = null,\n        context = this,\n        i;\n  \n    for (i = 0; i < indexes.length; i++) {\n      index = parseInt(indexes[i], 10);\n      context = (context.children.length && context.children.length > index) ? \n        context.children[index] : null;\n    }\n  \n    return context;\n  };\n  \n  Arboreal.prototype.toArray = function () {\n    var nodeList = [];\n    this.traverseDown(function (node) {\n      nodeList.push(node);\n    });\n    return nodeList;\n  };\n\n  Arboreal.prototype.__defineGetter__(\"length\", function () {\n    return this.toArray().length;\n  });\n\n\n  // if (typeof module !== 'undefined' && module.exports) {\n  //   module.exports = Arboreal;\n  // } else {\n  //   this.Arboreal = Arboreal;\n  // }\n\n//}(this);\n","C:\\Users\\josh_\\reactapps\\gt-app\\src\\componenets\\ImportExportSettings.js",["215","216"],"import React, { useState, useRef } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport FileSaver, { saveAs } from 'file-saver';\r\nimport { Button, Input, Label, FormGroup } from 'reactstrap'\r\nimport { loadCourses } from '../redux/course/courseActions';\r\nimport CourseClass from './model/CourseClass';\r\nimport { StyledFileInput } from '../styles/components/appStyles';\r\nimport { notify } from './Notification';\r\nvar obj_csv = {\r\n    size: 0,\r\n    dataFile: []\r\n}\r\n\r\nvar loadCoursesPayload = {\r\n    courses: [],\r\n    prereq: {},\r\n    coreq: []\r\n}\r\n\r\nfunction import_csv(input, callback) {\r\n    console.log(input);\r\n    if (input.files && input.files[0]){\r\n        let reader = new FileReader();\r\n        reader.readAsBinaryString(input.files[0]);\r\n        reader.onload = function(e) {\r\n            console.log(e);\r\n            obj_csv.size = e.total;\r\n            obj_csv.dataFile = e.target.result;\r\n            console.log(obj_csv.dataFile);\r\n            parseCSVData(obj_csv.dataFile);\r\n            callback();\r\n        }\r\n    }\r\n}\r\n\r\nfunction parseCSVData(data) {\r\n    let csvData = [];\r\n    let lbreak = data.split(\"\\n\");\r\n    let currentRead = \"\";\r\n    let courses = [];\r\n    let prereq = {};\r\n    let coreq = [];\r\n\r\n    lbreak.forEach(res => {\r\n        // csvData.push(res.split(\",\"));\r\n        if (res === \"TERMS\" || res === \"PREREQ\" || res === \"COREQ\"){\r\n            currentRead = res;\r\n            return;\r\n        }\r\n        \r\n        if (currentRead === \"TERMS\"){\r\n\r\n            if (res.startsWith('name,')){\r\n                return;\r\n            }\r\n            if (res === \"-\"){\r\n                // new term\r\n                courses.push([]);\r\n                return;\r\n            }\r\n            let course = res.split(\",\");\r\n            if (course.length === 4 && courses.length > 0){\r\n                courses[courses.length - 1].push(new CourseClass(course[0], course[1], Number(course[2]), Number(course[3])));\r\n            }\r\n\r\n        }else if (currentRead === \"PREREQ\"){\r\n            let pC = res.split(\",\");\r\n            if (pC.length > 1){\r\n                prereq[pC[0]] = pC.slice(1);\r\n            }\r\n        }else if (currentRead === \"COREQ\"){\r\n            let cC = res.split(\",\");\r\n            if (cC.length > 1){\r\n                coreq.push(cC);\r\n            }\r\n        }\r\n\r\n    });\r\n    //console.table(csvData);\r\n    console.log(courses, prereq, coreq);\r\n    loadCoursesPayload.courses = courses;\r\n    loadCoursesPayload.prereq = prereq;\r\n    loadCoursesPayload.coreq = coreq;\r\n}\r\n\r\nfunction export_csv(arrayHeader, terms, prereq, coreq, delimiter, fileName) {\r\n    let csv = \"TERMS\\n\";\r\n    let header = arrayHeader.join(delimiter) + \"\\n\";\r\n    csv += header;\r\n    terms.forEach(term => {\r\n        csv += \"-\\n\";\r\n        term.forEach(course => {\r\n            let row = [];\r\n            for (let index in arrayHeader){\r\n                if (course.hasOwnProperty(arrayHeader[index])) {\r\n                    row.push(course[arrayHeader[index]]);\r\n                }\r\n            }\r\n            csv += row.join(delimiter)+\"\\n\";\r\n        })\r\n        \r\n    })\r\n\r\n    csv += \"PREREQ\\n\";\r\n    for (let key in prereq) {\r\n        if (prereq.hasOwnProperty(key)){\r\n            let row = [];\r\n            row.push(key);\r\n            prereq[key].forEach(coursecode => {\r\n                row.push(coursecode);\r\n            })\r\n            csv += row.join(delimiter)+\"\\n\";\r\n        }\r\n    }\r\n    csv += \"COREQ\\n\";\r\n    coreq.forEach(coreqset => {\r\n        csv += coreqset.join(delimiter)+\"\\n\";\r\n    })\r\n\r\n    let csvData = new Blob([csv], { type: 'text/csv' });  \r\n    let csvUrl = URL.createObjectURL(csvData);\r\n\r\n    let hiddenElement = document.createElement('a');\r\n    hiddenElement.href = csvUrl;\r\n    hiddenElement.target = '_blank';\r\n    hiddenElement.download = fileName + '.csv';\r\n    hiddenElement.click();\r\n}\r\n\r\nfunction import_json (input, callback) {\r\n    console.log(input);\r\n    if (input.files && input.files[0]){\r\n        let reader = new FileReader();\r\n        reader.readAsText(input.files[0], 'UTF-8');\r\n        reader.onload = function(e) {\r\n            console.log(e);\r\n            obj_csv.size = e.total;\r\n            obj_csv.dataFile = e.target.result;\r\n            console.log(obj_csv.dataFile);\r\n            if (parseJSONData(obj_csv.dataFile)){\r\n                callback();\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction parseJSONData(data) {\r\n    try {\r\n        let obj = JSON.parse(data);\r\n        console.log(obj);\r\n        if (obj.courses && obj.prereq && obj.coreq){\r\n            loadCoursesPayload.courses = obj.courses;\r\n            loadCoursesPayload.prereq = obj.prereq;\r\n            loadCoursesPayload.coreq = obj.coreq;\r\n            return true;\r\n        }\r\n        return false;\r\n    }catch(e){\r\n        return false;\r\n    }\r\n    \r\n}\r\n\r\nfunction export_json (courses, prereq, coreq, fileName){\r\n    var json = JSON.stringify({courses, prereq, coreq });\r\n    var blob = new Blob([json], { type:\"application/json;charset=utf-8\"});\r\n    FileSaver.saveAs(blob, fileName+\".json\");\r\n}\r\n\r\nfunction ImportExportSettings() {\r\n    const [type, setType] = useState('json');\r\n    const { courses, prereq, coreq } = useSelector(state => state.courses)\r\n    const dispatch = useDispatch();\r\n    const fileUploadRef = useRef();\r\n\r\n    const checkBoxChecked = (e) => {\r\n        setType(e.target.value);\r\n    }\r\n\r\n    const handleImport = () => {\r\n        if (type === 'json') {\r\n            if (fileUploadRef.current){\r\n                import_json(fileUploadRef.current, () => {\r\n                    dispatch(loadCourses(\r\n                        loadCoursesPayload.courses,\r\n                        loadCoursesPayload.prereq,\r\n                        loadCoursesPayload.coreq\r\n                    ));\r\n                    notify('Import successful!', 'success');\r\n                });\r\n            }\r\n        }else if (type === 'csv'){\r\n            if (fileUploadRef.current){\r\n                import_csv(fileUploadRef.current, () => {\r\n                    dispatch(loadCourses(\r\n                        loadCoursesPayload.courses,\r\n                        loadCoursesPayload.prereq,\r\n                        loadCoursesPayload.coreq\r\n                    ));\r\n                    notify('Import successful!', 'success');\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleExport = () => {\r\n        if (type === 'json') {\r\n            export_json(courses, prereq, coreq, 'courses');\r\n        }else if (type === 'csv'){\r\n            export_csv(['name', 'code', 'grade', 'credits'], courses, prereq, coreq, ',', 'courses');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"\">\r\n            <Label>Type</Label>\r\n            <FormGroup check>\r\n                <Label check>\r\n                    <Input type=\"radio\" name=\"type\" value=\"json\" checked={type === 'json'} onChange={checkBoxChecked}/>{' '}\r\n                    JSON\r\n                </Label>\r\n            </FormGroup>\r\n            <FormGroup check>\r\n                <Label check>\r\n                    <Input type=\"radio\" name=\"type\" value=\"csv\" checked={type === 'csv'} onChange={checkBoxChecked}/>{' '}\r\n                    CSV\r\n                </Label>\r\n            </FormGroup>\r\n            \r\n            Upload File:{' '}\r\n            <StyledFileInput type=\"file\" id=\"uploadfile\" ref={fileUploadRef} />{' '}\r\n            <Button outline color=\"primary\" onClick={handleImport}>Import</Button>{' '}\r\n            <Button outline color=\"secondary\" onClick={handleExport}>Export</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImportExportSettings\r\n","C:\\Users\\josh_\\reactapps\\gt-app\\src\\componenets\\CourseAnalyzer.js",[],"C:\\Users\\josh_\\reactapps\\gt-app\\src\\styles\\themes\\themes.js",[],{"ruleId":"217","replacedBy":"218"},{"ruleId":"219","replacedBy":"220"},{"ruleId":"221","severity":1,"message":"222","line":92,"column":8,"nodeType":"223","endLine":92,"endColumn":63,"suggestions":"224"},{"ruleId":"221","severity":1,"message":"225","line":145,"column":7,"nodeType":"223","endLine":145,"endColumn":51,"suggestions":"226"},{"ruleId":"217","replacedBy":"227"},{"ruleId":"219","replacedBy":"228"},{"ruleId":"229","severity":1,"message":"230","line":2,"column":3,"nodeType":"231","messageId":"232","endLine":2,"endColumn":16,"fix":"233"},{"ruleId":"234","severity":1,"message":"235","line":31,"column":18,"nodeType":"236","messageId":"237","endLine":31,"endColumn":28},{"ruleId":"234","severity":1,"message":"238","line":60,"column":9,"nodeType":"236","messageId":"237","endLine":60,"endColumn":10},{"ruleId":"234","severity":1,"message":"239","line":60,"column":12,"nodeType":"236","messageId":"237","endLine":60,"endColumn":16},{"ruleId":"234","severity":1,"message":"240","line":3,"column":21,"nodeType":"236","messageId":"237","endLine":3,"endColumn":27},{"ruleId":"234","severity":1,"message":"241","line":37,"column":9,"nodeType":"236","messageId":"237","endLine":37,"endColumn":16},"no-native-reassign",["242"],"no-negated-in-lhs",["243"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateState'. Either include it or remove the dependency array.","ArrayExpression",["244"],"React Hook useEffect has missing dependencies: 'rootNodePosition' and 'updateState'. Either include them or remove the dependency array.",["245"],["242"],["243"],"strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"246","text":"247"},"no-unused-vars","'doContinue' is defined but never used.","Identifier","unusedVar","'i' is defined but never used.","'node' is defined but never used.","'saveAs' is defined but never used.","'csvData' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},[19,32],"","Update the dependencies array to be: [prereq, coreq, courses, selectedCourse, selectedTerm, updateState]",{"range":"252","text":"253"},"Update the dependencies array to be: [props.selectedCourse, rootNodePosition, selectedCoursePrereq, updateState]",{"range":"254","text":"255"},[2575,2630],"[prereq, coreq, courses, selectedCourse, selectedTerm, updateState]",[5107,5151],"[props.selectedCourse, rootNodePosition, selectedCoursePrereq, updateState]"]